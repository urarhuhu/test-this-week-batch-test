{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.75/local-library-setup.md",
  "source_file_content_hash": "089541127023d789cfdc89bc43d4bbc29573495da192317eb0e54cbcfff3b178",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: local-library-setup\ntitle: Local libraries setup\n---",
      "source_content_hash": "173f08f7da8e0d4989aecf3730749e52aa0f1d957bd88b5b2866425a672f32f9",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "A local library is a library containing views or modules that's local to your app and not published to a registry. This is different from the traditional setup for view and modules in the sense that a local library is decoupled from your app's native code.",
      "source_content_hash": "335e2db31a73ab5bc7d7fc6ed49c9142d03e73ef76fd26cfdc92d7c98faffbbf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "本地函式庫是指包含視圖或模組且僅限於應用程式內部使用、未發佈至註冊表的程式庫。與傳統視圖和模組的設置不同，本地函式庫與應用程式的原生代碼是解耦的。"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "The local library is created outside of the `android/` and `ios/` folders and makes use of autolinking to integrate with your app. The structure with a local library may look like this:",
      "source_content_hash": "19685b545b48cd9cd66967440c6f3852ca6a3218e0df61948d629cc3fdb1933e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "本地函式庫建立於 `android/` 和 `ios/` 目錄之外，並利用自動連結（autolinking）機制與應用程式整合。包含本地函式庫的專案結構可能如下："
      }
    },
    {
      "segment_id": "ee201347",
      "source_content": "```plaintext\nMyApp\n├── node_modules\n├── modules <-- folder for your local libraries\n│ └── awesome-module <-- your local library\n├── android\n├── ios\n├── src\n├── index.js\n└── package.json\n```",
      "source_content_hash": "22e65ceb1f284a0caa07d766059433c5ccf54684a96a32788700d018d6c7bec8",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ee201347"
      }
    },
    {
      "segment_id": "98cfbd53",
      "source_content": "Since a local library's code exists outside of `android/` and `ios/` folders, it makes it easier to upgrade React Native versions in the future, copy to other projects etc.",
      "source_content_hash": "fc8d18331cdd9a26e7d8d6581eae7156338cb98eb91b4ddcebc7c1c2f8d58752",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "由於本地函式庫的代碼位於 `android/` 和 `ios/` 目錄之外，未來升級 React Native 版本、複製到其他專案等操作會更加容易。"
      }
    },
    {
      "segment_id": "ccc88b4c",
      "source_content": "To create local library we will use [create-react-native-library](https://callstack.github.io/react-native-builder-bob/create). This tool contains all the necessary templates.",
      "source_content_hash": "f75bc6999bf6fb177e01529ec0ab0ef00d59c525c16dc2f5ce60bbcd05786181",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "我們將使用 [create-react-native-library](https://callstack.github.io/react-native-builder-bob/create) 工具來建立本地函式庫。此工具包含所有必要的模板。"
      }
    },
    {
      "segment_id": "3c36424c",
      "source_content": "### Getting Started",
      "source_content_hash": "4467215509db0bd0e0f61cf6ee2efa3316c8285b2a46d4449ff85f9ef85923d9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 開始使用"
      }
    },
    {
      "segment_id": "26524352",
      "source_content": "Inside your React Native application's root folder, run the following command:",
      "source_content_hash": "5f8f2fbd76229b8a30eb3ba630cf5606232560807972f640130aef7b2fe5099d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 React Native 應用程式的根目錄下執行以下命令："
      }
    },
    {
      "segment_id": "b017063d",
      "source_content": "```shell\nnpx create-react-native-library@latest awesome-module\n```",
      "source_content_hash": "4636a34b581b330661766abf10ab184de5bd76f168741096e76d481a41a22530",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b017063d"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "Where `awesome-module` is the name you would like for the new module. After going through the prompts, you will have a new folder called `modules` in your project's root directory which contains the new module.",
      "source_content_hash": "42923b18d8fe3e9c62ccb1cec725344d43f35c408aa782ef65c63fe805c3c355",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "其中 `awesome-module` 是新模組的名稱。完成提示後，專案根目錄會新增一個名為 `modules` 的資料夾，其中包含新建立的模組。"
      }
    },
    {
      "segment_id": "80d9e13c",
      "source_content": "### Linking",
      "source_content_hash": "b2e10361bb0e7ac6a297be3ca8025795efc448d4d2d02521883f6829263952d9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 連結"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "By default, the generated library is automatically linked to the project using `link:` protocol when using Yarn and `file:` when using npm:",
      "source_content_hash": "65d4c1448b835f28e4f65937401767d86aac276366bf5c07dc8521af7ad2116f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "預設情況下，生成的函式庫會根據使用的套件管理器自動連結至專案：使用 Yarn 時採用 `link:` 協議，使用 npm 時採用 `file:` 協議："
      }
    },
    {
      "segment_id": "ff6ab177",
      "source_content": "<Tabs groupId=\"package-manager\" queryString defaultValue={constants.defaultPackageManager} values={constants.packageManagers}>\n\n<TabItem value=\"npm\">\n\n```json\n\"dependencies\": {\n  \"awesome-module\": \"file:./modules/awesome-module\"\n}\n```\n\n</TabItem>\n<TabItem value=\"yarn\">\n\n```json\n\"dependencies\": {\n  \"awesome-module\": \"link:./modules/awesome-module\"\n}\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "fb16425edb1317234c3e765381a1a08fbf625e9a24ac3204ccdd4677e0959ec0",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ff6ab177"
      }
    },
    {
      "segment_id": "79ad944d",
      "source_content": "This creates a symlink to the library under `node_modules` which makes autolinking work.",
      "source_content_hash": "0dab8768218449b30f1130d83c272a79f376a38a7772f839b73f19fb81963cc6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這會在 `node_modules` 下建立指向函式庫的符號連結，使自動連結機制生效。"
      }
    },
    {
      "segment_id": "8c6d7ee7",
      "source_content": "### Installing dependencies",
      "source_content_hash": "e8affa7f04b75441eac5e450f3ffb93633c5d643224f76e69fa7e664d9b9de8d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 安裝依賴項"
      }
    },
    {
      "segment_id": "06e24cc0",
      "source_content": "To link the module you need to install dependencies:",
      "source_content_hash": "3093a5f2380fe1ffc912b75ba2c712cb1bada512279729ccb547e04e986cab1e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "要連結模組需先安裝其依賴項："
      }
    },
    {
      "segment_id": "61a24b68",
      "source_content": "<Tabs groupId=\"package-manager\" queryString defaultValue={constants.defaultPackageManager} values={constants.packageManagers}>\n\n<TabItem value=\"npm\">\n\n```shell\nnpm install\n```\n\n</TabItem>\n<TabItem value=\"yarn\">\n\n```shell\nyarn install\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "80136b2eb5517a73df95215c2978130f897d836e73970e0472774f455d55bc73",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_61a24b68"
      }
    },
    {
      "segment_id": "2e771fd0",
      "source_content": "### Using module inside your app",
      "source_content_hash": "df0c71e7da97c06425418811012f348ea82dfb9c7b92a7a8362f6a9c141fe8b6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 在應用程式中使用模組"
      }
    },
    {
      "segment_id": "0750bfa1",
      "source_content": "To use the module inside your app, you can import it by its name:",
      "source_content_hash": "2c12bbcc49d65e4fd5dd1611384c6cd10d9769c7146a4428b6c807b063f37825",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在應用程式中可透過模組名稱直接導入使用："
      }
    },
    {
      "segment_id": "f8065412",
      "source_content": "```js\nimport {multiply} from 'awesome-module';\n```",
      "source_content_hash": "3790daed2c7d50a01ddec57e837146ba634cb1b3eeb4914e5a0a9ebee06f4a68",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_f8065412"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.75/local-library-setup.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.521504+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "089541127023d789cfdc89bc43d4bbc29573495da192317eb0e54cbcfff3b178"
  }
}