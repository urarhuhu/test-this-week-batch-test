{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.73/intro-react-native-components.md",
  "source_file_content_hash": "9a46af736c543bdc1415f21c4e0adff78aec147448beacd28524466181ae92e3",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: intro-react-native-components\ntitle: Core Components and Native Components\ndescription: 'React Native lets you compose app interfaces using Native Components. Conveniently, it comes with a set of these components for you to get started with right now—the Core Components!'\n---",
      "source_content_hash": "4881ca40a30b865a4df41023ee3beb03b5f3971ea1e1123f36d89b7dd108f848",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "10c4cb47",
      "source_content": "import ThemedImage from '@theme/ThemedImage';",
      "source_content_hash": "7a1d026081fa4bae8c3d63bc26cbc41ae5de6833363eeb2ef81d44184753784c",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_10c4cb47"
      }
    },
    {
      "segment_id": "53eaf0e1",
      "source_content": "React Native is an open source framework for building Android and iOS applications using [React](https://reactjs.org/) and the app platform’s native capabilities. With React Native, you use JavaScript to access your platform’s APIs as well as to describe the appearance and behavior of your UI using React components: bundles of reusable, nestable code. You can learn more about React in the next section. But first, let’s cover how components work in React Native.",
      "source_content_hash": "d3888cfa605997cf2c95b2012b13d00771472b401c7a017f6339955a9180a41f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 是一個開源框架，用於使用 [React](https://reactjs.org/) 和平台的原生功能來構建 Android 和 iOS 應用程式。透過 React Native，你可以使用 JavaScript 來存取平台的 API，並使用 React 元件來描述 UI 的外觀和行為：這些是可重複使用、可嵌套的程式碼塊。你可以在下一節中了解更多關於 React 的內容。但首先，讓我們來看看 React Native 中的元件是如何運作的。"
      }
    },
    {
      "segment_id": "8a5f6a7b",
      "source_content": "## Views and mobile development",
      "source_content_hash": "26984dac818668a5b1a09a28d1a641b3fa5827049f886f061ad6f5670cc6ce03",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 視圖與移動開發"
      }
    },
    {
      "segment_id": "180bddb1",
      "source_content": "In Android and iOS development, a **view** is the basic building block of UI: a small rectangular element on the screen which can be used to display text, images, or respond to user input. Even the smallest visual elements of an app, like a line of text or a button, are kinds of views. Some kinds of views can contain other views. It’s views all the way down!",
      "source_content_hash": "d5f0aec8958a324da7b163a5ce42221271f459ff2afd9999d564584b423a8e5d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 Android 和 iOS 開發中，**視圖（view）** 是 UI 的基本構建塊：螢幕上的一個小矩形元素，可以用來顯示文字、圖片或響應用戶輸入。即使是應用中最小的視覺元素，如一行文字或一個按鈕，都是視圖的一種。某些類型的視圖可以包含其他視圖。這就是所謂的「視圖層層嵌套」！"
      }
    },
    {
      "segment_id": "4b7cc23c",
      "source_content": "<figure>\n  <img src=\"/docs/assets/diagram_ios-android-views.svg\" width=\"1000\" alt=\"Diagram of Android and iOS app showing them both built on top of atomic elements called views.\" />\n  <figcaption>Just a sampling of the many views used in Android and iOS apps.</figcaption>\n</figure>",
      "source_content_hash": "4eb6aa42b06bd33aa8741687ffc6b85a370c2f43e9d18d375e4b386daad1a100",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4b7cc23c"
      }
    },
    {
      "segment_id": "bc633244",
      "source_content": "## Native Components",
      "source_content_hash": "debe6c0cbfeef28475bff46c02daa2039dafc1a29d603722892bdfcf7426e10c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 原生元件"
      }
    },
    {
      "segment_id": "2df4f75f",
      "source_content": "In Android development, you write views in Kotlin or Java; in iOS development, you use Swift or Objective-C. With React Native, you can invoke these views with JavaScript using React components. At runtime, React Native creates the corresponding Android and iOS views for those components. Because React Native components are backed by the same views as Android and iOS, React Native apps look, feel, and perform like any other apps. We call these platform-backed components **Native Components.**",
      "source_content_hash": "4b097cfa7213cff8c43c2938401ba094709d8a5df79e2dfb10b4df59dac9edf6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 Android 開發中，你使用 Kotlin 或 Java 來編寫視圖；在 iOS 開發中，你使用 Swift 或 Objective-C。透過 React Native，你可以使用 JavaScript 和 React 元件來調用這些視圖。在運行時，React Native 會為這些元件創建對應的 Android 和 iOS 視圖。由於 React Native 元件是由與 Android 和 iOS 相同的視圖所支持，因此 React Native 應用程式的外觀、感覺和性能與其他應用程式無異。我們稱這些由平台支持的元件為**原生元件（Native Components）**。"
      }
    },
    {
      "segment_id": "98cfbd53",
      "source_content": "React Native comes with a set of essential, ready-to-use Native Components you can use to start building your app today. These are React Native's **Core Components**.",
      "source_content_hash": "79b8e04df24c7d7cdb2de28214146652bb7836fd02ba72ccdd3de80afbfd51fc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 提供了一組基本的、即開即用的原生元件，你可以立即開始構建你的應用程式。這些是 React Native 的**核心元件（Core Components）**。"
      }
    },
    {
      "segment_id": "ccc88b4c",
      "source_content": "React Native also lets you build your own Native Components for [Android](native-components-android.md) and [iOS](native-components-ios.md) to suit your app’s unique needs. We also have a thriving ecosystem of these **community-contributed components.** Check out [Native Directory](https://reactnative.directory) to find what the community has been creating.",
      "source_content_hash": "c1f574406d2918fcc85bcbd5d1b6c9f8bb888913d8ac8751224c3772b0f7006a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 還允許你為 [Android](native-components-android.md) 和 [iOS](native-components-ios.md) 構建自己的原生元件，以滿足應用的獨特需求。我們還有一個蓬勃發展的**社群貢獻元件**生態系統。查看 [Native Directory](https://reactnative.directory) 以了解社群創造了什麼。"
      }
    },
    {
      "segment_id": "3c36424c",
      "source_content": "## Core Components",
      "source_content_hash": "2a8b4849ffadab91e08e3dda89c5b899881760e19d507527a838e288aab4e886",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 核心元件"
      }
    },
    {
      "segment_id": "26524352",
      "source_content": "React Native has many Core Components for everything from controls to activity indicators. You can find them all [documented in the API section](components-and-apis). You will mostly work with the following Core Components:",
      "source_content_hash": "c5621842d943263d452547818b457d5cad62a2c3326f74d0622566a3e535d210",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 有許多核心元件，從控制項到活動指示器應有盡有。你可以在 [API 部分](components-and-apis) 找到所有這些元件的文檔。你主要會使用以下核心元件："
      }
    },
    {
      "segment_id": "84112082",
      "source_content": "| React Native UI Component | Android View   | iOS View         | Web Analog              | Description                                                                                           |\n| ------------------------- | -------------- | ---------------- | ----------------------- | ----------------------------------------------------------------------------------------------------- |\n| `<View>`                  | `<ViewGroup>`  | `<UIView>`       | A non-scrolling `<div>` | A container that supports layout with flexbox, style, some touch handling, and accessibility controls |\n| `<Text>`                  | `<TextView>`   | `<UITextView>`   | `<p>`                   | Displays, styles, and nests strings of text and even handles touch events                             |\n| `<Image>`                 | `<ImageView>`  | `<UIImageView>`  | `<img>`                 | Displays different types of images                                                                    |\n| `<ScrollView>`            | `<ScrollView>` | `<UIScrollView>` | `<div>`                 | A generic scrolling container that can contain multiple components and views                          |\n| `<TextInput>`             | `<EditText>`   | `<UITextField>`  | `<input type=\"text\">`   | Allows the user to enter text                                                                         |",
      "source_content_hash": "65e2811521ec7dab633c062403ca9153909f128487473eca878fbe24265d2750",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_84112082"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "In the next section, you will start combining these Core Components to learn about how React works. Have a play with them here now!",
      "source_content_hash": "3af1b26c0d34f59bace1534bd27833c0d8427b2bbe3266652fd5ad33309655a0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在下一節中，你將開始組合這些核心元件，以了解 React 的工作原理。現在就來試試它們吧！"
      }
    },
    {
      "segment_id": "026f2f3e",
      "source_content": "```SnackPlayer name=Hello%20World\nimport React from 'react';\nimport {View, Text, Image, ScrollView, TextInput} from 'react-native';\n\nconst App = () => {\n  return (\n    <ScrollView>\n      <Text>Some text</Text>\n      <View>\n        <Text>Some more text</Text>\n        <Image\n          source={{\n            uri: 'https://reactnative.dev/docs/assets/p_cat2.png',\n          }}\n          style={{width: 200, height: 200}}\n        />\n      </View>\n      <TextInput\n        style={{\n          height: 40,\n          borderColor: 'gray',\n          borderWidth: 1,\n        }}\n        defaultValue=\"You can type in me\"\n      />\n    </ScrollView>\n  );\n};\n\nexport default App;\n```",
      "source_content_hash": "99ce159d8a4a61dcb2bbb6b3edc2163b6c247e023d594bb74ce986ded343c95c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_026f2f3e"
      }
    },
    {
      "segment_id": "7afb38f4",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "6cc549f2",
      "source_content": "Because React Native uses the same API structure as React components, you’ll need to understand React component APIs to get started. The [next section](intro-react) makes for a quick introduction or refresher on the topic. However, if you’re already familiar with React, feel free to [skip ahead](handling-text-input).",
      "source_content_hash": "fe3506df50951a07647898d775bb9cc2a3b028341827e33b07e51e1827b4dbc4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "由於 React Native 使用與 React 元件相同的 API 結構，你需要了解 React 元件 API 才能開始使用。[下一節](intro-react) 是一個快速介紹或複習該主題的內容。不過，如果你已經熟悉 React，可以[跳過](handling-text-input)。"
      }
    },
    {
      "segment_id": "95729a46",
      "source_content": "<ThemedImage\nalt=\"A diagram showing React Native's Core Components are a subset of React Components that ship with React Native.\"\nsources={{\n  light: '/docs/assets/diagram_react-native-components.svg',\n  dark: '/docs/assets/diagram_react-native-components_dark.svg',\n}}\n/>",
      "source_content_hash": "2c2d903d947fe7bde67c43998d0c56f831b3fc30f8549556f37a7f04534a086d",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_95729a46"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.73/intro-react-native-components.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.389526+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "9a46af736c543bdc1415f21c4e0adff78aec147448beacd28524466181ae92e3"
  }
}