{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-2.x/api/plugin-methods/extend-infrastructure.mdx",
  "source_file_content_hash": "8585a58797c1c2eb2c6b07007a1b772941b27e151b1e1ab687683c839d8399d5",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nsidebar_position: 2\n---",
      "source_content_hash": "6b5a0ead0daa1090c8a38fd0c73528677b05e2e1ac3baca413f4c1cf998fee45",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "f85bbfb4",
      "source_content": "# Extending infrastructure",
      "source_content_hash": "47d1d0a1adaae96594f0fec7e01167f587403224a58761990d19f181effcd19f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# 擴充基礎架構"
      }
    },
    {
      "segment_id": "6ef78e84",
      "source_content": "Docusaurus has some infrastructure like hot reloading, CLI, and swizzling, that can be extended by external plugins.",
      "source_content_hash": "76a172d45d4318b5142068cb2d6a4b979268bfbfb97fa793a6391742a4caac31",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Docusaurus 提供如熱重載、CLI 和元件替換等基礎架構，可透過外部插件進行擴充。"
      }
    },
    {
      "segment_id": "d912d376",
      "source_content": "## `getPathsToWatch()` {#getPathsToWatch}",
      "source_content_hash": "a995e9876abcc2748a942d5b78dc6e4302b4a96af363673ad48dba9b1488a3b9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## `getPathsToWatch()` {#getPathsToWatch}"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "Specifies the paths to watch for plugins and themes. The paths are watched by the dev server so that the plugin lifecycles are reloaded when contents in the watched paths change. Note that the plugins and themes modules are initially called with `context` and `options` from Node, which you may use to find the necessary directory information about the site.",
      "source_content_hash": "20ee9b0fbeb66304bb29405f863208cbc246e977e2f45dfbd43352c27b2b807a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "指定插件與佈景主題需監控的檔案路徑。開發伺服器會監控這些路徑，當監控路徑內容變更時重新載入插件生命週期。請注意，插件與佈景主題模組初始會透過 Node 傳入 `context` 和 `options` 參數，您可用此取得站點相關目錄資訊。"
      }
    },
    {
      "segment_id": "180bddb1",
      "source_content": "Use this for files that are consumed server-side, because theme files are automatically watched by Webpack dev server.",
      "source_content_hash": "e63612309b21746f7d116a5de805a9a0574982e63d75cae073494ca20ad1505b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "此方法適用於伺服器端使用的檔案，因為佈景主題檔案會由 Webpack 開發伺服器自動監控。"
      }
    },
    {
      "segment_id": "cf898102",
      "source_content": "Example:",
      "source_content_hash": "872887e563e75957ffc20b021332504f2ddd0a8f3964cb93070863bfaf13cdad",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "範例："
      }
    },
    {
      "segment_id": "93be3c14",
      "source_content": "```js title=\"docusaurus-plugin/src/index.js\"\nconst path = require('path');\nmodule.exports = function (context, options) {\n  return {\n    name: 'docusaurus-plugin',\n    // highlight-start\n    getPathsToWatch() {\n      const contentPath = path.resolve(context.siteDir, options.path);\n      return [`${contentPath}/**/*.{ts,tsx}`];\n    },\n    // highlight-end\n  };\n};\n```",
      "source_content_hash": "2c34f108d3edb6d38b0bcb258718c4240ac55bb2a6284c5c573c66b196a198c6",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_93be3c14"
      }
    },
    {
      "segment_id": "b25f21be",
      "source_content": "## `extendCli(cli)` {#extendCli}",
      "source_content_hash": "50ff7c555911ef90a111da75b9281a87b889396ec3dd41a9a629cca6caa995b6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## `extendCli(cli)` {#extendCli}"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "Register an extra command to enhance the CLI of Docusaurus. `cli` is a [commander](https://www.npmjs.com/package/commander/v/5.1.0) object.",
      "source_content_hash": "c51cf6815e728c6dbd84c8a522b32369e90c1df7786bd47b6198f3d1858f7225",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "註冊額外指令以增強 Docusaurus CLI 功能。`cli` 參數為 [commander](https://www.npmjs.com/package/commander/v/5.1.0) 物件。"
      }
    },
    {
      "segment_id": "cd591557",
      "source_content": ":::warning\n\nThe commander version matters! We use commander v5, and make sure you are referring to the right version documentation for available APIs.\n\n:::",
      "source_content_hash": "70c2f4e1e864fbc892fea1f10734debaaf9507c3a6d943f45441bb3781e2c547",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::warning\n\ncommander 版本至關重要！我們使用 commander v5，請確保您參考正確版本的 API 文件。\n\n:::"
      }
    },
    {
      "segment_id": "50746522",
      "source_content": "Example:",
      "source_content_hash": "872887e563e75957ffc20b021332504f2ddd0a8f3964cb93070863bfaf13cdad",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "範例："
      }
    },
    {
      "segment_id": "45022e4f",
      "source_content": "```js title=\"docusaurus-plugin/src/index.js\"\nmodule.exports = function (context, options) {\n  return {\n    name: 'docusaurus-plugin',\n    // highlight-start\n    extendCli(cli) {\n      cli\n        .command('roll')\n        .description('Roll a random number between 1 and 1000')\n        .action(() => {\n          console.log(Math.floor(Math.random() * 1000 + 1));\n        });\n    },\n    // highlight-end\n  };\n};\n```",
      "source_content_hash": "c6a6c7d8f68e717f2b9cb2f2b8d3707af78fa2e853db34733fb24a23e951b288",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_45022e4f"
      }
    },
    {
      "segment_id": "c431704b",
      "source_content": "## `getThemePath()` {#getThemePath}",
      "source_content_hash": "d7b4c38ebadcb1c6ddcdb284f3f46ee19b89136aa11a764c22093bdc399e3b00",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## `getThemePath()` {#getThemePath}"
      }
    },
    {
      "segment_id": "79ad944d",
      "source_content": "Returns the path to the directory where the theme components can be found. When your users call `swizzle`, `getThemePath` is called and its returned path is used to find your theme components. Relative paths are resolved against the folder containing the entry point.",
      "source_content_hash": "bf3c2750d83d864fcaa798c242487268bd9ede9beff927e4b90ba692a51ebd8f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "回傳佈景主題元件所在目錄路徑。當使用者執行 `swizzle` 指令時，系統會呼叫此方法並使用回傳路徑尋找佈景主題元件。相對路徑會以入口點所在資料夾為基準進行解析。"
      }
    },
    {
      "segment_id": "531437ca",
      "source_content": "For example, your `getThemePath` can be:",
      "source_content_hash": "7829876731419f0376a145293dfefca5345f03b290148a1ee028b6bf7c76d7e4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "例如，您的 `getThemePath` 可設定為："
      }
    },
    {
      "segment_id": "67b24fc5",
      "source_content": "```js title=\"my-theme/src/index.js\"\nconst path = require('path');\n\nmodule.exports = function (context, options) {\n  return {\n    name: 'my-theme',\n    // highlight-start\n    getThemePath() {\n      return './theme';\n    },\n    // highlight-end\n  };\n};\n```",
      "source_content_hash": "820b49a18afefc2497e6e0d5e001ca459ea0e7384ae0ca15f9d99d08eb7ae7c8",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_67b24fc5"
      }
    },
    {
      "segment_id": "66819c78",
      "source_content": "## `getTypeScriptThemePath()` {#getTypeScriptThemePath}",
      "source_content_hash": "6926a8d593bdd85ce8ac0c2e4ad398f3da83ed7c93d9ba950be06ce45980cc63",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## `getTypeScriptThemePath()` {#getTypeScriptThemePath}"
      }
    },
    {
      "segment_id": "fbc2db85",
      "source_content": "Similar to `getThemePath()`, it should return the path to the directory where the source code of TypeScript theme components can be found. This path is purely for swizzling TypeScript theme components, and theme components under this path will **not** be resolved by Webpack. Therefore, it is not a replacement for `getThemePath()`. Typically, you can make the path returned by `getTypeScriptThemePath()` be your source directory, and make the path returned by `getThemePath()` be the compiled JavaScript output.",
      "source_content_hash": "7271255210783f72f8ebf70fd2fd47225ee3a1c8418559db7b26f7842f929c9d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "類似 `getThemePath()`，但應回傳 TypeScript 佈景主題元件原始碼所在目錄路徑。此路徑僅用於替換 TypeScript 佈景主題元件，且該路徑下的元件**不會**被 Webpack 解析，因此不可取代 `getThemePath()`。通常可將 `getTypeScriptThemePath()` 路徑設為原始碼目錄，而 `getThemePath()` 路徑設為編譯後的 JavaScript 輸出目錄。"
      }
    },
    {
      "segment_id": "17f43a45",
      "source_content": ":::tip\n\nFor TypeScript theme authors: you are strongly advised to make your compiled output as human-readable as possible. Only strip type annotations and don't transpile any syntaxes, because they will be handled by Webpack's Babel loader based on the targeted browser versions.\n\nYou should also format these files with Prettier. Remember—JS files can and will be directly consumed by your users.\n\n:::",
      "source_content_hash": "a509787d0ffcdf55078d34aa7bec22d20f51b1d56cc548e4b81be213ecf54bd9",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip\n\nTypeScript 佈景主題作者注意：強烈建議保持編譯輸出的程式碼可讀性。僅移除型別註解，不要轉譯任何語法，因為 Webpack 的 Babel loader 會根據目標瀏覽器版本處理這些語法。\n\n同時建議使用 Prettier 格式化這些檔案。請記住——使用者會直接使用這些 JS 檔案。\n\n:::"
      }
    },
    {
      "segment_id": "785750ac",
      "source_content": "Example:",
      "source_content_hash": "872887e563e75957ffc20b021332504f2ddd0a8f3964cb93070863bfaf13cdad",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "範例："
      }
    },
    {
      "segment_id": "ec99e704",
      "source_content": "```js title=\"my-theme/src/index.js\"\nconst path = require('path');\n\nmodule.exports = function (context, options) {\n  return {\n    name: 'my-theme',\n    // highlight-start\n    getThemePath() {\n      // Where compiled JavaScript output lives\n      return '../lib/theme';\n    },\n    getTypeScriptThemePath() {\n      // Where TypeScript source code lives\n      return '../src/theme';\n    },\n    // highlight-end\n  };\n};\n```",
      "source_content_hash": "019289e1ce5eb2908edd6bdcb269540fe402bad8e91f0ec1108810911ba10de6",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ec99e704"
      }
    },
    {
      "segment_id": "48155948",
      "source_content": "## `getSwizzleComponentList()` {#getSwizzleComponentList}",
      "source_content_hash": "581113f0ea050ab966f50d6a3859bbe7c9781a851b17b8e385f85d81ec549344",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## `getSwizzleComponentList()` {#getSwizzleComponentList}"
      }
    },
    {
      "segment_id": "1958bc43",
      "source_content": "**This is a static method, not attached to any plugin instance.**",
      "source_content_hash": "a299ec793d8cb048d9fa5418762ed706b656de183531dced10c04379c8fad948",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**此為靜態方法，不依附於任何插件實例。**"
      }
    },
    {
      "segment_id": "a8610918",
      "source_content": "Returns a list of stable components that are considered safe for swizzling. These components will be swizzlable without `--danger`. All components are considered unstable by default. If an empty array is returned, all components are considered unstable. If `undefined` is returned, all components are considered stable.",
      "source_content_hash": "72503ed055a597a49592efc8385459c1dc79a0f1eb7250ad7ba7b92156ddd506",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "回傳被視為安全可替換的穩定元件清單。這些元件可在不使用 `--danger` 參數下進行替換。預設所有元件均被視為不穩定。若回傳空陣列，則所有元件均視為不穩定。若回傳 `undefined`，則所有元件均視為穩定。"
      }
    },
    {
      "segment_id": "7102653e",
      "source_content": "```js title=\"my-theme/src/index.js\"\nconst swizzleAllowedComponents = [\n  'CodeBlock',\n  'DocSidebar',\n  'Footer',\n  'NotFound',\n  'SearchBar',\n  'hooks/useTheme',\n  'prism-include-languages',\n];\n\nmyTheme.getSwizzleComponentList = () => swizzleAllowedComponents;\n```",
      "source_content_hash": "220ab4febfc715e9389366375e791f439e429f5269e8c41605a581279971e352",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_7102653e"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-2.x/api/plugin-methods/extend-infrastructure.mdx",
  "last_updated_timestamp": "2025-06-18T05:06:28.130826+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "8585a58797c1c2eb2c6b07007a1b772941b27e151b1e1ab687683c839d8399d5"
  }
}