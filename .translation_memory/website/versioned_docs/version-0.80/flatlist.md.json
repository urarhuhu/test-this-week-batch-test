{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.80/flatlist.md",
  "source_file_content_hash": "9996399267e8d24214f25bf2e7c9dea102ec5538d029892a714ecd574cced1d0",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: flatlist\ntitle: FlatList\n---",
      "source_content_hash": "c2f18a2d3af161c988ce05636168e94a25bd609ea0585d2ab272c1f5864eb3cd",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "A performant interface for rendering basic, flat lists, supporting the most handy features:",
      "source_content_hash": "b5176f826b8333543fc7e7483b643edc9632913f268b02a75999358feae436f2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "一個高效渲染基礎平面列表的介面，支援最常用的功能："
      }
    },
    {
      "segment_id": "4a5b6a68",
      "source_content": "- Fully cross-platform.\n- Optional horizontal mode.\n- Configurable viewability callbacks.\n- Header support.\n- Footer support.\n- Separator support.\n- Pull to Refresh.\n- Scroll loading.\n- ScrollToIndex support.\n- Multiple column support.",
      "source_content_hash": "3b137d8ff8d84d8955a1ad91a308f2d1cf298f663e91a9f1034effc5864f28b6",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 完全跨平台。\n- 可選的水平模式。\n- 可配置的可見性回調。\n- 支援標頭。\n- 支援頁尾。\n- 支援分隔線。\n- 下拉刷新。\n- 滾動載入。\n- 支援 ScrollToIndex。\n- 多欄支援。"
      }
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "If you need section support, use [`<SectionList>`](sectionlist.md).",
      "source_content_hash": "e834a2a54911cf916742408470222a6025b7036b12799c1cbc22284446a1bcad",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "如果需要分節支援，請使用 [`<SectionList>`](sectionlist.md)。"
      }
    },
    {
      "segment_id": "40f9552a",
      "source_content": "## Example",
      "source_content_hash": "9bf34f44c9d1371f4eda569dfa04ff7830aff81cfa81646e680cef087714cdc1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 範例"
      }
    },
    {
      "segment_id": "0dc46dba",
      "source_content": "<Tabs groupId=\"language\" queryString defaultValue={constants.defaultSnackLanguage} values={constants.snackLanguages}>\n<TabItem value=\"javascript\">\n\n```SnackPlayer name=Simple%20FlatList%20Example&ext=js\nimport React from 'react';\nimport {View, FlatList, StyleSheet, Text, StatusBar} from 'react-native';\nimport {SafeAreaView, SafeAreaProvider} from 'react-native-safe-area-context';\n\nconst DATA = [\n  {\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: 'First Item',\n  },\n  {\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n    title: 'Second Item',\n  },\n  {\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\n    title: 'Third Item',\n  },\n];\n\nconst Item = ({title}) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nconst App = () => (\n  <SafeAreaProvider>\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={DATA}\n        renderItem={({item}) => <Item title={item.title} />}\n        keyExtractor={item => item.id}\n      />\n    </SafeAreaView>\n  </SafeAreaProvider>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\nexport default App;\n```\n\n</TabItem>\n<TabItem value=\"typescript\">\n\n```SnackPlayer name=Simple%20FlatList%20Example&ext=tsx\nimport React from 'react';\nimport {View, FlatList, StyleSheet, Text, StatusBar} from 'react-native';\nimport {SafeAreaView, SafeAreaProvider} from 'react-native-safe-area-context';\n\nconst DATA = [\n  {\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: 'First Item',\n  },\n  {\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n    title: 'Second Item',\n  },\n  {\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\n    title: 'Third Item',\n  },\n];\n\ntype ItemProps = {title: string};\n\nconst Item = ({title}: ItemProps) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nconst App = () => (\n  <SafeAreaProvider>\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={DATA}\n        renderItem={({item}) => <Item title={item.title} />}\n        keyExtractor={item => item.id}\n      />\n    </SafeAreaView>\n  </SafeAreaProvider>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\nexport default App;\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "c709046f8ae523956817d9b92737fb4f06ea473f875291538c40bf9a9737db53",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_0dc46dba"
      }
    },
    {
      "segment_id": "17b50e81",
      "source_content": "To render multiple columns, use the [`numColumns`](flatlist.md#numcolumns) prop. Using this approach instead of a `flexWrap` layout can prevent conflicts with the item height logic.",
      "source_content_hash": "a639773f9271fbc5c42c343d5fb7443f3ce461dbf8c297de097406c259d45a89",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "若要渲染多欄，請使用 [`numColumns`](flatlist.md#numcolumns) 屬性。採用此方法而非 `flexWrap` 佈局，可避免與項目高度邏輯產生衝突。"
      }
    },
    {
      "segment_id": "719d3997",
      "source_content": "More complex, selectable example below.",
      "source_content_hash": "2a6abf7654c8302b4a7552dd222fb3e7b6e324b95e1ac59ff9689e68fca04a13",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "下方為更複雜的可選取範例。"
      }
    },
    {
      "segment_id": "3670cec0",
      "source_content": "- By passing `extraData={selectedId}` to `FlatList` we make sure `FlatList` itself will re-render when the state changes. Without setting this prop, `FlatList` would not know it needs to re-render any items because it is a `PureComponent` and the prop comparison will not show any changes.\n- `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.",
      "source_content_hash": "1f4996f2c106306a1778436012a769ba0dbf2d269a9f47be0c6ac8ec767e3ec3",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 透過傳遞 `extraData={selectedId}` 給 `FlatList`，我們確保當狀態變更時 `FlatList` 本身會重新渲染。若未設定此屬性，`FlatList` 將不會知道需要重新渲染任何項目，因為它是 `PureComponent` 且屬性比較不會顯示任何變更。\n- `keyExtractor` 告知列表使用 `id` 作為 React 鍵，而非預設的 `key` 屬性。"
      }
    },
    {
      "segment_id": "a65f36d4",
      "source_content": "<Tabs groupId=\"language\" queryString defaultValue={constants.defaultSnackLanguage} values={constants.snackLanguages}>\n<TabItem value=\"javascript\">\n\n```SnackPlayer name=flatlist-selectable&ext=js\nimport React, {useState} from 'react';\nimport {\n  FlatList,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n} from 'react-native';\nimport {SafeAreaView, SafeAreaProvider} from 'react-native-safe-area-context';\n\nconst DATA = [\n  {\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: 'First Item',\n  },\n  {\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n    title: 'Second Item',\n  },\n  {\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\n    title: 'Third Item',\n  },\n];\n\nconst Item = ({item, onPress, backgroundColor, textColor}) => (\n  <TouchableOpacity onPress={onPress} style={[styles.item, {backgroundColor}]}>\n    <Text style={[styles.title, {color: textColor}]}>{item.title}</Text>\n  </TouchableOpacity>\n);\n\nconst App = () => {\n  const [selectedId, setSelectedId] = useState();\n\n  const renderItem = ({item}) => {\n    const backgroundColor = item.id === selectedId ? '#6e3b6e' : '#f9c2ff';\n    const color = item.id === selectedId ? 'white' : 'black';\n\n    return (\n      <Item\n        item={item}\n        onPress={() => setSelectedId(item.id)}\n        backgroundColor={backgroundColor}\n        textColor={color}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaProvider>\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          data={DATA}\n          renderItem={renderItem}\n          keyExtractor={item => item.id}\n          extraData={selectedId}\n        />\n      </SafeAreaView>\n    </SafeAreaProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\nexport default App;\n```\n\n</TabItem>\n<TabItem value=\"typescript\">\n\n```SnackPlayer name=flatlist-selectable&ext=tsx\nimport React, {useState} from 'react';\nimport {\n  FlatList,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n} from 'react-native';\nimport {SafeAreaView, SafeAreaProvider} from 'react-native-safe-area-context';\n\ntype ItemData = {\n  id: string;\n  title: string;\n};\n\nconst DATA: ItemData[] = [\n  {\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: 'First Item',\n  },\n  {\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n    title: 'Second Item',\n  },\n  {\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\n    title: 'Third Item',\n  },\n];\n\ntype ItemProps = {\n  item: ItemData;\n  onPress: () => void;\n  backgroundColor: string;\n  textColor: string;\n};\n\nconst Item = ({item, onPress, backgroundColor, textColor}: ItemProps) => (\n  <TouchableOpacity onPress={onPress} style={[styles.item, {backgroundColor}]}>\n    <Text style={[styles.title, {color: textColor}]}>{item.title}</Text>\n  </TouchableOpacity>\n);\n\nconst App = () => {\n  const [selectedId, setSelectedId] = useState<string>();\n\n  const renderItem = ({item}: {item: ItemData}) => {\n    const backgroundColor = item.id === selectedId ? '#6e3b6e' : '#f9c2ff';\n    const color = item.id === selectedId ? 'white' : 'black';\n\n    return (\n      <Item\n        item={item}\n        onPress={() => setSelectedId(item.id)}\n        backgroundColor={backgroundColor}\n        textColor={color}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaProvider>\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          data={DATA}\n          renderItem={renderItem}\n          keyExtractor={item => item.id}\n          extraData={selectedId}\n        />\n      </SafeAreaView>\n    </SafeAreaProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\nexport default App;\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "48325a3514410cfd41718468b6aad83e17918743d435688f7e34e8eca5cd24dc",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_a65f36d4"
      }
    },
    {
      "segment_id": "a30b7214",
      "source_content": "This is a convenience wrapper around [`<VirtualizedList>`](virtualizedlist.md), and thus inherits its props (as well as those of [`<ScrollView>`](scrollview.md)) that aren't explicitly listed here, along with the following caveats:",
      "source_content_hash": "3abd10fedf6459b5d1849f3c0133d9179c14cf7dd18144ba1e986d29acda65f1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "此為 [`<VirtualizedList>`](virtualizedlist.md) 的便利封裝，因此繼承了其屬性（以及 [`<ScrollView>`](scrollview.md) 的屬性），此處未明確列出的屬性需注意以下事項："
      }
    },
    {
      "segment_id": "0823e59c",
      "source_content": "- Internal state is not preserved when content scrolls out of the render window. Make sure all your data is captured in the item data or external stores like Flux, Redux, or Relay.\n- This is a `PureComponent` which means that it will not re-render if `props` remain shallow-equal. Make sure that everything your `renderItem` function depends on is passed as a prop (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on changes. This includes the `data` prop and parent component state.\n- In order to constrain memory and enable smooth scrolling, content is rendered asynchronously offscreen. This means it's possible to scroll faster than the fill rate and momentarily see blank content. This is a tradeoff that can be adjusted to suit the needs of each application, and we are working on improving it behind the scenes.\n- By default, the list looks for a `key` prop on each item and uses that for the React key. Alternatively, you can provide a custom `keyExtractor` prop.",
      "source_content_hash": "f7ac61e51de79aa31c67e98e89716e325de509d4ad4e8463cef0aaf04639d5d8",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 當內容滾動超出渲染視窗時，內部狀態不會保留。請確保所有資料皆擷取於項目資料或外部儲存（如 Flux、Redux 或 Relay）。\n- 此為 `PureComponent`，意味著若 `props` 保持淺層相等則不會重新渲染。請確保 `renderItem` 函式依賴的所有內容皆以屬性傳遞（例如 `extraData`），且在更新後不為 `===`，否則變更時 UI 可能不會更新。此包含 `data` 屬性與父元件狀態。\n- 為限制記憶體使用並實現平滑滾動，內容會以非同步方式在螢幕外渲染。這意味著可能滾動速度快於填充率，並暫時看到空白內容。此為可調整的取捨，以滿足各應用需求，我們正持續改進幕後機制。\n- 預設情況下，列表會尋找每個項目的 `key` 屬性並將其用作 React 鍵。或者，您可提供自訂的 `keyExtractor` 屬性。"
      }
    },
    {
      "segment_id": "a915c64f",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "1e5c4bc8",
      "source_content": "# Reference",
      "source_content_hash": "7f466000063da6e2b641eee17b52fffbcef1717169b55b58c4543dc0dc23ea11",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# 參考"
      }
    },
    {
      "segment_id": "4e36860d",
      "source_content": "## Props",
      "source_content_hash": "5b94a6cc928a22f2ff71078f7462cd97dbe259a0c4d1877ab3afc2a92dded915",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 屬性"
      }
    },
    {
      "segment_id": "b8884e3b",
      "source_content": "### [VirtualizedList Props](virtualizedlist.md#props)",
      "source_content_hash": "a989651ad5d5cf3711d9507009b9b28466e831d1afe8b6997cdc53dddeff77ce",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### [VirtualizedList 屬性](virtualizedlist.md#props)"
      }
    },
    {
      "segment_id": "c419a086",
      "source_content": "Inherits [VirtualizedList Props](virtualizedlist.md#props).",
      "source_content_hash": "ec7acf9b258437680cb83b7526ab2e2a83e1be204a37f36e8e238f8a80b0297c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "繼承 [VirtualizedList 屬性](virtualizedlist.md#props)。"
      }
    },
    {
      "segment_id": "4673a344",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "b5b0d360",
      "source_content": "### <div class=\"label required basic\">Required</div> **`renderItem`**",
      "source_content_hash": "9642c9ed0e64327064e19dd4828dd05475085e46c3603c4320b26af2bde33782",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### <div class=\"label required basic\">必填</div> **`renderItem`**"
      }
    },
    {
      "segment_id": "99afeceb",
      "source_content": "```tsx\nrenderItem({\n  item: ItemT,\n  index: number,\n  separators: {\n    highlight: () => void;\n    unhighlight: () => void;\n    updateProps: (select: 'leading' | 'trailing', newProps: any) => void;\n  }\n}): JSX.Element;\n```",
      "source_content_hash": "fc51be428aa951458a21ae69f04c5ddb1ee1985d4034c524fb4ad40098300705",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_99afeceb"
      }
    },
    {
      "segment_id": "f613e20b",
      "source_content": "Takes an item from `data` and renders it into the list.",
      "source_content_hash": "2f6389c0e6d894239edd5795bf776de88ffcfd74ac20f48b69c08005498fbf9d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "從 `data` 中取得項目並渲染至列表中。"
      }
    },
    {
      "segment_id": "323eea94",
      "source_content": "Provides additional metadata like `index` if you need it, as well as a more generic `separators.updateProps` function which let you set whatever props you want to change the rendering of either the leading separator or trailing separator in case the more common `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for your use case.",
      "source_content_hash": "ff3467cfc31e15b3d3dd662b0c2ec58ebd0e1fff74fc95f32ddd6a7e10410019",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "提供額外中繼資料（如需要時的 `index`），以及更通用的 `separators.updateProps` 函式，讓您設定任意屬性以變更前導分隔線或尾隨分隔線的渲染（在較常見的 `highlight` 和 `unhighlight`（設定 `highlighted: boolean` 屬性）不足以滿足使用情境時）。"
      }
    },
    {
      "segment_id": "02386fc2",
      "source_content": "| Type     |\n| -------- |\n| function |",
      "source_content_hash": "d5891e80e274cd9f9474b68befae24bcabea76d31b7b1d648d334793da075552",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_02386fc2"
      }
    },
    {
      "segment_id": "c72c5c8a",
      "source_content": "- `item` (Object): The item from `data` being rendered.\n- `index` (number): The index corresponding to this item in the `data` array.\n- `separators` (Object)\n  - `highlight` (Function)\n  - `unhighlight` (Function)\n  - `updateProps` (Function)\n    - `select` (enum('leading', 'trailing'))\n    - `newProps` (Object)",
      "source_content_hash": "938e06670eb85c2fd0431f3649d799fb6d4f8ff32883ea813a1428c5d2ca6bad",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- `item` (Object)：正被渲染的 `data` 項目。\n- `index` (number)：對應此項目在 `data` 陣列中的索引。\n- `separators` (Object)\n  - `highlight` (Function)\n  - `unhighlight` (Function)\n  - `updateProps` (Function)\n    - `select` (enum('leading', 'trailing'))\n    - `newProps` (Object)"
      }
    },
    {
      "segment_id": "860eb645",
      "source_content": "Example usage:",
      "source_content_hash": "21eddf0bab8eb72f66078a107da27d93c6221bf506374c84a693bb4b5f15983c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "使用範例："
      }
    },
    {
      "segment_id": "92fa9171",
      "source_content": "```tsx\n<FlatList\n  ItemSeparatorComponent={\n    Platform.OS !== 'android' &&\n    (({highlighted}) => (\n      <View\n        style={[style.separator, highlighted && {marginLeft: 0}]}\n      />\n    ))\n  }\n  data={[{title: 'Title Text', key: 'item1'}]}\n  renderItem={({item, index, separators}) => (\n    <TouchableHighlight\n      key={item.key}\n      onPress={() => this._onPress(item)}\n      onShowUnderlay={separators.highlight}\n      onHideUnderlay={separators.unhighlight}>\n      <View style={{backgroundColor: 'white'}}>\n        <Text>{item.title}</Text>\n      </View>\n    </TouchableHighlight>\n  )}\n/>\n```",
      "source_content_hash": "2294cd8aebff76539ab546334cb2d75de59bf71158534e3ee8db5f758fd3b402",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_92fa9171"
      }
    },
    {
      "segment_id": "65c15b77",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "548b3ae8",
      "source_content": "### <div class=\"label required basic\">Required</div> **`data`**",
      "source_content_hash": "f9241c29245a56b65ac30eeecc0352825d8e2971298eb81f15434f2bc08966cc",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### <div class=\"label required basic\">必填</div> **`data`**"
      }
    },
    {
      "segment_id": "9f46c1b6",
      "source_content": "An array (or array-like list) of items to render. Other data types can be used by targeting [`VirtualizedList`](virtualizedlist.md) directly.",
      "source_content_hash": "4235b2c30228f26ff25d00201689bcafb2688914298ba66277727d3189de41e6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "用於渲染的項目陣列（或類陣列結構）。若需使用其他資料類型，可直接針對 [`VirtualizedList`](virtualizedlist.md) 進行操作。"
      }
    },
    {
      "segment_id": "902fb865",
      "source_content": "| Type      |\n| --------- |\n| ArrayLike |",
      "source_content_hash": "875291bbfdfc210afcf6cd7ac1d52f6e5e8cf733c87d3254a13c8d261e7fc17e",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_902fb865"
      }
    },
    {
      "segment_id": "3626227b",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "21a8e7f8",
      "source_content": "### `ItemSeparatorComponent`",
      "source_content_hash": "c01bcb774f1b0233475a2dfb3e30cb2b8eac655b4d46836cd4630b72c41f6570",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `ItemSeparatorComponent`"
      }
    },
    {
      "segment_id": "72dd1482",
      "source_content": "Rendered in between each item, but not at the top or bottom. By default, `highlighted` and `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight` which will update the `highlighted` prop, but you can also add custom props with `separators.updateProps`. Can be a React Component (e.g. `SomeComponent`), or a React element (e.g. `<SomeComponent />`).",
      "source_content_hash": "f7fbe3ab78a98238b81ea2a5df6003b49f2613e74ae223d110a1cad9fb619e76",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "渲染於每個項目之間（頂部與底部除外）。預設會提供 `highlighted` 和 `leadingItem` 屬性。`renderItem` 提供 `separators.highlight`/`unhighlight` 來更新 `highlighted` 屬性，亦可透過 `separators.updateProps` 添加自訂屬性。可為 React 元件（如 `SomeComponent`）或 React 元素（如 `<SomeComponent />`）。"
      }
    },
    {
      "segment_id": "4d0ff7f8",
      "source_content": "| Type                         |\n| ---------------------------- |\n| component, function, element |",
      "source_content_hash": "b40bfb78778bee147e0727424be5b269e55295be0901ccb3c116fdf51f12d70c",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d0ff7f8"
      }
    },
    {
      "segment_id": "8907713c",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "489e5683",
      "source_content": "### `ListEmptyComponent`",
      "source_content_hash": "42feebf6caf9b4d0c6d479b28651905eaa05b6d7e3392cf400bcc0655bf1a48d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `ListEmptyComponent`"
      }
    },
    {
      "segment_id": "a1cac8e0",
      "source_content": "Rendered when the list is empty. Can be a React Component (e.g. `SomeComponent`), or a React element (e.g. `<SomeComponent />`).",
      "source_content_hash": "74e94392a7f4e8235e47653c155df16a43a2460788abfe30ea0291fb0e0ac5ff",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當列表為空時渲染。可為 React 元件（如 `SomeComponent`）或 React 元素（如 `<SomeComponent />`）。"
      }
    },
    {
      "segment_id": "8a610bbf",
      "source_content": "| Type               |\n| ------------------ |\n| component, element |",
      "source_content_hash": "df5a548ec49cf7f31dddedda745586f85a7e4d4cfb0b31e087357232f1ab8b4a",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_8a610bbf"
      }
    },
    {
      "segment_id": "45c49b1b",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "c300008c",
      "source_content": "### `ListFooterComponent`",
      "source_content_hash": "276a308660e88f918f554cd3ec3a439457a0a9555ff5b423b0e06093f5d30d55",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `ListFooterComponent`"
      }
    },
    {
      "segment_id": "fea3f437",
      "source_content": "Rendered at the bottom of all the items. Can be a React Component (e.g. `SomeComponent`), or a React element (e.g. `<SomeComponent />`).",
      "source_content_hash": "7433dfaa242f1fd3664003063a68941cee96a352f02315b1144a2c79a5d9cec8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "渲染於所有項目底部。可為 React 元件（如 `SomeComponent`）或 React 元素（如 `<SomeComponent />`）。"
      }
    },
    {
      "segment_id": "28311803",
      "source_content": "| Type               |\n| ------------------ |\n| component, element |",
      "source_content_hash": "df5a548ec49cf7f31dddedda745586f85a7e4d4cfb0b31e087357232f1ab8b4a",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_28311803"
      }
    },
    {
      "segment_id": "e8ce8cc5",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "a59a3e1f",
      "source_content": "### `ListFooterComponentStyle`",
      "source_content_hash": "ddc384df963603a55432d0c937c33735bce1166419e86538a577b0db3d577bba",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `ListFooterComponentStyle`"
      }
    },
    {
      "segment_id": "24d24e6d",
      "source_content": "Styling for internal View for `ListFooterComponent`.",
      "source_content_hash": "b0356c98498bb981f9d792bb222f0c06123bd9a130dde5701fa6d959b186c641",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "用於 `ListFooterComponent` 內部 View 的樣式設定。"
      }
    },
    {
      "segment_id": "655a55d4",
      "source_content": "| Type                           |\n| ------------------------------ |\n| [View Style](view-style-props) |",
      "source_content_hash": "3f5e7d47ed5fe1549f22190a423f07653ab9e06b85ac74a7d5143036b57ac753",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_655a55d4"
      }
    },
    {
      "segment_id": "1ab826e8",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "54b0eaca",
      "source_content": "### `ListHeaderComponent`",
      "source_content_hash": "552fe951b17d8172907781c2da3ecd98144868df8b5d52cf67663c52271de7e0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `ListHeaderComponent`"
      }
    },
    {
      "segment_id": "c829cc4b",
      "source_content": "Rendered at the top of all the items. Can be a React Component (e.g. `SomeComponent`), or a React element (e.g. `<SomeComponent />`).",
      "source_content_hash": "3f34cf4eb0616f6051052cb2bca5bef8d6e99894016c15f02b41c58fabfec041",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "渲染於所有項目頂部。可為 React 元件（如 `SomeComponent`）或 React 元素（如 `<SomeComponent />`）。"
      }
    },
    {
      "segment_id": "10b1e233",
      "source_content": "| Type               |\n| ------------------ |\n| component, element |",
      "source_content_hash": "df5a548ec49cf7f31dddedda745586f85a7e4d4cfb0b31e087357232f1ab8b4a",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_10b1e233"
      }
    },
    {
      "segment_id": "0b40d2cf",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "841204f6",
      "source_content": "### `ListHeaderComponentStyle`",
      "source_content_hash": "461b22d9bb8938a0ee9977240fd89e36bb9bd4a8cddeb31e056c460b137b285d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `ListHeaderComponentStyle`"
      }
    },
    {
      "segment_id": "ae95f665",
      "source_content": "Styling for internal View for `ListHeaderComponent`.",
      "source_content_hash": "b5ed298830f73b8b4e3b6a807cd0acd5a94f8e1c8c520578121a08b722bcb548",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "用於 `ListHeaderComponent` 內部 View 的樣式設定。"
      }
    },
    {
      "segment_id": "bcfed60e",
      "source_content": "| Type                           |\n| ------------------------------ |\n| [View Style](view-style-props) |",
      "source_content_hash": "3f5e7d47ed5fe1549f22190a423f07653ab9e06b85ac74a7d5143036b57ac753",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_bcfed60e"
      }
    },
    {
      "segment_id": "9470b91c",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "e9a5149c",
      "source_content": "### `columnWrapperStyle`",
      "source_content_hash": "08c3de27b24fdc6334e20c1b125269b548b917242a146874bdc27a7cc8e2e52a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `columnWrapperStyle`"
      }
    },
    {
      "segment_id": "cbbdf094",
      "source_content": "Optional custom style for multi-item rows generated when `numColumns > 1`.",
      "source_content_hash": "c8392151daf4a2ed497a86e9c0f8fca2bf6e29cd20b2570067f6e0135fd11720",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當 `numColumns > 1` 時，用於多項目列的可選自訂樣式。"
      }
    },
    {
      "segment_id": "25885e50",
      "source_content": "| Type                           |\n| ------------------------------ |\n| [View Style](view-style-props) |",
      "source_content_hash": "3f5e7d47ed5fe1549f22190a423f07653ab9e06b85ac74a7d5143036b57ac753",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_25885e50"
      }
    },
    {
      "segment_id": "add35b99",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "d44c41e4",
      "source_content": "### `extraData`",
      "source_content_hash": "428a428fbe21448b8fb390f01a1b0a65cbcb88fa2972abb7d5143b962f1754f3",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `extraData`"
      }
    },
    {
      "segment_id": "3441f612",
      "source_content": "A marker property for telling the list to re-render (since it implements `PureComponent`). If any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop, stick it here and treat it immutably.",
      "source_content_hash": "e7bcc29ce4555057bd9876cae145f33a35a84ea27d45f0582b3062eefeed75d3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "標記屬性，用於通知列表重新渲染（因其實作 `PureComponent`）。若 `renderItem`、Header、Footer 等函式依賴於 `data` 屬性外的任何內容，請將其置於此並視為不可變資料。"
      }
    },
    {
      "segment_id": "d95806d2",
      "source_content": "| Type |\n| ---- |\n| any  |",
      "source_content_hash": "a501fd64a4634e7eb5eb96b5d3bf9a7d04f3c5db069ef98e370d294238d75e92",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_d95806d2"
      }
    },
    {
      "segment_id": "d2517a2b",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "4439f5f5",
      "source_content": "### `getItemLayout`",
      "source_content_hash": "23afd4900f39f87f7b285da9de0e53278750f195a906f0dc6cd59a3b0144f345",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `getItemLayout`"
      }
    },
    {
      "segment_id": "64e83027",
      "source_content": "```tsx\n(data, index) => {length: number, offset: number, index: number}\n```",
      "source_content_hash": "58eeecc9f06497879b6b185c87a293d7290e80ba758edaede3ee62569efbebb8",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_64e83027"
      }
    },
    {
      "segment_id": "cee5aad9",
      "source_content": "`getItemLayout` is an optional optimization that allows skipping the measurement of dynamic content if you know the size (height or width) of items ahead of time. `getItemLayout` is efficient if you have fixed size items, for example:",
      "source_content_hash": "0857e6ebecf2ab15d250012596139f18bc6b92a422b8670f81ce74765d86eb42",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "`getItemLayout` 為可選優化項，若事先知曉項目尺寸（高度或寬度），可跳過動態內容的測量。對於固定尺寸項目（例如範例）效率極佳："
      }
    },
    {
      "segment_id": "eb4ec70e",
      "source_content": "```tsx\n  getItemLayout={(data, index) => (\n    {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\n  )}\n```",
      "source_content_hash": "02cefb6767eb23ac5178e32becd935c97363459c7bbf0821cb36b42f80ca8232",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_eb4ec70e"
      }
    },
    {
      "segment_id": "0ac62679",
      "source_content": "Adding `getItemLayout` can be a great performance boost for lists of several hundred items. Remember to include separator length (height or width) in your offset calculation if you specify `ItemSeparatorComponent`.",
      "source_content_hash": "ae77aeff3527a83d83ab343c028d10ed168ae05da7f38eed8578b795be23843f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "添加 `getItemLayout` 能大幅提升數百項目的列表效能。若指定 `ItemSeparatorComponent`，請記得在偏移計算中包含分隔線長度（高度或寬度）。"
      }
    },
    {
      "segment_id": "694b2423",
      "source_content": "| Type     |\n| -------- |\n| function |",
      "source_content_hash": "d5891e80e274cd9f9474b68befae24bcabea76d31b7b1d648d334793da075552",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_694b2423"
      }
    },
    {
      "segment_id": "7b7e2a34",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "61b8f47a",
      "source_content": "### `horizontal`",
      "source_content_hash": "18badbaf70807da2ad88c29abe1ae1e5f988160baa044f61424ce714d5455ab6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `horizontal`"
      }
    },
    {
      "segment_id": "eed7cff5",
      "source_content": "If `true`, renders items next to each other horizontally instead of stacked vertically.",
      "source_content_hash": "9be13dd83d8c31f69da9ffe39e937245bd98d2199f8b5e991c707b4d95ad8efe",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "設為 `true` 時，項目將水平並排渲染而非垂直堆疊。"
      }
    },
    {
      "segment_id": "c4877236",
      "source_content": "| Type    |\n| ------- |\n| boolean |",
      "source_content_hash": "afc5252fe97c3b4645cc839e72fb23555baeef211698715abd6b5ac8ee57a841",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_c4877236"
      }
    },
    {
      "segment_id": "a2457fd3",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "c9f84e5e",
      "source_content": "### `initialNumToRender`",
      "source_content_hash": "f68dffca60078bc985094813abb5c2f213e9f31c842839f6d9f9f1d1203a8060",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `initialNumToRender`"
      }
    },
    {
      "segment_id": "4a2bee77",
      "source_content": "How many items to render in the initial batch. This should be enough to fill the screen but not much more. Note these items will never be unmounted as part of the windowed rendering in order to improve perceived performance of scroll-to-top actions.",
      "source_content_hash": "73b56a16e5221fe31b606129c67a4ebe9d9e4f623f94fd3cdf118d46e95db071",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "初始批次中要渲染的項目數量。這個數量應該足以填滿螢幕，但不需要過多。請注意，這些項目永遠不會因為視窗化渲染而被卸載，以提升滾動至頂部的感知效能。"
      }
    },
    {
      "segment_id": "0205d406",
      "source_content": "| Type   | Default |\n| ------ | ------- |\n| number | `10`    |",
      "source_content_hash": "a96c1a3c92e9b5be076a1dd9b27b0dad30f1d3cb39e6ee796c61fb71ea5a42aa",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_0205d406"
      }
    },
    {
      "segment_id": "f349ac74",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "600c566a",
      "source_content": "### `initialScrollIndex`",
      "source_content_hash": "a4b304e63b60703bad5ede340c398f2b15ab6ab906acd046116db2e1f5d8730d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `initialScrollIndex`"
      }
    },
    {
      "segment_id": "17b95bd5",
      "source_content": "Instead of starting at the top with the first item, start at `initialScrollIndex`. This disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items always rendered and immediately renders the items starting at this initial index. Requires `getItemLayout` to be implemented.",
      "source_content_hash": "0f8febd45017f534586a049c536c1e169ca1064ef67372293dfd520718e7ae8b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "不從頂部的第一個項目開始，而是從 `initialScrollIndex` 開始。這會停用「滾動至頂部」的優化（該優化會始終渲染前 `initialNumToRender` 個項目），並立即從此初始索引開始渲染項目。需要實作 `getItemLayout`。"
      }
    },
    {
      "segment_id": "21ce2280",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_21ce2280"
      }
    },
    {
      "segment_id": "19a1840f",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "7fe44f5b",
      "source_content": "### `inverted`",
      "source_content_hash": "f8b1b2a3f4429a5ab8b4b4b7407cbba217215f7e99b4c10a3f6621d26ffbbe1a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `inverted`"
      }
    },
    {
      "segment_id": "1b8b3b24",
      "source_content": "Reverses the direction of scroll. Uses scale transforms of `-1`.",
      "source_content_hash": "22020459351b2206cc85c973cdc7af5d8c6c317a89220a6781230553433cb8ba",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "反轉滾動方向。使用 `-1` 的比例變換。"
      }
    },
    {
      "segment_id": "e15570b6",
      "source_content": "| Type    |\n| ------- |\n| boolean |",
      "source_content_hash": "afc5252fe97c3b4645cc839e72fb23555baeef211698715abd6b5ac8ee57a841",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_e15570b6"
      }
    },
    {
      "segment_id": "cb89be29",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "0a59a777",
      "source_content": "### `keyExtractor`",
      "source_content_hash": "2716fa5d92409804f4eb857234d14a4a69d270b6e4c253c710317108d643d2b9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `keyExtractor`"
      }
    },
    {
      "segment_id": "7c969fa1",
      "source_content": "```tsx\n(item: ItemT, index: number) => string;\n```",
      "source_content_hash": "d06953c44c73c74de4ab88af90e670c5e8985e49860c93ea7612380ad178cab2",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_7c969fa1"
      }
    },
    {
      "segment_id": "14d50a1d",
      "source_content": "Used to extract a unique key for a given item at the specified index. Key is used for caching and as the react key to track item re-ordering. The default extractor checks `item.key`, then `item.id`, and then falls back to using the index, like React does.",
      "source_content_hash": "a58cc2c13635910413e6a4c2cb7a4066fe0d543f88720058175f35da1aec7d88",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "用於為指定索引的項目提取唯一鍵。此鍵用於快取及作為 React 的鍵來追蹤項目重新排序。預設提取器會檢查 `item.key`，然後是 `item.id`，最後回退到使用索引（與 React 的行為相同）。"
      }
    },
    {
      "segment_id": "d916c88b",
      "source_content": "| Type     |\n| -------- |\n| function |",
      "source_content_hash": "d5891e80e274cd9f9474b68befae24bcabea76d31b7b1d648d334793da075552",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_d916c88b"
      }
    },
    {
      "segment_id": "1167e065",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "c39bedef",
      "source_content": "### `numColumns`",
      "source_content_hash": "2928568e53d17a405c1c5baf01bc5baae9fd8448ca29095c98376fdd983fe20a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `numColumns`"
      }
    },
    {
      "segment_id": "56ca860f",
      "source_content": "Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout. Items should all be the same height - masonry layouts are not supported.",
      "source_content_hash": "805a766c275d914723e9952888d7d77a07dbc1894c8a4215720f0563b7bac215",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "多列只能在 `horizontal={false}` 時渲染，並會以類似 `flexWrap` 的佈局呈鋸齒狀排列。所有項目應具有相同高度——不支援磚牆式佈局。"
      }
    },
    {
      "segment_id": "6de5a794",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_6de5a794"
      }
    },
    {
      "segment_id": "d2350012",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "7f7d0ca9",
      "source_content": "### `onRefresh`",
      "source_content_hash": "dd02ac7b8c18a4504e015b27f0629f01c4a2e59ba05618b34e5ecaf124280856",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `onRefresh`"
      }
    },
    {
      "segment_id": "a399ada9",
      "source_content": "```tsx\n() => void;\n```",
      "source_content_hash": "5c6cae01ef21bb23eb482bd3a8467f5d69a9bb44775364c599f2156f23eb1ff7",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_a399ada9"
      }
    },
    {
      "segment_id": "a10f4259",
      "source_content": "If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make sure to also set the `refreshing` prop correctly.",
      "source_content_hash": "c8640c825a7073e0208bb024688eb6d847e978e5297505fdf63af5596fe1658d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "若提供此屬性，將添加標準的 RefreshControl 以實現「下拉刷新」功能。請確保同時正確設定 `refreshing` 屬性。"
      }
    },
    {
      "segment_id": "03197c62",
      "source_content": "| Type     |\n| -------- |\n| function |",
      "source_content_hash": "d5891e80e274cd9f9474b68befae24bcabea76d31b7b1d648d334793da075552",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_03197c62"
      }
    },
    {
      "segment_id": "1957a1a1",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "50c165cd",
      "source_content": "### `onViewableItemsChanged`",
      "source_content_hash": "7bd3f2da1d7b35dbd00ed88b2cc3a916125e6f3149d7984f39c6b5470bfd8319",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `onViewableItemsChanged`"
      }
    },
    {
      "segment_id": "c26f8d7d",
      "source_content": "Called when the viewability of rows changes, as defined by the `viewabilityConfig` prop.",
      "source_content_hash": "6def93913222051cae593c97429a06af9b800be6e78877a137884a0a3d43e99b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當行的可見性發生變化時呼叫（由 `viewabilityConfig` 屬性定義）。"
      }
    },
    {
      "segment_id": "c103f90f",
      "source_content": "| Type                                                                                                  |\n| ----------------------------------------------------------------------------------------------------- |\n| `md (callback: {changed: [ViewToken](viewtoken)[], viewableItems: [ViewToken](viewtoken)[]} => void;` |",
      "source_content_hash": "788f2d25e8f62b6df27fd73779edb1c75ef253f105488154dce340e7d71e0dc3",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_c103f90f"
      }
    },
    {
      "segment_id": "804555b5",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "71a95fb4",
      "source_content": "### `progressViewOffset`",
      "source_content_hash": "39fd2a8f1930d64fa3e0f2ca9d4a48651440554497b88d10348cba8f1430d540",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `progressViewOffset`"
      }
    },
    {
      "segment_id": "0b019848",
      "source_content": "Set this when offset is needed for the loading indicator to show correctly.",
      "source_content_hash": "606fc0202f867266c9188619ae8332d019231065ebb48f6867835bf025fe5ecd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當需要偏移量以正確顯示載入指示器時，設定此屬性。"
      }
    },
    {
      "segment_id": "f0e538af",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_f0e538af"
      }
    },
    {
      "segment_id": "ded15e50",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "7ab0c024",
      "source_content": "### `refreshing`",
      "source_content_hash": "1bc2b55a5da9a24a73ceb6606770e04084d1cc586e025e8f640f63878cb5deb6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `refreshing`"
      }
    },
    {
      "segment_id": "f448a263",
      "source_content": "Set this true while waiting for new data from a refresh.",
      "source_content_hash": "f4a9731dac1a6070d089c160fb6b6ff270d14bb5d9936f06dd90ce04781370f2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在等待刷新資料時，將此屬性設為 `true`。"
      }
    },
    {
      "segment_id": "5c8a4877",
      "source_content": "| Type    |\n| ------- |\n| boolean |",
      "source_content_hash": "afc5252fe97c3b4645cc839e72fb23555baeef211698715abd6b5ac8ee57a841",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_5c8a4877"
      }
    },
    {
      "segment_id": "629feaef",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "77dc047b",
      "source_content": "### `removeClippedSubviews`",
      "source_content_hash": "d2b01d5ab6351cea3ad1de31e0a03694c1e6f6ced6db1eea925e53d9c6a9c545",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `removeClippedSubviews`"
      }
    },
    {
      "segment_id": "1dde0925",
      "source_content": "This may improve scroll performance for large lists. On Android the default value is `true`.",
      "source_content_hash": "70195dabf73c8229ecc82f29871b70183c667f1d98e8683354489cddfa46ed66",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這可能會提升大型列表的滾動效能。在 Android 上，預設值為 `true`。"
      }
    },
    {
      "segment_id": "6e945c55",
      "source_content": "> Note: May have bugs (missing content) in some circumstances - use at your own risk.",
      "source_content_hash": "2ce15d344f422fef3992346bd6351c741b75e8855119115a2213b9fcbc321cda",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-hant": "> 注意：在某些情況下可能會有錯誤（內容缺失）——使用時請自行承擔風險。"
      }
    },
    {
      "segment_id": "b24cb72a",
      "source_content": "| Type    |\n| ------- |\n| boolean |",
      "source_content_hash": "afc5252fe97c3b4645cc839e72fb23555baeef211698715abd6b5ac8ee57a841",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b24cb72a"
      }
    },
    {
      "segment_id": "23ae5919",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "ac8a983d",
      "source_content": "### `viewabilityConfig`",
      "source_content_hash": "9c164c7e8b57e2d49a317ead405556b4fb81d263ee84ab7cbd1e3e7a705e53ad",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `viewabilityConfig`"
      }
    },
    {
      "segment_id": "8d9854f6",
      "source_content": "See [`ViewabilityHelper.js`](https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Lists/ViewabilityHelper.js) for flow type and further documentation.",
      "source_content_hash": "f0fe384445bbfb8a7148ba77d0614d52cafe42266558b9501987c760c53c9435",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "請參閱 [`ViewabilityHelper.js`](https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Lists/ViewabilityHelper.js) 以獲取流程類型和進一步文檔。"
      }
    },
    {
      "segment_id": "2d91dd28",
      "source_content": "| Type              |\n| ----------------- |\n| ViewabilityConfig |",
      "source_content_hash": "4c6fe24469a6671f60eb09c8b49e900cbbce3ac0914ccbffd3515ba1eb7d2dc2",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2d91dd28"
      }
    },
    {
      "segment_id": "a490906d",
      "source_content": "`viewabilityConfig` takes a type `ViewabilityConfig` an object with following properties",
      "source_content_hash": "ba8fdc90d95a3f483d442b0496caee97748fe96115bf1949d3c8960249e3ae38",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "`viewabilityConfig` 接受類型為 `ViewabilityConfig` 的物件，該物件具有以下屬性："
      }
    },
    {
      "segment_id": "ca6845b8",
      "source_content": "| Property                         | Type    |\n| -------------------------------- | ------- |\n| minimumViewTime                  | number  |\n| viewAreaCoveragePercentThreshold | number  |\n| itemVisiblePercentThreshold      | number  |\n| waitForInteraction               | boolean |",
      "source_content_hash": "35c116da57d68183784206939dec282c59cfb83513969df74150c8f3edfd2210",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ca6845b8"
      }
    },
    {
      "segment_id": "ba86e796",
      "source_content": "At least one of the `viewAreaCoveragePercentThreshold` or `itemVisiblePercentThreshold` is required. This needs to be done in the `constructor` to avoid following error ([ref](https://github.com/facebook/react-native/issues/17408)):",
      "source_content_hash": "e0f5061c93c089b6f406f0a1b57d6b648aff043209fcbfee13aa1dd66ce1f262",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "至少需要設定 `viewAreaCoveragePercentThreshold` 或 `itemVisiblePercentThreshold` 其中一項。這需要在 `constructor` 中完成，以避免以下錯誤（[參考](https://github.com/facebook/react-native/issues/17408)）："
      }
    },
    {
      "segment_id": "50216bc1",
      "source_content": "```\n  Error: Changing viewabilityConfig on the fly is not supported\n```",
      "source_content_hash": "254bb290fa950afc7250a3416a46f8c0a3cecdcd6817138a8e8bf53cdcbfa8fb",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_50216bc1"
      }
    },
    {
      "segment_id": "2ae0569c",
      "source_content": "```tsx\nconstructor (props) {\n  super(props)\n\n  this.viewabilityConfig = {\n      waitForInteraction: true,\n      viewAreaCoveragePercentThreshold: 95\n  }\n}\n```",
      "source_content_hash": "05e260b11bb9a6f12527597424097b38a84b76ff85b91e1235e8671c10b67ff1",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2ae0569c"
      }
    },
    {
      "segment_id": "0b94e12a",
      "source_content": "```tsx\n<FlatList\n    viewabilityConfig={this.viewabilityConfig}\n  ...\n```",
      "source_content_hash": "171d992cc929ee971739a85b81dc00955f0bb8de62332777ee8384a71415af6f",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_0b94e12a"
      }
    },
    {
      "segment_id": "40419b6e",
      "source_content": "#### minimumViewTime",
      "source_content_hash": "b48757f31691bb96dfd18222f39f7781cd5a3f8ca846af8c149ba9e3c63ed515",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "#### minimumViewTime"
      }
    },
    {
      "segment_id": "cfa0fec5",
      "source_content": "Minimum amount of time (in milliseconds) that an item must be physically viewable before the viewability callback will be fired. A high number means that scrolling through content without stopping will not mark the content as viewable.",
      "source_content_hash": "3282342069fe8d8ab941b563c78c81be6d9a1bff7dd13b43608843a12b401c02",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "項目必須在物理上可見的最短時間（以毫秒為單位），才會觸發可見性回調。數值越高，表示快速滾動內容而不停止時，不會將內容標記為可見。"
      }
    },
    {
      "segment_id": "28f9d82c",
      "source_content": "#### viewAreaCoveragePercentThreshold",
      "source_content_hash": "5147648d1d183733b88ee625a09cca36eb018c115fcf3eb06395accf781301e2",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "#### viewAreaCoveragePercentThreshold"
      }
    },
    {
      "segment_id": "ec74b948",
      "source_content": "Percent of viewport that must be covered for a partially occluded item to count as \"viewable\", 0-100. Fully visible items are always considered viewable. A value of 0 means that a single pixel in the viewport makes the item viewable, and a value of 100 means that an item must be either entirely visible or cover the entire viewport to count as viewable.",
      "source_content_hash": "695a021e17729f90aa38e40865ba3702db2eedaa1fbecc097d07b3796fe21930",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "部分遮擋的項目需覆蓋視窗的百分比（0-100）才會被視為「可見」。完全可見的項目始終被視為可見。數值為0表示項目只要有一個像素在視窗內即為可見，數值為100表示項目必須完全可見或覆蓋整個視窗才會被視為可見。"
      }
    },
    {
      "segment_id": "06a92ef6",
      "source_content": "#### itemVisiblePercentThreshold",
      "source_content_hash": "b6015c4189712c3285a6a0b3536a303e2e279e8439dd9128ae7587e94cb1f03b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "#### itemVisiblePercentThreshold"
      }
    },
    {
      "segment_id": "3026c350",
      "source_content": "Similar to `viewAreaCoveragePercentThreshold`, but considers the percent of the item that is visible, rather than the fraction of the viewable area it covers.",
      "source_content_hash": "c0151fcf78ee1f5666fc5d1adc7e77faeb305949808bda7e46142e9dc37ef96b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "與`viewAreaCoveragePercentThreshold`類似，但考慮的是項目本身的可見百分比，而非其覆蓋視窗區域的比例。"
      }
    },
    {
      "segment_id": "f88a1fd5",
      "source_content": "#### waitForInteraction",
      "source_content_hash": "0652ac1b1f7c4004dd60f863e4da9ad1cba4be1613833f321211f59cc26206ab",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "#### waitForInteraction"
      }
    },
    {
      "segment_id": "7c5ccba4",
      "source_content": "Nothing is considered viewable until the user scrolls or `recordInteraction` is called after render.",
      "source_content_hash": "4cc69ad240baed92cb1d7420acc3cfaa625cb61cd6b8649b9898ef406aaa7fcb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在用戶滾動或渲染後調用`recordInteraction`之前，不會將任何內容視為可見。"
      }
    },
    {
      "segment_id": "2c410905",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "55e61360",
      "source_content": "### `viewabilityConfigCallbackPairs`",
      "source_content_hash": "0a7a6130749abace2ab2a3103d1dc5d4f33c4652455ff9660f097eceee44f34f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `viewabilityConfigCallbackPairs`"
      }
    },
    {
      "segment_id": "b38aecd0",
      "source_content": "List of `ViewabilityConfig`/`onViewableItemsChanged` pairs. A specific `onViewableItemsChanged` will be called when its corresponding `ViewabilityConfig`'s conditions are met. See `ViewabilityHelper.js` for flow type and further documentation.",
      "source_content_hash": "a0596bcada15140b73380190833efd46e6a47885026106ef3ba719c77bf57237",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "`ViewabilityConfig`與`onViewableItemsChanged`的配對列表。當對應的`ViewabilityConfig`條件滿足時，會調用特定的`onViewableItemsChanged`。詳見`ViewabilityHelper.js`的流程類型與進一步文檔。"
      }
    },
    {
      "segment_id": "13df0cd6",
      "source_content": "| Type                                   |\n| -------------------------------------- |\n| array of ViewabilityConfigCallbackPair |",
      "source_content_hash": "6dfa54f69b105be6977a52c9cb11b7559e6ff0f357ac842dfc32fb4b9474a39c",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_13df0cd6"
      }
    },
    {
      "segment_id": "680431f7",
      "source_content": "## Methods",
      "source_content_hash": "f10f482f08112298a7b6d3090f1ea9c2254688471ce31e5da64ed9631f177b5d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 方法"
      }
    },
    {
      "segment_id": "38617d9e",
      "source_content": "### `flashScrollIndicators()`",
      "source_content_hash": "8221c0b097c283bbf09fc1bda0d28641a1fb54dd256ea070499e8ac497e9a3ba",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `flashScrollIndicators()`"
      }
    },
    {
      "segment_id": "634bf301",
      "source_content": "```tsx\nflashScrollIndicators();\n```",
      "source_content_hash": "a047294486a7ea7f6d43d35f66429435ae71c714ad4266f3b02cf5e588bb87f5",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_634bf301"
      }
    },
    {
      "segment_id": "0b01a81d",
      "source_content": "Displays the scroll indicators momentarily.",
      "source_content_hash": "eb9be2699dbaddecf1162ff5bbaec42a0104d6766322e67f7233a52b7b734282",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "短暫顯示滾動指示器。"
      }
    },
    {
      "segment_id": "0d3f8322",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "9a2925a3",
      "source_content": "### `getNativeScrollRef()`",
      "source_content_hash": "ed5710066c303ecd1979eb0819abd5f974370d23f86ed6cf105b77ea6d5fb09a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `getNativeScrollRef()`"
      }
    },
    {
      "segment_id": "ef3c6101",
      "source_content": "```tsx\ngetNativeScrollRef(): React.ElementRef<typeof ScrollViewComponent>;\n```",
      "source_content_hash": "aee0dcd2c64cc400af2c90a66d26b0db34ed2164685ef635e99752c2157eba9e",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ef3c6101"
      }
    },
    {
      "segment_id": "4ef51667",
      "source_content": "Provides a reference to the underlying scroll component",
      "source_content_hash": "d6fa00091088b0f2c90be524e61561f1435ebee4e6ec4c356ed8999dcf924f09",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "提供底層滾動元件的參考。"
      }
    },
    {
      "segment_id": "77a498bc",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "1837c34a",
      "source_content": "### `getScrollResponder()`",
      "source_content_hash": "23acbffbd88dfda8d073d96c33474ae32b2242ff5a95b031fa7f8ed5c84b16a9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `getScrollResponder()`"
      }
    },
    {
      "segment_id": "2cac0c6e",
      "source_content": "```tsx\ngetScrollResponder(): ScrollResponderMixin;\n```",
      "source_content_hash": "70702936aa7613c0b4f6187506efce45b7c61d0dda855c587787b6088bcd8ec7",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2cac0c6e"
      }
    },
    {
      "segment_id": "f1fac001",
      "source_content": "Provides a handle to the underlying scroll responder.",
      "source_content_hash": "74341e9f9b28f1469f62452ce27efae0090303d677949bde7b275eaa9229577a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "提供底層滾動響應器的控制權。"
      }
    },
    {
      "segment_id": "86e4f6a7",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "5d86c2d6",
      "source_content": "### `getScrollableNode()`",
      "source_content_hash": "89db6f4b7e24b097716e713f37845bf950a6bce22c954ccf9d81573e83b58801",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `getScrollableNode()`"
      }
    },
    {
      "segment_id": "8b459c48",
      "source_content": "```tsx\ngetScrollableNode(): any;\n```",
      "source_content_hash": "a1e3262700ed46529e0bad1f4992207419c830f6849f1fcdb72798b24b1be28f",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_8b459c48"
      }
    },
    {
      "segment_id": "1526930a",
      "source_content": "Provides a handle to the underlying scroll node.",
      "source_content_hash": "e7c99d45bde0a0fb2f0df65ed555ca3b1a43993e5aa026c1c5de05f343b4c240",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "提供底層滾動節點的控制權。"
      }
    },
    {
      "segment_id": "123a29ac",
      "source_content": "### `scrollToEnd()`",
      "source_content_hash": "eccf8af1ffef17331eb176ef79162a132d59ca5117619cafcfeb7aaf071b922f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `scrollToEnd()`"
      }
    },
    {
      "segment_id": "85c99f1f",
      "source_content": "```tsx\nscrollToEnd(params?: {animated?: boolean});\n```",
      "source_content_hash": "ce76a809c39c8bd8376d90b0bcff6e0167a26640caeba92d26bfafbea41c9533",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_85c99f1f"
      }
    },
    {
      "segment_id": "c31dcf3a",
      "source_content": "Scrolls to the end of the content. May be janky without `getItemLayout` prop.",
      "source_content_hash": "8515e603882d9432ad236a24f5fecc685e490efc2a1c1ca36a384283d84620ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "滾動至內容末尾。若未提供`getItemLayout`屬性，可能會出現卡頓。"
      }
    },
    {
      "segment_id": "96a98088",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "510d71ae",
      "source_content": "| Name   | Type   |\n| ------ | ------ |\n| params | object |",
      "source_content_hash": "ba3df00bf0350c02b2a0f0be8365daebdd33a239846daa8fb30d015f54cb6210",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_510d71ae"
      }
    },
    {
      "segment_id": "e04563fb",
      "source_content": "Valid `params` keys are:",
      "source_content_hash": "3a47ff88af562cb637f5a1c62778f1acf49b126f92fd66c8bc4952c6c7ba3f50",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "有效的`params`鍵值為："
      }
    },
    {
      "segment_id": "19956682",
      "source_content": "- 'animated' (boolean) - Whether the list should do an animation while scrolling. Defaults to `true`.",
      "source_content_hash": "573380ac06c2d27044ecaecb459fcba4e85ffff1277ec9b2bc5ccdf910d1e46f",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 'animated' (boolean) - 滾動時是否執行動畫。預設為`true`。"
      }
    },
    {
      "segment_id": "7a15c150",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "75fe70df",
      "source_content": "### `scrollToIndex()`",
      "source_content_hash": "c38f27a198fbe85a7181857242b63c72f3916744bd7fd260f58a9284cef7dd51",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `scrollToIndex()`"
      }
    },
    {
      "segment_id": "f4a5584a",
      "source_content": "```tsx\nscrollToIndex: (params: {\n  index: number;\n  animated?: boolean;\n  viewOffset?: number;\n  viewPosition?: number;\n});\n```",
      "source_content_hash": "01a42fc9272bffa6dca9bcc586bc0ba11a5113609351092d2aa3389a00728acb",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_f4a5584a"
      }
    },
    {
      "segment_id": "45652342",
      "source_content": "Scrolls to the item at the specified index such that it is positioned in the viewable area such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the middle.",
      "source_content_hash": "e46a8de27101750b1c8abfc7f0e1140a326161b356363061a5620906bf9ff0b9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "滾動至指定索引的項目，並將其定位在可見區域內：`viewPosition`為0時置頂，1時置底，0.5時居中。"
      }
    },
    {
      "segment_id": "8c4c5eb2",
      "source_content": "> Note: Cannot scroll to locations outside the render window without specifying the `getItemLayout` prop.",
      "source_content_hash": "2af6051a2cfb9a5d4f7f2b50b5b496d73b661eb7d58fe31deb13533f851a1700",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-hant": "> 注意：若未指定`getItemLayout`屬性，無法滾動至渲染視窗外的位置。"
      }
    },
    {
      "segment_id": "ef3f5c18",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "a67d34a8",
      "source_content": "| Name                                                        | Type   |\n| ----------------------------------------------------------- | ------ |\n| params <div className=\"label basic required\">Required</div> | object |",
      "source_content_hash": "f74d673fe3141d2627f36c1e84f97a5ccfb0697e6c797f07b75b0beb7f3b5670",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_a67d34a8"
      }
    },
    {
      "segment_id": "855bf260",
      "source_content": "Valid `params` keys are:",
      "source_content_hash": "3a47ff88af562cb637f5a1c62778f1acf49b126f92fd66c8bc4952c6c7ba3f50",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "有效的`params`鍵值為："
      }
    },
    {
      "segment_id": "3e0394ee",
      "source_content": "- 'animated' (boolean) - Whether the list should do an animation while scrolling. Defaults to `true`.\n- 'index' (number) - The index to scroll to. Required.\n- 'viewOffset' (number) - A fixed number of pixels to offset the final target position.\n- 'viewPosition' (number) - A value of `0` places the item specified by index at the top, `1` at the bottom, and `0.5` centered in the middle.",
      "source_content_hash": "a15d4f9e9cb291287e03a79fb64dcb0446da00487c6e10f263dd711d235891f3",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 'animated' (boolean) - 滾動時是否執行動畫。預設為`true`。\n- 'index' (number) - 要滾動至的索引。必填。\n- 'viewOffset' (number) - 最終目標位置的固定像素偏移量。\n- 'viewPosition' (number) - 數值為`0`時將指定索引的項目置頂，`1`時置底，`0.5`時居中。"
      }
    },
    {
      "segment_id": "e32e1c06",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "1586fb38",
      "source_content": "### `scrollToItem()`",
      "source_content_hash": "75a8f3ccf28e6f0673551848499465e5e67aa671fbcf110872309345f666dc70",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `scrollToItem()`"
      }
    },
    {
      "segment_id": "ce689fdc",
      "source_content": "```tsx\nscrollToItem(params: {\n  animated?: ?boolean,\n  item: Item,\n  viewPosition?: number,\n});\n```",
      "source_content_hash": "d86a3068a54d0ed6d1c8d55e001be10d6975f87955b78dc715c9d1d1dacf55a4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ce689fdc"
      }
    },
    {
      "segment_id": "d523ebc0",
      "source_content": "Requires linear scan through data - use `scrollToIndex` instead if possible.",
      "source_content_hash": "b05e21f40f8a71567fddfb10cc8ac8afdd7814093ccf8c21aaaad0e5fa40b27a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "需要線性掃描數據 - 如果可能的話，請改用 `scrollToIndex`。"
      }
    },
    {
      "segment_id": "a3dbb76e",
      "source_content": "> Note: Cannot scroll to locations outside the render window without specifying the `getItemLayout` prop.",
      "source_content_hash": "2af6051a2cfb9a5d4f7f2b50b5b496d73b661eb7d58fe31deb13533f851a1700",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-hant": "> 注意：若未指定 `getItemLayout` 屬性，則無法滾動到渲染窗口外的位置。"
      }
    },
    {
      "segment_id": "dd0c7dc2",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "8bd630b1",
      "source_content": "| Name                                                        | Type   |\n| ----------------------------------------------------------- | ------ |\n| params <div className=\"label basic required\">Required</div> | object |",
      "source_content_hash": "f74d673fe3141d2627f36c1e84f97a5ccfb0697e6c797f07b75b0beb7f3b5670",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_8bd630b1"
      }
    },
    {
      "segment_id": "2fdac702",
      "source_content": "Valid `params` keys are:",
      "source_content_hash": "3a47ff88af562cb637f5a1c62778f1acf49b126f92fd66c8bc4952c6c7ba3f50",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "有效的 `params` 鍵值包括："
      }
    },
    {
      "segment_id": "b80fe775",
      "source_content": "- 'animated' (boolean) - Whether the list should do an animation while scrolling. Defaults to `true`.\n- 'item' (object) - The item to scroll to. Required.\n- 'viewPosition' (number)",
      "source_content_hash": "7428e0909ff823bae3e89d2011799959bea1cb7078359aa4096741268a00130d",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 'animated' (布林值) - 列表滾動時是否執行動畫。默認為 `true`。\n- 'item' (物件) - 要滾動到的項目。必需。\n- 'viewPosition' (數字)"
      }
    },
    {
      "segment_id": "b3da07f2",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "25a25dbe",
      "source_content": "### `scrollToOffset()`",
      "source_content_hash": "945e6b062c13d6a72258391f82a2771b7b0de0c005b35fc8f9fa8cd1c81505d9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `scrollToOffset()`"
      }
    },
    {
      "segment_id": "ccbd5332",
      "source_content": "```tsx\nscrollToOffset(params: {\n  offset: number;\n  animated?: boolean;\n});\n```",
      "source_content_hash": "cf797962b45a00a5aba0b9b0c11ef697c5c7b52fde548d19a4c5505913f1dd6a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ccbd5332"
      }
    },
    {
      "segment_id": "1aa07733",
      "source_content": "Scroll to a specific content pixel offset in the list.",
      "source_content_hash": "233f08d07b3353755673e79ae47930f953e99f759b1881eb9d4c142f191a68b8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "滾動到列表中的特定內容像素偏移量。"
      }
    },
    {
      "segment_id": "e28b963e",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "1776a0db",
      "source_content": "| Name                                                        | Type   |\n| ----------------------------------------------------------- | ------ |\n| params <div className=\"label basic required\">Required</div> | object |",
      "source_content_hash": "f74d673fe3141d2627f36c1e84f97a5ccfb0697e6c797f07b75b0beb7f3b5670",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_1776a0db"
      }
    },
    {
      "segment_id": "67245636",
      "source_content": "Valid `params` keys are:",
      "source_content_hash": "3a47ff88af562cb637f5a1c62778f1acf49b126f92fd66c8bc4952c6c7ba3f50",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "有效的 `params` 鍵值包括："
      }
    },
    {
      "segment_id": "d1cf9294",
      "source_content": "- 'offset' (number) - The offset to scroll to. In case of `horizontal` being true, the offset is the x-value, in any other case the offset is the y-value. Required.\n- 'animated' (boolean) - Whether the list should do an animation while scrolling. Defaults to `true`.",
      "source_content_hash": "ffd410569979c462c3cfcf3cc3ee5e5315fd98a1d5c359b4b7d13dd09b8f50df",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 'offset' (數字) - 要滾動到的偏移量。若 `horizontal` 為 true，則偏移量為 x 值，否則為 y 值。必需。\n- 'animated' (布林值) - 列表滾動時是否執行動畫。默認為 `true`。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.80/flatlist.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.786169+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "9996399267e8d24214f25bf2e7c9dea102ec5538d029892a714ecd574cced1d0"
  }
}