{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.80/the-new-architecture/codegen-cli.md",
  "source_file_content_hash": "d8c2868114c8871f200c4f248417260f4884c9ca2047de9d3ea709b70b9c025f",
  "segments": [
    {
      "segment_id": "76e4a56a",
      "source_content": "# The Codegen CLI",
      "source_content_hash": "aed48ab84491bd37a6df51fe6930867c101163642a686e6fe5b5b020c4f223b0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# Codegen 命令行工具"
      }
    },
    {
      "segment_id": "faebdc62",
      "source_content": "Calling Gradle or manually calling a script might be hard to remember and it requires a lot of ceremony.",
      "source_content_hash": "23e1a5d566ee89d2ac9aa6e02d9369a3bd13774189b4d8cf960e27d3d1cc61ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "手動調用 Gradle 或執行腳本可能難以記憶且需要繁瑣步驟。"
      }
    },
    {
      "segment_id": "e7ec8f99",
      "source_content": "To simplify it, we created a CLI tool that can help you running those tasks: the **Codegen** cli. This command runs [@react-native/codegen](https://www.npmjs.com/package/@react-native/codegen) for your project. The following options are available:",
      "source_content_hash": "89dd4f7ff994e9feefb39cf0c09ccf9de9b25a5e5158f00e161617f1d05525e6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "為簡化流程，我們創建了一個 CLI 工具來協助執行這些任務：**Codegen** 命令行工具。此命令會為您的專案執行 [@react-native/codegen](https://www.npmjs.com/package/@react-native/codegen)。可用選項如下："
      }
    },
    {
      "segment_id": "efa96cff",
      "source_content": "```sh\nnpx @react-native-community/cli codegen --help\nUsage: rnc-cli codegen [options]\n\nOptions:\n  --verbose            Increase logging verbosity\n  --path <path>        Path to the React Native project root. (default: \"/Users/MyUsername/projects/my-app\")\n  --platform <string>  Target platform. Supported values: \"android\", \"ios\", \"all\". (default: \"all\")\n  --outputPath <path>  Path where generated artifacts will be output to.\n  -h, --help           display help for command\n```",
      "source_content_hash": "a02fa29f3a64f172f41188f90529e8e7601d950213d17bce45d26b8c962692df",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_efa96cff"
      }
    },
    {
      "segment_id": "aee0e40d",
      "source_content": "## Examples",
      "source_content_hash": "0d19ab46319785768005536313f02bd3b9b779aaed82eeac5bf7a7f796ad3ef1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 範例"
      }
    },
    {
      "segment_id": "0787cf7f",
      "source_content": "- Read `package.json` from the current working directory, generate code based on its codegenConfig.",
      "source_content_hash": "24ac67716931218aa00483be1b3e0d78bfd08f362234f9b56887bf565938bf9d",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 從當前工作目錄讀取 `package.json`，根據其 codegenConfig 生成程式碼。"
      }
    },
    {
      "segment_id": "41a8ae85",
      "source_content": "```shell\nnpx @react-native-community/cli codegen\n```",
      "source_content_hash": "52c571a44b6fd0b6db94e33fe8c5fd2423976397092dee18bda8eb1605e69da4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_41a8ae85"
      }
    },
    {
      "segment_id": "b3f5c97c",
      "source_content": "- Read `package.json` from the current working directory, generate iOS code in the location defined in the codegenConfig.",
      "source_content_hash": "c48230c2e990a4bdac7bc49020c2a63b30db363fcaebb2d98ccbb5ce80c19cbd",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 從當前工作目錄讀取 `package.json`，在 codegenConfig 定義的位置生成 iOS 程式碼。"
      }
    },
    {
      "segment_id": "0c911872",
      "source_content": "```shell\nnpx @react-native-community/cli codegen --platform ios\n```",
      "source_content_hash": "874d7f053d32c2334b9d0680853faa777ca6fd38cd601101d5f8b312e7413a1c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_0c911872"
      }
    },
    {
      "segment_id": "cd471e4e",
      "source_content": "- Read `package.json` from `third-party/some-library`, generate Android code in `third-party/some-library/android/generated`.",
      "source_content_hash": "e86693a1196d93a9ecbf28c317d382d58738f9fde010029b2f651c501e59e8d1",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 從 `third-party/some-library` 讀取 `package.json`，在 `third-party/some-library/android/generated` 生成 Android 程式碼。"
      }
    },
    {
      "segment_id": "ef6eebef",
      "source_content": "```shell\nnpx @react-native-community/cli codegen \\\n    --path third-party/some-library \\\n    --platform android \\\n    --outputPath third-party/some-library/android/generated\n```",
      "source_content_hash": "79864746e18bf8dae8f9cdc9edd63b29130d13da6f06457bb76f2e882ebf7b61",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ef6eebef"
      }
    },
    {
      "segment_id": "8d04259b",
      "source_content": "## Including Generated Code into Libraries",
      "source_content_hash": "bdbf62e499686968aa8ba83d721f4365b5e2f32e524bf38807f06f41f44daed5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 將生成程式碼納入函式庫"
      }
    },
    {
      "segment_id": "95e9ba12",
      "source_content": "The Codegen CLI is a great tool for library developers. It can be used to take a sneak-peek at the generated code to see which interfaces you need to implement.",
      "source_content_hash": "ece862d67e7fc23d6df2fbe561e696a99b77f0525b2e1c0b42116a320485aad3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Codegen CLI 是函式庫開發者的絕佳工具，可用於預覽生成程式碼以確認需實作的介面。"
      }
    },
    {
      "segment_id": "8af76f3d",
      "source_content": "Normally the generated code is not included in the library, and the app that uses the library is responsible for running the Codegen at build time.\nThis is a good setup for most cases, but Codegen also offers a mechanism to include the generated code in the library itself via the `includesGeneratedCode` property.",
      "source_content_hash": "16d56e3efe4a43d2df006e085b26da3e0752ba2bba03c54d1b84fc182596f035",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "通常生成程式碼不會包含在函式庫中，而是由使用該函式庫的應用程式在建置時執行 Codegen。這對多數情況是理想的設定，但 Codegen 也提供透過 `includesGeneratedCode` 屬性將生成程式碼直接包含在函式庫內的機制。"
      }
    },
    {
      "segment_id": "29528c8d",
      "source_content": "It's important to understand what are the implications of using `includesGeneratedCode = true`. Including the generated code comes with several benefits such as:",
      "source_content_hash": "aede5a1d081b098b768d58e5e4508478595c211a50eaca0cb4c8bcfcfe30ee66",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "理解使用 `includesGeneratedCode = true` 的影響至關重要。包含生成程式碼具有以下優勢："
      }
    },
    {
      "segment_id": "ddd2c7ae",
      "source_content": "- No need to rely on the app to run **Codegen** for you, the generated code is always there.\n- The implementation files are always consistent with the generated interfaces (this makes your library code more resilient against API changes in codegen).\n- No need to include two sets of files to support both architectures on Android. You can only keep the New Architecture one, and it is guaranteed to be backwards compatible.\n- Since all native code is there, it is possible to ship the native part of the library as a prebuild.",
      "source_content_hash": "3d431c4cb1d07749b1a0c3c8bc7044c50e6d0c45e4561d2667e42194aaf5ef99",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 無需依賴應用程式為您執行 **Codegen**，生成程式碼始終存在。\n- 實作檔案始終與生成介面保持一致（使您的函式庫程式碼更能抵禦 codegen 的 API 變更）。\n- 無需包含兩組檔案來支援 Android 的兩種架構。您只需保留新架構的檔案，且保證向後兼容。\n- 由於所有原生程式碼都已存在，可將函式庫的原生部分作為預編譯版本發布。"
      }
    },
    {
      "segment_id": "b9aaa519",
      "source_content": "On the other hand, you also need to be aware of one drawback:",
      "source_content_hash": "ce724a61479748f4615ad94b2fb953e476c350e609edad1e98538c24b67965a6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "但您也需注意一個缺點："
      }
    },
    {
      "segment_id": "e3321a43",
      "source_content": "- The generated code will use the React Native version defined inside your library. So if your library is shipping with React Native 0.76, the generated code will be based on that version. This could mean that the generated code is not compatible with apps using **previous** React Native version used by the app (e.g. an App running on React Native 0.75).",
      "source_content_hash": "a923409a4354f78263b1ffa72366e38b1430c0d8d1621a059f1ab61f834444bf",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 生成程式碼將使用函式庫內部定義的 React Native 版本。若您的函式庫基於 React Native 0.76 發布，生成程式碼將基於該版本。這可能意味著生成程式碼與使用**較舊** React Native 版本的應用程式（例如運行於 React Native 0.75 的應用）不相容。"
      }
    },
    {
      "segment_id": "ab5fc5b5",
      "source_content": "## Enabling `includesGeneratedCode`",
      "source_content_hash": "4da5345eab23714a44f1729c16853d96093d74970e21d1bbb202333bd5429ef6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 啟用 `includesGeneratedCode`"
      }
    },
    {
      "segment_id": "6ea4c715",
      "source_content": "To enable this setup:",
      "source_content_hash": "f7a2a0510adda41247f382b83d8c9bd7bf22508f725f7a849b103737db8fbe2c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "啟用此設定的步驟："
      }
    },
    {
      "segment_id": "158e1f5d",
      "source_content": "- Add the `includesGeneratedCode` property into your library's `codegenConfig` field in the `package.json` file. Set its value to `true`.\n- Run **Codegen** locally with the codegen CLI.\n- Update your `package.json` to include the generated code.\n- Update your `podspec` to include the generated code.\n- Update your `build.Gradle` file to include the generated code.\n- Update `cmakeListsPath` in `react-native.config.js` so that Gradle doesn't look for CMakeLists file in the build directory but instead in your outputDir.",
      "source_content_hash": "96568b6d723eaf7f99ce956f13132b022e7b04660bda105c72ad701b0cfcbe7c",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 在函式庫 `package.json` 檔案的 `codegenConfig` 欄位新增 `includesGeneratedCode` 屬性，設為 `true`。\n- 使用 codegen CLI 在本機執行 **Codegen**。\n- 更新 `package.json` 以包含生成程式碼。\n- 更新 `podspec` 以包含生成程式碼。\n- 更新 `build.Gradle` 檔案以包含生成程式碼。\n- 在 `react-native.config.js` 中更新 `cmakeListsPath`，使 Gradle 不在建置目錄中尋找 CMakeLists 檔案，而是轉向您的 outputDir。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.80/the-new-architecture/codegen-cli.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.852582+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "d8c2868114c8871f200c4f248417260f4884c9ca2047de9d3ea709b70b9c025f"
  }
}