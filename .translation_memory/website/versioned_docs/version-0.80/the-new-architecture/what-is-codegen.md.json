{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.80/the-new-architecture/what-is-codegen.md",
  "source_file_content_hash": "cda2d6fe1b4f3dd4b0933a74fe8bcd221f40db2ca11f2c4fa81c66142d289452",
  "segments": [
    {
      "segment_id": "76e4a56a",
      "source_content": "# What is Codegen?",
      "source_content_hash": "7bac396cc11ae5609eaa7c3923ff632c9f8c217941eccd3f40e799c43814df84",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# 什麼是 Codegen？"
      }
    },
    {
      "segment_id": "faebdc62",
      "source_content": "**Codegen** is a tool to avoid writing a lot of repetitive code. Using Codegen **is not mandatory**: you can write all the generated manually. However, **Codegen** generates scaffolding code that could save you a lot of time.",
      "source_content_hash": "7336f74a80d702c40a0077ee7d748d3852426ca672a5a5a7ba8e6dcc2beca090",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**Codegen** 是一個用於避免撰寫大量重複代碼的工具。使用 **Codegen** **並非強制性**：你可以手動撰寫所有生成的代碼。然而，**Codegen** 會生成支架代碼，這可能為你節省大量時間。"
      }
    },
    {
      "segment_id": "e7ec8f99",
      "source_content": "React Native invokes **Codegen** automatically every time an iOS or Android app is built. Occasionally, you would like to manually run the **Codegen** scripts to know which types and files are actually generated: this is a common scenario when developing Turbo Native Modules and Fabric Native Components.",
      "source_content_hash": "b6b8f5df07d52f7aa03a49904a831c28936e34ba378b32a57d1540679105932b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 在每次構建 iOS 或 Android 應用時會自動調用 **Codegen**。偶爾，你可能會希望手動運行 **Codegen** 腳本，以了解實際生成的類型和文件：這在開發 Turbo Native Modules 和 Fabric Native Components 時是一個常見的場景。"
      }
    },
    {
      "segment_id": "d2a80f25",
      "source_content": "<!-- TODO: Add links to TM and FC -->",
      "source_content_hash": "110c728bdfd548b06b21f9e14d10299aba0e6781f2fca701754cf7293c932f05",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_d2a80f25"
      }
    },
    {
      "segment_id": "d912d376",
      "source_content": "## How does Codegen works",
      "source_content_hash": "88aed4f32947964c1025a814bacee34a299a4e6228407983df07b466e20dafef",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## Codegen 如何運作"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "**Codegen** is a process that is tightly coupled with a React Native app. The **Codegen** scripts live inside the `react-native` NPM package and the apps call those scripts at build time.",
      "source_content_hash": "f317e3b0bc1cf14376b70da834679edaf7e9e9e221b4d3879b08dbda5cc064b4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**Codegen** 是一個與 React Native 應用緊密耦合的過程。**Codegen** 腳本位於 `react-native` NPM 套件中，應用在構建時會調用這些腳本。"
      }
    },
    {
      "segment_id": "180bddb1",
      "source_content": "**Codegen** crawls the folders in your project, starting from a directory you specify in your `package.json`, looking for some specific JS files that contains the specification (or specs) for your custom modules and components. Spec files are JS files written in a typed dialect: React Native currently supports Flow and TypeScript.",
      "source_content_hash": "03431e584f8235f47803250ac240c3959cc53928dcffe06689c956cc67e5d516",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**Codegen** 會從你在 `package.json` 中指定的目錄開始，爬取專案中的文件夾，尋找包含自定義模組和組件規格（或稱 specs）的特定 JS 文件。規格文件是以類型化方言撰寫的 JS 文件：React Native 目前支援 Flow 和 TypeScript。"
      }
    },
    {
      "segment_id": "cf898102",
      "source_content": "Every time **Codegen** finds a spec file, it generates the boilerplate code associated to it. **Codegen** generates some C++ glue-code and then it generates platform-specific code, using Java for Android and Objective-C++ for iOS.",
      "source_content_hash": "334de6fdc7638c22d927a35e5861beecb6655cbef4c29fac54e8a9c236af3164",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "每當 **Codegen** 找到一個規格文件時，它會生成與之相關的樣板代碼。**Codegen** 會生成一些 C++ 粘合代碼，然後再生成平台特定的代碼，使用 Java 為 Android 生成代碼，使用 Objective-C++ 為 iOS 生成代碼。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.80/the-new-architecture/what-is-codegen.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.839291+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "cda2d6fe1b4f3dd4b0933a74fe8bcd221f40db2ca11f2c4fa81c66142d289452"
  }
}