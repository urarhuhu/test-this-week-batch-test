{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.80/platformcolor.md",
  "source_file_content_hash": "e0cb104953300ab8362ac1f1f02ae57a0d46253d8934444745f1a1824854f209",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: platformcolor\ntitle: PlatformColor\n---",
      "source_content_hash": "e361f191d8d90cf71f0a04a2f3840466cd1574834469a4a4c46e98eedd005b2c",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "e6a5da7c",
      "source_content": "```js\nPlatformColor(color1, [color2, ...colorN]);\n```",
      "source_content_hash": "0e503b9dc8fa7a319281cfba910b59d87ebfb947ab8183530d7f9442fa8daf74",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_e6a5da7c"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "You can use the `PlatformColor` function to access native colors on the target platform by supplying the native color’s corresponding string value. You pass a string to the `PlatformColor` function and, provided it exists on that platform, it will return the corresponding native color, which you can apply in any part of your application.",
      "source_content_hash": "717be4eecdc9f2361806f43b38f35476d0d62a745d853eb828c8301ddb6d745b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您可以使用 `PlatformColor` 函數，通過提供對應的原生顏色字符串值來存取目標平台上的原生顏色。將字符串傳遞給 `PlatformColor` 函數，如果該顏色在該平台上存在，它將返回相應的原生顏色，您可以將其應用於應用程式的任何部分。"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "If you pass more than one string value to the `PlatformColor` function, it will treat the first value as the default and the rest as fallback.",
      "source_content_hash": "e199e7c5314e3bb17dcf8a43567ddd531dbb7659856af677ebd46e3fe3c9bfbe",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "如果您向 `PlatformColor` 函數傳遞多個字符串值，它會將第一個值視為默認值，其餘的作為備用。"
      }
    },
    {
      "segment_id": "41ad46a6",
      "source_content": "```js\nPlatformColor('bogusName', 'linkColor');\n```",
      "source_content_hash": "f97d7e75c082641401a73a9c98f937cc91b78891edb81bcd3e318712121a1e8e",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_41ad46a6"
      }
    },
    {
      "segment_id": "1acb9a05",
      "source_content": "Since native colors can be sensitive to themes and/or high contrast, this platform specific logic also translates inside your components.",
      "source_content_hash": "42edf9a6aefffff7d3a0db82e3a6ad4650a9f3def0ae487a2b8ede3618e6c8d8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "由於原生顏色可能對主題和/或高對比度敏感，這種平台特定的邏輯也會在您的組件內部轉換。"
      }
    },
    {
      "segment_id": "63622bf0",
      "source_content": "### Supported colors",
      "source_content_hash": "d582b0252ac4aa9d87d377cdb387713f10022525ac24bb688854f1a17aebb5ee",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 支援的顏色"
      }
    },
    {
      "segment_id": "98cfbd53",
      "source_content": "For a full list of the types of system colors supported, see:",
      "source_content_hash": "8ff9e49c84744c7907678e2e1bdb936261b7b2017585f4f31d7bb8dee22f7ca1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "有關支援的系統顏色類型的完整列表，請參閱："
      }
    },
    {
      "segment_id": "0cc488ed",
      "source_content": "- Android:\n  - [R.attr](https://developer.android.com/reference/android/R.attr) - `?attr` prefix\n  - [R.color](https://developer.android.com/reference/android/R.color) - `@android:color` prefix\n- iOS (Objective-C and Swift notations):\n  - [UIColor Standard Colors](https://developer.apple.com/documentation/uikit/uicolor/standard_colors)\n  - [UIColor UI Element Colors](https://developer.apple.com/documentation/uikit/uicolor/ui_element_colors)",
      "source_content_hash": "c4e1902782eea5660e41cbdd485eea4a720bb3f8c20d37188624f12377c191cb",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- Android：\n  - [R.attr](https://developer.android.com/reference/android/R.attr) - `?attr` 前綴\n  - [R.color](https://developer.android.com/reference/android/R.color) - `@android:color` 前綴\n- iOS（Objective-C 和 Swift 表示法）：\n  - [UIColor Standard Colors](https://developer.apple.com/documentation/uikit/uicolor/standard_colors)\n  - [UIColor UI Element Colors](https://developer.apple.com/documentation/uikit/uicolor/ui_element_colors)"
      }
    },
    {
      "segment_id": "0037ff70",
      "source_content": "#### Developer notes",
      "source_content_hash": "66e953d4565d4aaa29f8e46c15a35a647c771f450704cb6a726e362a63753246",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "#### 開發者注意事項"
      }
    },
    {
      "segment_id": "74d049c6",
      "source_content": "<Tabs groupId=\"guide\" queryString defaultValue=\"web\" values={constants.getDevNotesTabs([\"web\"])}>\n\n<TabItem value=\"web\">\n\n> If you’re familiar with design systems, another way of thinking about this is that `PlatformColor` lets you tap into the local design system's color tokens so your app can blend right in!\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "b7a15810fc54bf3c579e17a1c606ea822bf23c46c88a53d5947f75d3f6bf06e6",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_74d049c6"
      }
    },
    {
      "segment_id": "54268405",
      "source_content": "## Example",
      "source_content_hash": "9bf34f44c9d1371f4eda569dfa04ff7830aff81cfa81646e680cef087714cdc1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 範例"
      }
    },
    {
      "segment_id": "4ec2920d",
      "source_content": "```SnackPlayer name=PlatformColor%20Example&supportedPlatforms=android,ios\nimport React from 'react';\nimport {Platform, PlatformColor, StyleSheet, Text} from 'react-native';\nimport {SafeAreaView, SafeAreaProvider} from 'react-native-safe-area-context';\n\nconst App = () => (\n  <SafeAreaProvider>\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.label}>I am a special label color!</Text>\n    </SafeAreaView>\n  </SafeAreaProvider>\n);\n\nconst styles = StyleSheet.create({\n  label: {\n    padding: 16,\n    fontWeight: '800',\n    ...Platform.select({\n      ios: {\n        color: PlatformColor('label'),\n        backgroundColor: PlatformColor('systemTealColor'),\n      },\n      android: {\n        color: PlatformColor('?android:attr/textColor'),\n        backgroundColor: PlatformColor('@android:color/holo_blue_bright'),\n      },\n      default: {color: 'black'},\n    }),\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default App;\n```",
      "source_content_hash": "2280a508e043a07b09531f3d8388f1cb937df0bd98aa5f558f4d936762a19058",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4ec2920d"
      }
    },
    {
      "segment_id": "fbc2db85",
      "source_content": "The string value provided to the `PlatformColor` function must match the string as it exists on the native platform where the app is running. In order to avoid runtime errors, the function should be wrapped in a platform check, either through a `Platform.OS === 'platform'` or a `Platform.select()`, as shown on the example above.",
      "source_content_hash": "f092a38b39008c0f01b5d6d5999fc336a60e90512c5699f4870ad81117f87923",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "提供給 `PlatformColor` 函數的字符串值必須與應用程式運行的原生平台上的字符串完全匹配。為了避免運行時錯誤，該函數應通過 `Platform.OS === 'platform'` 或 `Platform.select()` 進行平台檢查，如上例所示。"
      }
    },
    {
      "segment_id": "7680a960",
      "source_content": "> **Note:** You can find a complete example that demonstrates proper, intended use of `PlatformColor` in [PlatformColorExample.js](https://github.com/facebook/react-native/blob/main/packages/rn-tester/js/examples/PlatformColor/PlatformColorExample.js).",
      "source_content_hash": "c0442913500904f436a469d8b350a9fd073761c748b052b8e3e8ac56f68d5945",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-hant": "> **注意：** 您可以在 [PlatformColorExample.js](https://github.com/facebook/react-native/blob/main/packages/rn-tester/js/examples/PlatformColor/PlatformColorExample.js) 中找到一個完整的範例，展示了 `PlatformColor` 的正確使用方式。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.80/platformcolor.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.813894+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "e0cb104953300ab8362ac1f1f02ae57a0d46253d8934444745f1a1824854f209"
  }
}