{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.77/debugging.md",
  "source_file_content_hash": "33e214f6ddbb631da84f562b0dd138a79344af4ebae0776b965182b0b9a4837a",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: debugging\ntitle: Debugging Basics\n---",
      "source_content_hash": "ff8bbf31f8509c7ea8e556d2bb1d20d41dd67a0b3c4e423b18fcdd865cfdabed",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "a239c14b",
      "source_content": ":::note\nDebugging features, such as the Dev Menu, LogBox, and React Native DevTools are disabled in release (production) builds.\n:::",
      "source_content_hash": "0edbd8ac66b79211b5abdad3d147d4005e3499c2adb24799db8833ba118d5d73",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::note\n除錯功能（如開發者選單、LogBox 和 React Native DevTools）在正式版（生產環境）建置中會被停用。\n:::"
      }
    },
    {
      "segment_id": "9fcbdce9",
      "source_content": "## Opening the Dev Menu",
      "source_content_hash": "598e5dc400e9b04b59caa7df09d82983ee6d046d3f783f418925a564a78617c4",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 開啟開發者選單"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "React Native provides an in-app developer menu providing access to debugging features. You can access the Dev Menu by shaking your device or via keyboard shortcuts:",
      "source_content_hash": "81c3a87e0313fd2073456e6707b41b08e4502eb48bf1bc7925272d220a487709",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 提供內建的開發者選單，可存取各項除錯功能。您可以透過搖動裝置或鍵盤快捷鍵來開啟開發者選單："
      }
    },
    {
      "segment_id": "4ddf6ae7",
      "source_content": "- iOS Simulator: <kbd>Ctrl</kbd> + <kbd>Cmd ⌘</kbd> + <kbd>Z</kbd> (or Device > Shake)\n- Android emulators: <kbd>Cmd ⌘</kbd> + <kbd>M</kbd> (macOS) or <kbd>Ctrl</kbd> + <kbd>M</kbd> (Windows and Linux)",
      "source_content_hash": "c02178d36ebcff556a3e6385cd73cb314c6e655f31b31fe20a90456d6be3eecf",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- iOS 模擬器：<kbd>Ctrl</kbd> + <kbd>Cmd ⌘</kbd> + <kbd>Z</kbd>（或選擇 Device > Shake）\n- Android 模擬器：<kbd>Cmd ⌘</kbd> + <kbd>M</kbd>（macOS）或 <kbd>Ctrl</kbd> + <kbd>M</kbd>（Windows 和 Linux）"
      }
    },
    {
      "segment_id": "f6168993",
      "source_content": "Alternative (Android): `adb shell input keyevent 82`.",
      "source_content_hash": "855eaa10f014d3deac77537d63a643cbe021626e3dc3e0dd250f147952df3146",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "替代方案（Android）：`adb shell input keyevent 82`。"
      }
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "![The React Native Dev Menu](/docs/assets/debugging-dev-menu-076.jpg)",
      "source_content_hash": "8bdec3be31e7fe868a158e0656d441978097be1c827968ff9d393b3cfb3883e9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![React Native 開發者選單](/docs/assets/debugging-dev-menu-076.jpg)"
      }
    },
    {
      "segment_id": "40f9552a",
      "source_content": "## Opening DevTools",
      "source_content_hash": "35a7af7df9a8118d8ddcc63c2a53e48616f6e19db9dbb7c9325edc2e65f58fe7",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 開啟 DevTools"
      }
    },
    {
      "segment_id": "f2c2bdd0",
      "source_content": "[React Native DevTools](./react-native-devtools) is our built-in debugger for React Native. It allows you to inspect and understand how your JavaScript code is running, similar to a web browser.",
      "source_content_hash": "f12454aa3be6804a51dd25ecbf7d225def36aeac42704faea24d270b5f7c63cb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "[React Native DevTools](./react-native-devtools) 是我們內建的 React Native 除錯工具。它能讓您檢查並理解 JavaScript 程式碼的執行狀況，類似於網頁瀏覽器的開發者工具。"
      }
    },
    {
      "segment_id": "a76548f8",
      "source_content": "To open DevTools, either:",
      "source_content_hash": "8377cc3c1aa421af6cb686a684f1bebff2e986eae897ea833f71dd7737eecc87",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "開啟 DevTools 的方式："
      }
    },
    {
      "segment_id": "77bf3ec9",
      "source_content": "- Select \"Open DevTools\" in the Dev Menu.\n- Press <kbd>j</kbd> from the CLI (`npx react-native start`).",
      "source_content_hash": "370bc964277e417fc0655afeabe19aca6f4c4e42a12186e93701ccf359c36480",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 在開發者選單中選擇「Open DevTools」。\n- 在 CLI（`npx react-native start`）中按下 <kbd>j</kbd>。"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "On first launch, DevTools will open to a welcome panel, along with an open console drawer where you can view logs and interact with the JavaScript runtime. From the top of the window, you can navigate to other panels, including the integrated React Components Inspector and Profiler.",
      "source_content_hash": "8b706b7c855bc2c9e0f19013dc6a249c6c3e863308e1335a63089347ed16fd7b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "首次啟動時，DevTools 會開啟歡迎面板，並同時展開控制台抽屜，您可以在這裡查看日誌並與 JavaScript 執行環境互動。從視窗頂部可導覽至其他面板，包括整合的 React 元件檢查器和效能分析工具。"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "![React Native DevTools opened to the \"Welcome\" pane](/docs/assets/debugging-rndt-welcome.jpg)",
      "source_content_hash": "4d3e990f75522daa9b864ff35494b37fdb5150a7d95ba453843d7f776879de9e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![React Native DevTools 開啟至「Welcome」面板](/docs/assets/debugging-rndt-welcome.jpg)"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "React Native DevTools is powered by a dedicated debugging architecture built into React Native and uses a customized build of the [Chrome DevTools](https://developer.chrome.com/docs/devtools) frontend. This enables us to offer familiar, browser-aligned debugging features that are deeply integrated and built for end-to-end reliability.",
      "source_content_hash": "fd8d239f9c6de6805b15951f18794e7483b2ff162ae416b360f1b2cebcc861bb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native DevTools 由內建於 React Native 的專用除錯架構驅動，並採用客製化的 [Chrome DevTools](https://developer.chrome.com/docs/devtools) 前端介面。這讓我們能提供與瀏覽器一致且熟悉的除錯功能，並實現深度整合與端到端的可靠性。"
      }
    },
    {
      "segment_id": "135468ee",
      "source_content": "Learn more in our [React Native DevTools guide](./react-native-devtools).",
      "source_content_hash": "d9d86d7c7fdbd6a7eb480f511cae297995341579dbb81175d112b31153b2d9ad",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "詳情請參閱我們的 [React Native DevTools 指南](./react-native-devtools)。"
      }
    },
    {
      "segment_id": "33a4805e",
      "source_content": ":::note\nReact Native DevTools is only available with the Hermes engine, and requires either Google Chrome or Microsoft Edge installed.\n:::",
      "source_content_hash": "be46b0ba24e006387acee0ebd7834fa8e2459b335521ea42f9545d4756abeee3",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::note\nReact Native DevTools 僅在使用 Hermes 引擎時可用，且需安裝 Google Chrome 或 Microsoft Edge。\n:::"
      }
    },
    {
      "segment_id": "73f75a5c",
      "source_content": ":::info\n\n#### Flipper and alternative debugging tools\n\nReact Native DevTools replaces the previous Flipper, Experimental Debugger, and Hermes debugger (Chrome) frontends. If you are on an older version of React Native, please go to the docs [for your version](/versions).\n\nWe continue to offer legacy debugging methods such as Direct JSC Debugging and Remote JS Debugging (deprecated) (see [Other Debugging Methods](./other-debugging-methods)).\n\nReact Native DevTools is designed for debugging React app concerns, and not to replace native tools. If you want to inspect React Native’s underlying platform layers (for example, while developing a Native Module), please use the debugging tools available in Xcode and Android Studio (see [Debugging Native Code](/docs/next/debugging-native-code)).\n\nOther useful links:\n\n- <a href=\"https://shift.infinite.red/why-you-dont-need-flipper-in-your-react-native-app-and-how-to-get-by-without-it-3af461955109\" target=\"_blank\">Why you don’t need Flipper in your React Native app … and how to get by without&nbsp;it&nbsp;↗</a>\n\n:::",
      "source_content_hash": "7321f26e01d3f7bc9e9c9d3f8a206274bf0dc86e19e986fb1f3130867b3fa168",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::info\n\n#### Flipper 與替代除錯工具\n\nReact Native DevTools 已取代先前的 Flipper、實驗性除錯工具和 Hermes 除錯工具（Chrome）前端介面。若您使用的是舊版 React Native，請查閱[對應版本的說明文件](/versions)。\n\n我們仍提供傳統除錯方法，例如直接 JSC 除錯和遠端 JS 除錯（已棄用）（參見[其他除錯方法](./other-debugging-methods)）。\n\nReact Native DevTools 專為除錯 React 應用問題設計，並非用來取代原生工具。若您需要檢查 React Native 底層平台（例如開發原生模組時），請使用 Xcode 和 Android Studio 中的除錯工具（參見[除錯原生程式碼](/docs/next/debugging-native-code)）。\n\n其他實用連結：\n\n- <a href=\"https://shift.infinite.red/why-you-dont-need-flipper-in-your-react-native-app-and-how-to-get-by-without-it-3af461955109\" target=\"_blank\">為何您的 React Native 應用不需要 Flipper…以及如何不使用它也能順利開發&nbsp;↗</a>\n\n:::"
      }
    },
    {
      "segment_id": "ab5fc5b5",
      "source_content": "## LogBox",
      "source_content_hash": "7acc997fbbe39eb75d08a7456fd6efaaa51decdadc53e00c6948142842fd1acd",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## LogBox"
      }
    },
    {
      "segment_id": "6ea4c715",
      "source_content": "LogBox is an in-app tool that displays when warnings or errors are logged by your app.",
      "source_content_hash": "adfd252142ba9c110f2227319a4b74092b977028e037d0c6968d9f266985f271",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "LogBox 是一個內建工具，當應用程式記錄警告或錯誤時會顯示在畫面上。"
      }
    },
    {
      "segment_id": "79ad944d",
      "source_content": "![A LogBox warning and an expanded LogBox syntax error](/docs/assets/debugging-logbox-076.jpg)",
      "source_content_hash": "467af58998bd4df3ea86c277f59404674387cb6208c9f02815761e4f33aa956a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![LogBox 警告與展開的 LogBox 語法錯誤](/docs/assets/debugging-logbox-076.jpg)"
      }
    },
    {
      "segment_id": "8c6d7ee7",
      "source_content": "### Fatal Errors",
      "source_content_hash": "76bb11f2fb54c5e77b67b7666eb617f066c093705dee87ea119b8bd32acffc48",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 致命錯誤"
      }
    },
    {
      "segment_id": "06e24cc0",
      "source_content": "When an unrecoverable error occurs, such as a JavaScript syntax error, LogBox will open with the location of the error. In this state, LogBox is not dismissable since your code cannot be executed. LogBox will automatically dismiss once the syntax error is fixed — either via Fast Refresh or after a manual reload.",
      "source_content_hash": "a01a9608ef42e2ca4850ab997c1ced98c1227cade0fd28d400152744c965f2b0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當發生無法恢復的錯誤時（例如 JavaScript 語法錯誤），LogBox 會開啟並顯示錯誤位置。在此狀態下，由於程式碼無法執行，LogBox 無法關閉。LogBox 會在語法錯誤修正後自動消失——無論是透過 Fast Refresh 或手動重新載入。"
      }
    },
    {
      "segment_id": "ee8401db",
      "source_content": "### Console Errors and Warnings",
      "source_content_hash": "3f0b8a170e840b1e0a1929a7be35b9f93f74eec497cabd323e3ed41669d7d8f3",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 主控台錯誤與警告"
      }
    },
    {
      "segment_id": "147e8550",
      "source_content": "Console errors and warnings are displayed as on-screen notifications with a red or yellow badge.",
      "source_content_hash": "d40d5d214eb04ec9d9a713bee091b47487282d184b8083bd977f8f57193192ce",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "主控台錯誤與警告會以帶有紅色或黃色標記的螢幕通知形式顯示。"
      }
    },
    {
      "segment_id": "c7436e69",
      "source_content": "- **Errors** will display with a notification count. Tap the notification to see an expanded view and to paginate through other logs.\n- **Warnings** will display a notification banner without details, prompting you to open React Native DevTools.",
      "source_content_hash": "b5eebb0cedf01e0de7d7ef4c96f076d1115e5e6faa5011de8c6de9694a9353f1",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- **錯誤**會顯示通知計數。點擊通知可查看展開視圖並瀏覽其他日誌。\n- **警告**會顯示不含詳細資訊的通知橫幅，提示您開啟 React Native DevTools。"
      }
    },
    {
      "segment_id": "afa378f7",
      "source_content": "When React Native DevTools is open, all errors except fatal errors will be hidden to LogBox. We recommend using the Console panel within React Native DevTools as a source of truth, due to various LogBox options which can hide or adjust the level of certain logs.",
      "source_content_hash": "2850573c65ad904b924279f1310b1f42e28aff325babc7c7167a36ba71a35b5c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當 React Native DevTools 開啟時，除致命錯誤外的所有錯誤都會對 LogBox 隱藏。由於 LogBox 有多種選項可能隱藏或調整特定日誌的顯示層級，我們建議以 React Native DevTools 中的主控台面板作為主要參考來源。"
      }
    },
    {
      "segment_id": "5f852894",
      "source_content": "<details>\n<summary>**💡 Ignoring logs**</summary>\n\nLogBox can be configured via the `LogBox` API.\n\n```js\nimport {LogBox} from 'react-native';\n```\n\n#### Ignore all logs\n\nLogBox notifications can be disabled using `LogBox.ignoreAllLogs()`. This can be useful in situations such as giving product demos.\n\n```js\nLogBox.ignoreAllLogs();\n```\n\n#### Ignore specific logs\n\nNotifications can be disabled on a per-log basis via `LogBox.ignoreLogs()`. This can be useful for noisy warnings or those that cannot be fixed, e.g. in a third-party dependency.\n\n```js\nLogBox.ignoreLogs([\n  // Exact message\n  'Warning: componentWillReceiveProps has been renamed',\n\n  // Substring or regex match\n  /GraphQL error: .*/,\n]);\n```\n\n:::note\n\nLogBox will treat certain errors from React as warnings, which will mean they don't display as an in-app error notification. Advanced users can change this behaviour by customising LogBox's warning filter using [`LogBoxData.setWarningFilter()`](https://github.com/facebook/react-native/blob/d334f4d77eea538dff87fdcf2ebc090246cfdbb0/packages/react-native/Libraries/LogBox/Data/LogBoxData.js#L338).\n\n:::\n\n</details>",
      "source_content_hash": "fc6e3f64835c427e34f79ef2412b14310b533895106d6288562d1d818d9ac8a1",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_5f852894"
      }
    },
    {
      "segment_id": "f8614e13",
      "source_content": "## Performance Monitor",
      "source_content_hash": "cf243bb2c6c0d9fd0fad28d295cabb7499b02d988f249ee2af1fcaaf81ebe113",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 效能監控器"
      }
    },
    {
      "segment_id": "396efb28",
      "source_content": "On Android and iOS, an in-app performance overlay can be toggled during development by selecting **\"Perf Monitor\"** in the Dev Menu. Learn more about this feature [here](/docs/performance).",
      "source_content_hash": "bb7f897be36ecbe5e1f77bead6f530c04ba7d6d67b2d65b0dc11df8d1b98006e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 Android 和 iOS 上，開發期間可透過開發者選單選擇 **「Perf Monitor」** 來切換應用內效能疊加層。詳細功能說明請參閱[此處](/docs/performance)。"
      }
    },
    {
      "segment_id": "558df877",
      "source_content": "![The Performance Monitor overlay on iOS and Android](/docs/assets/debugging-performance-monitor.jpg)",
      "source_content_hash": "bcb320ed51d2e9a99708d37b36db0e41c0c744f369defcc95223a1cf4e21a69d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![iOS 與 Android 上的效能監控器疊加層](/docs/assets/debugging-performance-monitor.jpg)"
      }
    },
    {
      "segment_id": "232144f0",
      "source_content": ":::info\nThe Performance Monitor runs in-app and is a guide. We recommend investigating the native tooling under Android Studio and Xcode for accurate performance measurements.\n:::",
      "source_content_hash": "40cfd646097061eda909a66500b2fffdcc85bc6905ddd0952d732c771f5f9026",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::info\n效能監控器在應用內執行，僅供參考。我們建議使用 Android Studio 和 Xcode 的原生工具進行精確的效能量測。\n:::"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.77/debugging.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.604010+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "33e214f6ddbb631da84f562b0dd138a79344af4ebae0776b965182b0b9a4837a"
  }
}