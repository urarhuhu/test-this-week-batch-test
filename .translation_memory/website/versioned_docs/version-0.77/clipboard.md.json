{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.77/clipboard.md",
  "source_file_content_hash": "e755429afeb4895e7c62e7f67db5b22982faddbfa5b3207d5fbdbed80ef7175f",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: clipboard\ntitle: 'ðŸš§ Clipboard'\n---",
      "source_content_hash": "da5bd074bb99c5b284cebaaabe2bd118e008d85979576015f7bcc358d92f99c3",
      "node_type": "yaml",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "f1ef2f7d",
      "source_content": "> **Removed.** Use one of the [community packages](https://reactnative.directory/?search=clipboard) instead.",
      "source_content_hash": "6a8bc51f58dd78aba2421439c91a726c1274f0ef3ac07b78b1a102fa7fb7ea5c",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "`Clipboard` gives you an interface for setting and getting content from Clipboard on both Android and iOS",
      "source_content_hash": "63218ccf7955eec6b6bec64304f31506a8d8e93cc51a7946b5a75fb05eb5810a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "279b6a65",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "9fcbdce9",
      "source_content": "## Example",
      "source_content_hash": "9bf34f44c9d1371f4eda569dfa04ff7830aff81cfa81646e680cef087714cdc1",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "5564d81d",
      "source_content": "```SnackPlayer name=Clipboard%20API%20Example&supportedPlatforms=ios,android\nimport React, {useState} from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Clipboard,\n  StyleSheet,\n} from 'react-native';\n\nconst App = () => {\n  const [copiedText, setCopiedText] = useState('');\n\n  const copyToClipboard = () => {\n    Clipboard.setString('hello world');\n  };\n\n  const fetchCopiedText = async () => {\n    const text = await Clipboard.getString();\n    setCopiedText(text);\n  };\n\n  return (\n    <View style={{flex: 1}}>\n      <View style={styles.container}>\n        <TouchableOpacity onPress={() => copyToClipboard()}>\n          <Text>Click here to copy to Clipboard</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => fetchCopiedText()}>\n          <Text>View copied text</Text>\n        </TouchableOpacity>\n\n        <Text style={styles.copiedText}>{copiedText}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  copiedText: {\n    marginTop: 10,\n    color: 'red',\n  },\n});\n\nexport default App;\n```",
      "source_content_hash": "300fe7b7c8cd6407816e1ec6c657d157313df39eb61471c4e09b4d0f731f2866",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "a5a4323e",
      "source_content": "# Reference",
      "source_content_hash": "7f466000063da6e2b641eee17b52fffbcef1717169b55b58c4543dc0dc23ea11",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3ef18741",
      "source_content": "## Methods",
      "source_content_hash": "f10f482f08112298a7b6d3090f1ea9c2254688471ce31e5da64ed9631f177b5d",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "52388877",
      "source_content": "### `getString()`",
      "source_content_hash": "1080faab58cda9b669b5289791367bf16333da65730325869516df13def31f29",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "bc137a19",
      "source_content": "```jsx\nstatic getString()\n```",
      "source_content_hash": "b2c1289c916ef59a5aaac0393c3f3b8cbc8dbf63fd6ff38fa1181843bb5dd7b6",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "afa378f7",
      "source_content": "Get content of string type, this method returns a `Promise`, so you can use following code to get clipboard content",
      "source_content_hash": "854ea681cd9910173457f762a1e3a368462bf63490ff33813bc661f4a8378262",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "a89f84e1",
      "source_content": "```jsx\nasync _getContent() {\n  const content = await Clipboard.getString();\n}\n```",
      "source_content_hash": "c2d8d3d13783c840f1eb20fa315807fb2f0480f21c4179688da22a5d3e0c0fdc",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "4e1804a3",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "759d12dd",
      "source_content": "### `setString()`",
      "source_content_hash": "5803d04965700e91f86a085b6c6e3e3fd2958493089b0336a26481fee5aa34fa",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "f6563256",
      "source_content": "```jsx\nstatic setString(content)\n```",
      "source_content_hash": "cc957a697990c52f719992b1d3297e5fc83f2fe875c40e5301bc9d05267ea862",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "51867d16",
      "source_content": "Set content of string type. You can use following code to set clipboard content",
      "source_content_hash": "d8c950a366aff7e7ad8fbe34522c15c69795ce2a6568a2d2a18f7cdee4bb019a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "59f28e14",
      "source_content": "```jsx\n_setContent() {\n  Clipboard.setString('hello world');\n}\n```",
      "source_content_hash": "5f2f80510d1c10efd1ef864fb3cc4f1e5c41de63b804952ce2cd82123844f992",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "25212439",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "baeab777",
      "source_content": "| Name    | Type   | Required | Description                               |\n| ------- | ------ | -------- | ----------------------------------------- |\n| content | string | Yes      | The content to be stored in the clipboard |",
      "source_content_hash": "1af71977ce6753857171ddc23b98255f54cf623d493ac966afe3ff06e5651f10",
      "node_type": "table",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "4be28ed1",
      "source_content": "_Notice_",
      "source_content_hash": "da2b4ec012719744b113c7321edd7b6fb89e3eea8441f877c865d86fdcffd8f6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "0e80209e",
      "source_content": "Be careful when you're trying to copy to clipboard any data except `string` and `number`, some data need additional stringification. For example, if you will try to copy array - Android will raise an exception, but iOS will not.",
      "source_content_hash": "da7a434f1c1ab0ae078d42674923af61c37720b121a35b35fa9d022ded20c3ad",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.77/clipboard.md",
  "last_updated_timestamp": "2025-06-18T09:36:13.197502+00:00",
  "schema_version": "1.0",
  "translated_versions": {}
}