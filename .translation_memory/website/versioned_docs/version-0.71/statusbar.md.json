{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.71/statusbar.md",
  "source_file_content_hash": "7def7463f9160e2664961057ebe45a9a8728cb21aa870840d3469d6dad9d8b94",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: statusbar\ntitle: StatusBar\n---",
      "source_content_hash": "2ab985b3c09e16096914ec24c1f6096253bca40e12648568706dce0d09ba055b",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Component to control the app's status bar. The status bar is the zone, typically at the top of the screen, that displays the current time, Wi-Fi and cellular network information, battery level and/or other status icons.",
      "source_content_hash": "89420ec06162b1ab7dfd65e7bd9bc675bf50fa82b816cd93acaad19cd4615584",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "用於控制應用程式狀態列的元件。狀態列通常是螢幕頂端的區域，顯示當前時間、Wi-Fi和行動網路資訊、電池電量及其他狀態圖示。"
      }
    },
    {
      "segment_id": "1cc03ec8",
      "source_content": "### Usage with Navigator",
      "source_content_hash": "d2494997c87641ad1f0cb2ba269e890ab4a3d41cf02ef175244fc686d4540131",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 與 Navigator 搭配使用"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "It is possible to have multiple `StatusBar` components mounted at the same time. The props will be merged in the order the `StatusBar` components were mounted.",
      "source_content_hash": "e36c90880a58a0956d7a4117aa2dbf669f5e1499706ef687f72f4af7def71354",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "可以同時掛載多個 `StatusBar` 元件。屬性將按照 `StatusBar` 元件掛載的順序進行合併。"
      }
    },
    {
      "segment_id": "899bc9b4",
      "source_content": "<Tabs groupId=\"language\" queryString defaultValue={constants.defaultSnackLanguage} values={constants.snackLanguages}>\n<TabItem value=\"javascript\">\n\n```SnackPlayer name=StatusBar%20Component%20Example&supportedPlatforms=android,ios&ext=js\nimport React, {useState} from 'react';\nimport {\n  Button,\n  Platform,\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\n\nconst STYLES = ['default', 'dark-content', 'light-content'];\nconst TRANSITIONS = ['fade', 'slide', 'none'];\n\nconst App = () => {\n  const [hidden, setHidden] = useState(false);\n  const [statusBarStyle, setStatusBarStyle] = useState(STYLES[0]);\n  const [statusBarTransition, setStatusBarTransition] = useState(\n    TRANSITIONS[0],\n  );\n\n  const changeStatusBarVisibility = () => setHidden(!hidden);\n\n  const changeStatusBarStyle = () => {\n    const styleId = STYLES.indexOf(statusBarStyle) + 1;\n    if (styleId === STYLES.length) {\n      setStatusBarStyle(STYLES[0]);\n    } else {\n      setStatusBarStyle(STYLES[styleId]);\n    }\n  };\n\n  const changeStatusBarTransition = () => {\n    const transition = TRANSITIONS.indexOf(statusBarTransition) + 1;\n    if (transition === TRANSITIONS.length) {\n      setStatusBarTransition(TRANSITIONS[0]);\n    } else {\n      setStatusBarTransition(TRANSITIONS[transition]);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar\n        animated={true}\n        backgroundColor=\"#61dafb\"\n        barStyle={statusBarStyle}\n        showHideTransition={statusBarTransition}\n        hidden={hidden}\n      />\n      <Text style={styles.textStyle}>\n        StatusBar Visibility:{'\\n'}\n        {hidden ? 'Hidden' : 'Visible'}\n      </Text>\n      <Text style={styles.textStyle}>\n        StatusBar Style:{'\\n'}\n        {statusBarStyle}\n      </Text>\n      {Platform.OS === 'ios' ? (\n        <Text style={styles.textStyle}>\n          StatusBar Transition:{'\\n'}\n          {statusBarTransition}\n        </Text>\n      ) : null}\n      <View style={styles.buttonsContainer}>\n        <Button title=\"Toggle StatusBar\" onPress={changeStatusBarVisibility} />\n        <Button title=\"Change StatusBar Style\" onPress={changeStatusBarStyle} />\n        {Platform.OS === 'ios' ? (\n          <Button\n            title=\"Change StatusBar Transition\"\n            onPress={changeStatusBarTransition}\n          />\n        ) : null}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ECF0F1',\n  },\n  buttonsContainer: {\n    padding: 10,\n  },\n  textStyle: {\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n});\n\nexport default App;\n```\n\n</TabItem>\n<TabItem value=\"typescript\">\n\n```SnackPlayer name=StatusBar%20Component%20Example&supportedPlatforms=android,ios&ext=tsx\nimport React, {useState} from 'react';\nimport {\n  Button,\n  Platform,\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport type {StatusBarStyle} from 'react-native';\n\nconst STYLES = ['default', 'dark-content', 'light-content'] as const;\nconst TRANSITIONS = ['fade', 'slide', 'none'] as const;\n\nconst App = () => {\n  const [hidden, setHidden] = useState(false);\n  const [statusBarStyle, setStatusBarStyle] = useState<StatusBarStyle>(\n    STYLES[0],\n  );\n  const [statusBarTransition, setStatusBarTransition] = useState<\n    'fade' | 'slide' | 'none'\n  >(TRANSITIONS[0]);\n\n  const changeStatusBarVisibility = () => setHidden(!hidden);\n\n  const changeStatusBarStyle = () => {\n    const styleId = STYLES.indexOf(statusBarStyle) + 1;\n    if (styleId === STYLES.length) {\n      setStatusBarStyle(STYLES[0]);\n    } else {\n      setStatusBarStyle(STYLES[styleId]);\n    }\n  };\n\n  const changeStatusBarTransition = () => {\n    const transition = TRANSITIONS.indexOf(statusBarTransition) + 1;\n    if (transition === TRANSITIONS.length) {\n      setStatusBarTransition(TRANSITIONS[0]);\n    } else {\n      setStatusBarTransition(TRANSITIONS[transition]);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar\n        animated={true}\n        backgroundColor=\"#61dafb\"\n        barStyle={statusBarStyle}\n        showHideTransition={statusBarTransition}\n        hidden={hidden}\n      />\n      <Text style={styles.textStyle}>\n        StatusBar Visibility:{'\\n'}\n        {hidden ? 'Hidden' : 'Visible'}\n      </Text>\n      <Text style={styles.textStyle}>\n        StatusBar Style:{'\\n'}\n        {statusBarStyle}\n      </Text>\n      {Platform.OS === 'ios' ? (\n        <Text style={styles.textStyle}>\n          StatusBar Transition:{'\\n'}\n          {statusBarTransition}\n        </Text>\n      ) : null}\n      <View style={styles.buttonsContainer}>\n        <Button title=\"Toggle StatusBar\" onPress={changeStatusBarVisibility} />\n        <Button title=\"Change StatusBar Style\" onPress={changeStatusBarStyle} />\n        {Platform.OS === 'ios' ? (\n          <Button\n            title=\"Change StatusBar Transition\"\n            onPress={changeStatusBarTransition}\n          />\n        ) : null}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ECF0F1',\n  },\n  buttonsContainer: {\n    padding: 10,\n  },\n  textStyle: {\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n});\n\nexport default App;\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "bee30174f690c389ad0c9cb051884c9b0087e452f4ed3d2fc91baf74e9e02193",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_899bc9b4"
      }
    },
    {
      "segment_id": "dc825187",
      "source_content": "### Imperative API",
      "source_content_hash": "b2f1157ff2001dda90a32cc909119eeca09b3663f4efa1941a8e1760871715af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 命令式 API"
      }
    },
    {
      "segment_id": "833ce577",
      "source_content": "For cases where using a component is not ideal, there is also an imperative API exposed as static functions on the component. It is however not recommended to use the static API and the component for the same prop because any value set by the static API will get overridden by the one set by the component in the next render.",
      "source_content_hash": "9dcb3b2f4a8d6a7634c3d3e85f5590193df12c69b1208bade144e1676ee33633",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "對於不適合使用元件的情況，該元件也提供了以靜態函數形式暴露的命令式 API。但不建議同時使用靜態 API 和元件來設定相同的屬性，因為靜態 API 設定的值會在下次渲染時被元件設定的值覆蓋。"
      }
    },
    {
      "segment_id": "783a74c3",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "dae9676f",
      "source_content": "# Reference",
      "source_content_hash": "7f466000063da6e2b641eee17b52fffbcef1717169b55b58c4543dc0dc23ea11",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# 參考"
      }
    },
    {
      "segment_id": "43662a16",
      "source_content": "## Constants",
      "source_content_hash": "7f283750ddbaecb158fc5f94b28b54cc1b19f71d8f947cd494c4b88fdf44ed8f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 常數"
      }
    },
    {
      "segment_id": "63daebc9",
      "source_content": "### `currentHeight` <div class=\"label android\">Android</div>",
      "source_content_hash": "97c9fb4e57e9a8f65785f8cc28f51b55f0ada59ad6fc2bb7dfb4fa5e96cf9999",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `currentHeight` <div class=\"label android\">Android</div>"
      }
    },
    {
      "segment_id": "228d01d5",
      "source_content": "The height of the status bar, which includes the notch height, if present.",
      "source_content_hash": "e7e69d1f19793318b80e38a25ff3e2fc8e942208a7061aaf53aca146e7d75f48",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "狀態列的高度，包含凹口高度（如果存在）。"
      }
    },
    {
      "segment_id": "4bcde366",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "f210f942",
      "source_content": "## Props",
      "source_content_hash": "5b94a6cc928a22f2ff71078f7462cd97dbe259a0c4d1877ab3afc2a92dded915",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 屬性"
      }
    },
    {
      "segment_id": "67dfd717",
      "source_content": "### `animated`",
      "source_content_hash": "6d280bd9a9b7803880711cf3f5fc29f614badca2e9dce31827fa927fc2ae3305",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `animated`"
      }
    },
    {
      "segment_id": "ba12acea",
      "source_content": "If the transition between status bar property changes should be animated. Supported for `backgroundColor`, `barStyle` and `hidden` properties.",
      "source_content_hash": "0daecc76a1ee8090417c9933bfb3a16b2974241a161ab08b19e55adb4750e2d2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "是否應以動畫過渡狀態列屬性的變更。支援 `backgroundColor`、`barStyle` 和 `hidden` 屬性。"
      }
    },
    {
      "segment_id": "72704001",
      "source_content": "| Type    | Required | Default |\n| ------- | -------- | ------- |\n| boolean | No       | `false` |",
      "source_content_hash": "126a9b32b5dba5fb92f68c131e784987b6ed1dc5806631c0c38972d61ae191ad",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_72704001"
      }
    },
    {
      "segment_id": "5c6097d9",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "9349ceaa",
      "source_content": "### `backgroundColor` <div class=\"label android\">Android</div>",
      "source_content_hash": "8a8a747ff52e5b22f21ce3ee880d4e48c7b0e0f2fd1ce7acceb6c99b062744ff",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `backgroundColor` <div class=\"label android\">Android</div>"
      }
    },
    {
      "segment_id": "e636ba62",
      "source_content": "The background color of the status bar.",
      "source_content_hash": "a56f6224ef79a39a99bf22637b1da0abc293f70fa35943cd6e344ce65fdfbb4e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "狀態列的背景顏色。"
      }
    },
    {
      "segment_id": "60648883",
      "source_content": "| Type            | Required | Default                                                                |\n| --------------- | -------- | ---------------------------------------------------------------------- |\n| [color](colors) | No       | default system StatusBar background color, or `'black'` if not defined |",
      "source_content_hash": "77a3c9c2bcb490664652ee71c59285b1e0f2d294b91598590c648f417b161567",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_60648883"
      }
    },
    {
      "segment_id": "be494d29",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "50e53dff",
      "source_content": "### `barStyle`",
      "source_content_hash": "b3bb091aad032264e161630c738094a85b1ccada749fb4a80ed92c2449cad7db",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `barStyle`"
      }
    },
    {
      "segment_id": "f6e7e6a7",
      "source_content": "Sets the color of the status bar text.",
      "source_content_hash": "96798b8f24cdee0ef62ae0f326195196ef49285fb1acfac9a7433d6f22850d38",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "設定狀態列文字的顏色。"
      }
    },
    {
      "segment_id": "9c70c953",
      "source_content": "On Android, this will only have an impact on API versions 23 and above.",
      "source_content_hash": "6c19184f168ef2917c95e83029174dac72d1963388cef5cc4b2567a5aa62e9c2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 Android 上，此屬性僅在 API 版本 23 及以上版本有效。"
      }
    },
    {
      "segment_id": "745b9b1e",
      "source_content": "| Type                                       | Required | Default     |\n| ------------------------------------------ | -------- | ----------- |\n| [StatusBarStyle](statusbar#statusbarstyle) | No       | `'default'` |",
      "source_content_hash": "92d5d87c159014ac6ac0344570ac6ebc394f32e9319e32f3d77c4161e2e2cd06",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_745b9b1e"
      }
    },
    {
      "segment_id": "66b13ac5",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "3a600569",
      "source_content": "### `hidden`",
      "source_content_hash": "b756e885e5c928cbf87736e480c58a81552ed7029528cbac8834b08a43409750",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `hidden`"
      }
    },
    {
      "segment_id": "6085c028",
      "source_content": "If the status bar is hidden.",
      "source_content_hash": "f83735369cb7a2e539af08c0d9114c0101502ae1c182e6bb7d26f9ad60d310fc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "是否隱藏狀態列。"
      }
    },
    {
      "segment_id": "adb7fe41",
      "source_content": "| Type    | Required | Default |\n| ------- | -------- | ------- |\n| boolean | No       | `false` |",
      "source_content_hash": "126a9b32b5dba5fb92f68c131e784987b6ed1dc5806631c0c38972d61ae191ad",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_adb7fe41"
      }
    },
    {
      "segment_id": "148f7f1a",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "04f25754",
      "source_content": "### `networkActivityIndicatorVisible` <div class=\"label ios\">iOS</div>",
      "source_content_hash": "7e7d7b7714f771b266eff96938972dc406d15be8d9f1a898ac79ef47b5d66178",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `networkActivityIndicatorVisible` <div class=\"label ios\">iOS</div>"
      }
    },
    {
      "segment_id": "1d39fdbf",
      "source_content": "If the network activity indicator should be visible.",
      "source_content_hash": "8ade3aa2175d8fcb598a72b9e234fffcd9f90607d66a7d508c2a9f0bcc715450",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "是否顯示網路活動指示器。"
      }
    },
    {
      "segment_id": "95a47993",
      "source_content": "| Type    | Default |\n| ------- | ------- |\n| boolean | `false` |",
      "source_content_hash": "82f186f9d9444d2e2689ad09fab9bc549128876b32521e598b80eada9be00d88",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_95a47993"
      }
    },
    {
      "segment_id": "ba985650",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "fbbade7d",
      "source_content": "### `showHideTransition` <div class=\"label ios\">iOS</div>",
      "source_content_hash": "72a1eb53293b48aab2f5753c697aa5fe25a00336df9be7ec3f4abbbae1063293",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `showHideTransition` <div class=\"label ios\">iOS</div>"
      }
    },
    {
      "segment_id": "f0db2ff1",
      "source_content": "The transition effect when showing and hiding the status bar using the `hidden` prop.",
      "source_content_hash": "08a004f043b71fcfe95dd598fe056c5abd3d23f1fa453968475fb0b7a7d4b645",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "使用 `hidden` 屬性顯示或隱藏狀態列時的過渡效果。"
      }
    },
    {
      "segment_id": "8bd895de",
      "source_content": "| Type                                               | Default  |\n| -------------------------------------------------- | -------- |\n| [StatusBarAnimation](statusbar#statusbaranimation) | `'fade'` |",
      "source_content_hash": "71eb7a64d7bdaa4f921557990dacd33ecd5bd6f324947b18b54e4ed37a1dc6f5",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_8bd895de"
      }
    },
    {
      "segment_id": "a7a919ed",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "793be93c",
      "source_content": "### `translucent` <div class=\"label android\">Android</div>",
      "source_content_hash": "1bacd68b183f23c7efdcdb5c0509a1c771051156c124e17a74a12e7c41184617",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `translucent` <div class=\"label android\">Android</div>"
      }
    },
    {
      "segment_id": "4786f22b",
      "source_content": "If the status bar is translucent. When translucent is set to `true`, the app will draw under the status bar. This is useful when using a semi transparent status bar color.",
      "source_content_hash": "69664238857ac4b839ad671e5d3f663244e23e081511ba479f049e62058f2514",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "狀態列是否為半透明。當設為 `true` 時，應用程式將在狀態列下方繪製。這在使用半透明狀態列顏色時非常有用。"
      }
    },
    {
      "segment_id": "7f2b8447",
      "source_content": "| Type    | Default |\n| ------- | ------- |\n| boolean | `false` |",
      "source_content_hash": "82f186f9d9444d2e2689ad09fab9bc549128876b32521e598b80eada9be00d88",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_7f2b8447"
      }
    },
    {
      "segment_id": "b8925cfb",
      "source_content": "## Methods",
      "source_content_hash": "f10f482f08112298a7b6d3090f1ea9c2254688471ce31e5da64ed9631f177b5d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 方法"
      }
    },
    {
      "segment_id": "d087570f",
      "source_content": "### `popStackEntry()`",
      "source_content_hash": "64348b6455a35f9db4119d4524866b20df613f99dc9307bcf06615489d899b66",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `popStackEntry()`"
      }
    },
    {
      "segment_id": "97766080",
      "source_content": "```tsx\nstatic popStackEntry(entry: StatusBarProps);\n```",
      "source_content_hash": "06b7b5ed452cc75e0bf1dc45180a14ce8993dffbbb4f06cf589248a1a9df32dd",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_97766080"
      }
    },
    {
      "segment_id": "83d7d3bc",
      "source_content": "Get and remove the last StatusBar entry from the stack.",
      "source_content_hash": "b008186c67114e9389248b9fba161ad47b4917f33a1895f52351d274d7084dd7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "從堆疊中取得並移除最後一個 StatusBar 條目。"
      }
    },
    {
      "segment_id": "2e76bd58",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "e622dd58",
      "source_content": "| Name                                                   | Type | Description                           |\n| ------------------------------------------------------ | ---- | ------------------------------------- |\n| entry <div class=\"label basic required\">Required</div> | any  | Entry returned from `pushStackEntry`. |",
      "source_content_hash": "e4c7a2c81ba64fa6a453d7c5bcae940691fde3d432bc5bc8c2adaed22d0361dc",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_e622dd58"
      }
    },
    {
      "segment_id": "f875b13d",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "9faeed88",
      "source_content": "### `pushStackEntry()`",
      "source_content_hash": "f263b1d5950a9aa0f42b102fa48eda274f96d629304582e7a42fff652e31a13d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `pushStackEntry()`"
      }
    },
    {
      "segment_id": "31df1954",
      "source_content": "```tsx\nstatic pushStackEntry(props: StatusBarProps): StatusBarProps;\n```",
      "source_content_hash": "7cef34612cf733d790da34ab5e4838589898c4466cfe39b83536b3c420dfe045",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_31df1954"
      }
    },
    {
      "segment_id": "a6c4ab41",
      "source_content": "Push a StatusBar entry onto the stack. The return value should be passed to `popStackEntry` when complete.",
      "source_content_hash": "95f0f1146b59e32c69029f49bd274728e9a8027c8214d02d72f0f2ce0a844d11",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "將一個 StatusBar 條目推入堆疊。完成後應將返回值傳遞給 `popStackEntry`。"
      }
    },
    {
      "segment_id": "d6c9e4cd",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "fe96d751",
      "source_content": "| Name                                                   | Type | Description                                                      |\n| ------------------------------------------------------ | ---- | ---------------------------------------------------------------- |\n| props <div class=\"label basic required\">Required</div> | any  | Object containing the StatusBar props to use in the stack entry. |",
      "source_content_hash": "72c71654e90ce50a6414e84207de1c9d0e009edda32f7bc084b6cbaea09ae0de",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_fe96d751"
      }
    },
    {
      "segment_id": "eb394df3",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "95ba516f",
      "source_content": "### `replaceStackEntry()`",
      "source_content_hash": "4f1ce51bf5fbd8ecde71cd18cb5c949f05e5f8a52ff466fcb41ad9df1c2206a7",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `replaceStackEntry()`"
      }
    },
    {
      "segment_id": "73ce3ba5",
      "source_content": "```tsx\nstatic replaceStackEntry(\n  entry: StatusBarProps,\n  props: StatusBarProps\n): StatusBarProps;\n```",
      "source_content_hash": "a29e3127cb478254ac118c8db380946874f2e6dbfc9a97f8ef167451a01d48c9",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_73ce3ba5"
      }
    },
    {
      "segment_id": "d8492b16",
      "source_content": "Replace an existing StatusBar stack entry with new props.",
      "source_content_hash": "00ebc1ff92a6eaf909a95ba23a35f9ebc06debd5561d937d7dc5e45f4e6ec50b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "以新的屬性替換現有的 StatusBar 堆疊條目。"
      }
    },
    {
      "segment_id": "4cba7b8e",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "2bfc0aff",
      "source_content": "| Name                                                   | Type | Description                                                                  |\n| ------------------------------------------------------ | ---- | ---------------------------------------------------------------------------- |\n| entry <div class=\"label basic required\">Required</div> | any  | Entry returned from `pushStackEntry` to replace.                             |\n| props <div class=\"label basic required\">Required</div> | any  | Object containing the StatusBar props to use in the replacement stack entry. |",
      "source_content_hash": "66806477fd84a6551fab00d268e67f10e79854e37dfaaa4d7800988b83c1fefc",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2bfc0aff"
      }
    },
    {
      "segment_id": "5ebe2c3e",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "4bd6ff74",
      "source_content": "### `setBackgroundColor()` <div class=\"label android\">Android</div>",
      "source_content_hash": "cf3838c9c3339b553ac0ce0d47ae28e73acea522698e877be3a60e18d28f8c78",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `setBackgroundColor()` <div class=\"label android\">Android</div>"
      }
    },
    {
      "segment_id": "dfe86be9",
      "source_content": "```tsx\nstatic setBackgroundColor(color: ColorValue, animated?: boolean);\n```",
      "source_content_hash": "40cda4467b11d1f8cbffca1d97d8a0eb99fe2f06b6de37ed8a3c8755da9ff184",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_dfe86be9"
      }
    },
    {
      "segment_id": "d04a3ef5",
      "source_content": "Set the background color for the status bar.",
      "source_content_hash": "dd66226c4d5c360e5f641ffda5c5c08075d4a9666e2139cb2b863a07e3e904a8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "設定狀態欄的背景顏色。"
      }
    },
    {
      "segment_id": "dd78ef80",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "efc5991c",
      "source_content": "| Name                                                   | Type    | Description               |\n| ------------------------------------------------------ | ------- | ------------------------- |\n| color <div class=\"label basic required\">Required</div> | string  | Background color.         |\n| animated                                               | boolean | Animate the style change. |",
      "source_content_hash": "39d5e0fd15a20457ac9ad406f1e8867ccc921c7deb72e1989375728d42078a72",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_efc5991c"
      }
    },
    {
      "segment_id": "0f667929",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "d1d75d19",
      "source_content": "### `setBarStyle()`",
      "source_content_hash": "9f063c2e379d556a07f1c8fbab622cadde74b62e05eb1cd66e3cdf3e5b67ea8c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `setBarStyle()`"
      }
    },
    {
      "segment_id": "dddd618c",
      "source_content": "```tsx\nstatic setBarStyle(style: StatusBarStyle, animated?: boolean);\n```",
      "source_content_hash": "2ddef5382f1fb940253fefa9851621750f28c8f9973d119b9e7a91521c60549e",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_dddd618c"
      }
    },
    {
      "segment_id": "4da1b99c",
      "source_content": "Set the status bar style.",
      "source_content_hash": "9fd43255d3228bab8548086f7e32d2f132320bee49c502c17662905fc1d519d3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "設定狀態欄的樣式。"
      }
    },
    {
      "segment_id": "1697776c",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "215e2e55",
      "source_content": "| Name                                                   | Type                                       | Description               |\n| ------------------------------------------------------ | ------------------------------------------ | ------------------------- |\n| style <div class=\"label basic required\">Required</div> | [StatusBarStyle](statusbar#statusbarstyle) | Status bar style to set.  |\n| animated                                               | boolean                                    | Animate the style change. |",
      "source_content_hash": "299986a25c4392b1aabad6b5be7bcff3e74cbda97801fa7f72cfa62b83eb6b94",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_215e2e55"
      }
    },
    {
      "segment_id": "2b9eaaff",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "811ba0cd",
      "source_content": "### `setHidden()`",
      "source_content_hash": "283e7190bd18a5255626531a72c51b7303da77ccf5dc436628f5895ae3eebd06",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `setHidden()`"
      }
    },
    {
      "segment_id": "b4a9057a",
      "source_content": "```tsx\nstatic setHidden(hidden: boolean, animation?: StatusBarAnimation);\n```",
      "source_content_hash": "55825d021e8622f2379c20cfba71e09dec2ae08d7b852d6912c9de9c41d09708",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b4a9057a"
      }
    },
    {
      "segment_id": "9150ec12",
      "source_content": "Show or hide the status bar.",
      "source_content_hash": "65ec69f8f7562c7f87275e38f0d854b1077c76d5e850cff9d9b80f5b03339578",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "顯示或隱藏狀態欄。"
      }
    },
    {
      "segment_id": "7ba83bb3",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "8cede71b",
      "source_content": "| Name                                                    | Type                                               | Description                                             |\n| ------------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------- |\n| hidden <div class=\"label basic required\">Required</div> | boolean                                            | Hide the status bar.                                    |\n| animation <div class=\"label ios\">iOS</div>              | [StatusBarAnimation](statusbar#statusbaranimation) | Animation when changing the status bar hidden property. |",
      "source_content_hash": "837c26bcc1c58769345b5f430c9ee42624347b434e94a93a1d16c46713363498",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_8cede71b"
      }
    },
    {
      "segment_id": "14cd6bc9",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "3391a56e",
      "source_content": "### `setNetworkActivityIndicatorVisible()` <div class=\"label ios\">iOS</div>",
      "source_content_hash": "27689e0c4a602d7276124f15b653d684a33ecb3e65b13b15b2106a4b78b05618",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `setNetworkActivityIndicatorVisible()` <div class=\"label ios\">iOS</div>"
      }
    },
    {
      "segment_id": "fc15fc0c",
      "source_content": "```tsx\nstatic setNetworkActivityIndicatorVisible(visible: boolean);\n```",
      "source_content_hash": "ea8b2d77d5d60418e5cbc7ca813c5a603df828e14cb3ad97cc0a2f6a2488484d",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_fc15fc0c"
      }
    },
    {
      "segment_id": "0273ea32",
      "source_content": "Control the visibility of the network activity indicator.",
      "source_content_hash": "cef3329b6999032d25cdf06913e96db9e4ad89c8aec17d6a0ae57b81b803768d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "控制網路活動指示器的可見性。"
      }
    },
    {
      "segment_id": "9f46c1b6",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "902fb865",
      "source_content": "| Name                                                     | Type    | Description         |\n| -------------------------------------------------------- | ------- | ------------------- |\n| visible <div class=\"label basic required\">Required</div> | boolean | Show the indicator. |",
      "source_content_hash": "e5e64ef8b2f4c627bdc56fb57b59f066b9e269bf48302cae6bef1e641c8dffe0",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_902fb865"
      }
    },
    {
      "segment_id": "3626227b",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "21a8e7f8",
      "source_content": "### `setTranslucent()` <div class=\"label android\">Android</div>",
      "source_content_hash": "2b1b3abde566caaf7fb8807c89c153539208f4b1c7aad808c32938a72b961041",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `setTranslucent()` <div class=\"label android\">Android</div>"
      }
    },
    {
      "segment_id": "c34e4bdd",
      "source_content": "```tsx\nstatic setTranslucent(translucent: boolean);\n```",
      "source_content_hash": "f5599e8731df24d65023fb55a7b0ce295cb22b4d5e97f657dc9d972dde3b2727",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_c34e4bdd"
      }
    },
    {
      "segment_id": "b79c3482",
      "source_content": "Control the translucency of the status bar.",
      "source_content_hash": "1406bb7d87c34f6c719bd38db8180261b757eb8fc1021a2bbce4029efa9e280f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "控制狀態欄的透明度。"
      }
    },
    {
      "segment_id": "ac7dd250",
      "source_content": "**Parameters:**",
      "source_content_hash": "4cffbfc0f3f64ea67829f54830a99f6c1f41f61e25dba76d3216babd93239d28",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**參數：**"
      }
    },
    {
      "segment_id": "980ef038",
      "source_content": "| Name                                                         | Type    | Description         |\n| ------------------------------------------------------------ | ------- | ------------------- |\n| translucent <div class=\"label basic required\">Required</div> | boolean | Set as translucent. |",
      "source_content_hash": "52e05975c15095e9dc2e0ff1d5188476ef2bc6fb91a7a50aabeee836b25c5ce2",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_980ef038"
      }
    },
    {
      "segment_id": "625dc480",
      "source_content": "## Type Definitions",
      "source_content_hash": "a5e3a9fcc5db64516e630bf0b4dfcdf9787a0073f3e2af1855734698fa6575c4",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 類型定義"
      }
    },
    {
      "segment_id": "634bf78c",
      "source_content": "### StatusBarAnimation",
      "source_content_hash": "602f9dfb735464381f899e0f50ba24ba4b470f215ba851b34f4961a588351810",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### StatusBarAnimation"
      }
    },
    {
      "segment_id": "1230856c",
      "source_content": "Status bar animation type for transitions on the iOS.",
      "source_content_hash": "9432306ac0ed61fa4997bd72f4b02f7ca3dda84442d3fa594161624f255c5fa0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "iOS 上狀態欄過渡的動畫類型。"
      }
    },
    {
      "segment_id": "ae80c4b1",
      "source_content": "| Type |\n| ---- |\n| enum |",
      "source_content_hash": "acce1a73aae91a3f42f93bf7861ba7e90bf77418c4ba1f67f0de2dca001d3380",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ae80c4b1"
      }
    },
    {
      "segment_id": "9b52f634",
      "source_content": "**Constants:**",
      "source_content_hash": "2d67b935d703c9e4a672891ff91c01f2a112534a57e26d8a9ca8fe12cf4dbdc0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**常數：**"
      }
    },
    {
      "segment_id": "b2937a32",
      "source_content": "| Value     | Type   | Description     |\n| --------- | ------ | --------------- |\n| `'fade'`  | string | Fade animation  |\n| `'slide'` | string | Slide animation |\n| `'none'`  | string | No animation    |",
      "source_content_hash": "22c2e7603a12044bba2b24b3c386b285fde7441cc1771a7d8b10004d3c653939",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b2937a32"
      }
    },
    {
      "segment_id": "5335a076",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "486ab0ab",
      "source_content": "### StatusBarStyle",
      "source_content_hash": "ebf50420c8f02000debc14a19e98e6d23957da0cc4dc9eb02c19ce8e0a97eed8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### StatusBarStyle"
      }
    },
    {
      "segment_id": "8be3f6dc",
      "source_content": "Status bar style type.",
      "source_content_hash": "f364586e68b9e22ca545c56abe36e776b64bfbc89057aabaa430c2e90a6fb803",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "狀態欄樣式類型。"
      }
    },
    {
      "segment_id": "c9728689",
      "source_content": "| Type |\n| ---- |\n| enum |",
      "source_content_hash": "acce1a73aae91a3f42f93bf7861ba7e90bf77418c4ba1f67f0de2dca001d3380",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_c9728689"
      }
    },
    {
      "segment_id": "c829cc4b",
      "source_content": "**Constants:**",
      "source_content_hash": "2d67b935d703c9e4a672891ff91c01f2a112534a57e26d8a9ca8fe12cf4dbdc0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**常數：**"
      }
    },
    {
      "segment_id": "10b1e233",
      "source_content": "| Value             | Type   | Description                                                          |\n| ----------------- | ------ | -------------------------------------------------------------------- |\n| `'default'`       | string | Default status bar style (dark for iOS, light for Android)           |\n| `'light-content'` | string | Dark background, white texts and icons                               |\n| `'dark-content'`  | string | Light background, dark texts and icons (requires API>=23 on Android) |",
      "source_content_hash": "2a541c48e3ba8d0776b73272e2bc6c6831e9cfd1bd03f26eba1a9cea618e1407",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_10b1e233"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.71/statusbar.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.295408+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "7def7463f9160e2664961057ebe45a9a8728cb21aa870840d3469d6dad9d8b94"
  }
}