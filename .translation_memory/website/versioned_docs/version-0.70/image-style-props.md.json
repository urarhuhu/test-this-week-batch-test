{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.70/image-style-props.md",
  "source_file_content_hash": "2cd8f2a4dec826b4cab8974c03749ae17fdfb8ae86db18a7986eb0627fc1b144",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: image-style-props\ntitle: Image Style Props\n---",
      "source_content_hash": "1176d4c168e94c9ceb9e0e5b1be58128b3fe3fcd941cb4d8a72218511d814852",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "cc3c868d",
      "source_content": "## Examples",
      "source_content_hash": "0d19ab46319785768005536313f02bd3b9b779aaed82eeac5bf7a7f796ad3ef1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 範例"
      }
    },
    {
      "segment_id": "1cc03ec8",
      "source_content": "### Image Resize Mode",
      "source_content_hash": "66a396b0b5807452ac00e9f3d79e227db199adbe3f9e38fda6d85053c473d25b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 圖片縮放模式"
      }
    },
    {
      "segment_id": "321c5251",
      "source_content": "<Tabs groupId=\"syntax\" queryString defaultValue={constants.defaultSyntax} values={constants.syntax}>\n<TabItem value=\"functional\">\n\n```SnackPlayer name=Image%20Resize%20Modes%20Function%20Component%20Example\nimport React from \"react\";\nimport { View, Image, Text, StyleSheet } from \"react-native\";\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <View>\n        <Image\n          style={{\n            resizeMode: \"cover\",\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>resizeMode : cover</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: \"contain\",\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>resizeMode : contain</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: \"stretch\",\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>resizeMode : stretch</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: \"repeat\",\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>resizeMode : repeat</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: \"center\",\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>resizeMode : center</Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n<TabItem value=\"classical\">\n\n```SnackPlayer name=Image%20Resize%20Modes%20Class%20Component%20Example\nimport React, { Component } from \"react\";\nimport { View, Image, StyleSheet, Text } from \"react-native\";\n\nclass DisplayAnImageWithStyle extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View>\n          <Image\n            style={{\n              resizeMode: \"cover\",\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>resizeMode : cover</Text>\n        </View>\n        <View>\n          <Image\n            style={{\n              resizeMode: \"contain\",\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>resizeMode : contain</Text>\n        </View>\n        <View>\n          <Image\n            style={{\n              resizeMode: \"stretch\",\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>resizeMode : stretch</Text>\n        </View>\n        <View>\n          <Image\n            style={{\n              resizeMode: \"repeat\",\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>resizeMode : repeat</Text>\n        </View>\n        <View>\n          <Image\n            style={{\n              resizeMode: \"center\",\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>resizeMode : center</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "f454bbf9bf150db6ee659c73418e31ec8710f8668a5dbd7c430678b3394c41b9",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_321c5251"
      }
    },
    {
      "segment_id": "8d279c43",
      "source_content": "### Image Border",
      "source_content_hash": "2044097bdd3998663205693fcc20eb8e6db458ce49508979b098a48f0d02f428",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 圖片邊框"
      }
    },
    {
      "segment_id": "25adb529",
      "source_content": "<Tabs groupId=\"syntax\" queryString defaultValue={constants.defaultSyntax} values={constants.syntax}>\n<TabItem value=\"functional\">\n\n```SnackPlayer name=Style%20BorderWidth%20and%20BorderColor%20Function%20Component%20Example\nimport React from \"react\";\nimport { View, Image, StyleSheet, Text } from \"react-native\";\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <Image\n        style={{\n          borderColor: \"red\",\n          borderWidth: 5,\n          height: 100,\n          width: 200\n        }}\n        source={require(\"@expo/snack-static/react-native-logo.png\")}\n      />\n      <Text>borderColor & borderWidth</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n<TabItem value=\"classical\">\n\n```SnackPlayer name=Style%20BorderWidth%20and%20BorderColor%20Class%20Component%20Example\nimport React, { Component } from \"react\";\nimport { View, Image, StyleSheet, Text } from \"react-native\";\n\nclass DisplayAnImageWithStyle extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Image\n          style={{\n            borderColor: \"red\",\n            borderWidth: 5,\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>borderColor & borderWidth</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "10b4be83e42ad3252d79d0f1e687e2a5ffbe63bf93beaff2915a2d9159789377",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_25adb529"
      }
    },
    {
      "segment_id": "fe3afe38",
      "source_content": "### Image Border Radius",
      "source_content_hash": "645dc798fe16434ccdeaab57faee0a7ba772b582ef9265321cc67138acd0bb77",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 圖片圓角"
      }
    },
    {
      "segment_id": "a542512e",
      "source_content": "<Tabs groupId=\"syntax\" queryString defaultValue={constants.defaultSyntax} values={constants.syntax}>\n<TabItem value=\"functional\">\n\n```SnackPlayer name=Style%20Border%20Radius%20Function%20Component%20Example\nimport React from \"react\";\nimport { View, Image, StyleSheet, Text } from \"react-native\";\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <View>\n        <Image\n          style={{\n            borderTopRightRadius: 20,\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>borderTopRightRadius</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            borderBottomRightRadius: 20,\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>borderBottomRightRadius</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            borderBottomLeftRadius: 20,\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>borderBottomLeftRadius</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            borderTopLeftRadius: 20,\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>borderTopLeftRadius</Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n<TabItem value=\"classical\">\n\n```SnackPlayer name=Style%20Border%20Radius%20Class%20Component%20Example\nimport React, { Component } from \"react\";\nimport { View, Image, StyleSheet, Text } from \"react-native\";\n\nclass DisplayAnImageWithStyle extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View>\n          <Image\n            style={{\n              borderTopRightRadius: 20,\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>borderTopRightRadius</Text>\n        </View>\n        <View>\n          <Image\n            style={{\n              borderBottomRightRadius: 20,\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>borderBottomRightRadius</Text>\n        </View>\n        <View>\n          <Image\n            style={{\n              borderBottomLeftRadius: 20,\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>borderBottomLeftRadius</Text>\n        </View>\n        <View>\n          <Image\n            style={{\n              borderTopLeftRadius: 20,\n              height: 100,\n              width: 200\n            }}\n            source={require(\"@expo/snack-static/react-native-logo.png\")}\n          />\n          <Text>borderTopLeftRadius</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "d037fd33f67d555c836f1afc9b92866bcf115cae4b2c439dea6959788b05a0d6",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_a542512e"
      }
    },
    {
      "segment_id": "53edfb3e",
      "source_content": "### Image Tint",
      "source_content_hash": "e614ee6cc92f4d7de8f527fd1c864692cd79c915f29f1b09e8bb2133f87d9850",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 圖片色調"
      }
    },
    {
      "segment_id": "cd4b4190",
      "source_content": "<Tabs groupId=\"syntax\" queryString defaultValue={constants.defaultSyntax} values={constants.syntax}>\n<TabItem value=\"functional\">\n\n```SnackPlayer name=Style%20tintColor%20Function%20Component\nimport React from \"react\";\nimport { View, Image, StyleSheet, Text } from \"react-native\";\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <Image\n        style={{\n          tintColor: \"#000000\",\n          resizeMode: \"contain\",\n          height: 100,\n          width: 200\n        }}\n        source={require(\"@expo/snack-static/react-native-logo.png\")}\n      />\n      <Text>tintColor</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n<TabItem value=\"classical\">\n\n```SnackPlayer name=Style%20tintColor%20Class%20Component\nimport React, { Component } from \"react\";\nimport { View, Image, StyleSheet, Text } from \"react-native\";\n\nclass DisplayAnImageWithStyle extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Image\n          style={{\n            tintColor: \"#000000\",\n            resizeMode: \"contain\",\n            height: 100,\n            width: 200\n          }}\n          source={require(\"@expo/snack-static/react-native-logo.png\")}\n        />\n        <Text>tintColor</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"vertical\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    textAlign: \"center\"\n  }\n});\n\nexport default DisplayAnImageWithStyle;\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "8aa8fde3849483b5b3a65821c9a5fa195be318adb992748bbefb493647faaaec",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_cd4b4190"
      }
    },
    {
      "segment_id": "0d37b206",
      "source_content": "# Reference",
      "source_content_hash": "7f466000063da6e2b641eee17b52fffbcef1717169b55b58c4543dc0dc23ea11",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# 參考文獻"
      }
    },
    {
      "segment_id": "aeee39a9",
      "source_content": "## Props",
      "source_content_hash": "5b94a6cc928a22f2ff71078f7462cd97dbe259a0c4d1877ab3afc2a92dded915",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 屬性"
      }
    },
    {
      "segment_id": "3ad6f5b1",
      "source_content": "### `backfaceVisibility`",
      "source_content_hash": "3620bdb63195587f688a3225ab293cb2461db191c5190e770b8981c06db16b88",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `backfaceVisibility`"
      }
    },
    {
      "segment_id": "7f0cded5",
      "source_content": "The property defines whether or not the back face of a rotated image should be visible.",
      "source_content_hash": "6be63c1f3174a1dc37bc1baac0bf50db9a590d68cd0689e4bfc1ccf40f27cb32",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "此屬性定義旋轉圖片的背面是否可見。"
      }
    },
    {
      "segment_id": "189802a2",
      "source_content": "| Type                          | Default     |\n| ----------------------------- | ----------- |\n| enum(`'visible'`, `'hidden'`) | `'visible'` |",
      "source_content_hash": "03bf4000ce8bf5fdfda8bca4002d857bfeb13b913240f00a36c92ed48cdc5579",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_189802a2"
      }
    },
    {
      "segment_id": "91f0716f",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "400396d9",
      "source_content": "### `backgroundColor`",
      "source_content_hash": "025725f2b031ec6f9807ec405c4a8f8691ad8652446c7f936d6c8a5159d12237",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `backgroundColor`"
      }
    },
    {
      "segment_id": "bb980715",
      "source_content": "| Type               |\n| ------------------ |\n| [color](colors.md) |",
      "source_content_hash": "8632e6c1f1b54cc7faa3ecbab5f8e6ef0ebdba99dde80616d750401474098649",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_bb980715"
      }
    },
    {
      "segment_id": "e0fae1c0",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "1e8fadaf",
      "source_content": "### `borderBottomLeftRadius`",
      "source_content_hash": "ee885509d27d85a1dcf77e77edd7813225bba75de4fb9efc7d6eb70359eaef71",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `borderBottomLeftRadius`"
      }
    },
    {
      "segment_id": "21f80155",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_21f80155"
      }
    },
    {
      "segment_id": "4fcfc871",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "32149b2b",
      "source_content": "### `borderBottomRightRadius`",
      "source_content_hash": "346cccf0e43f8d39e5e40bab049a97e574f6ebfaea5abedcd7f0dc16bd91fa5b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `borderBottomRightRadius`"
      }
    },
    {
      "segment_id": "5f134ce1",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_5f134ce1"
      }
    },
    {
      "segment_id": "b5968fbe",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "d17e69db",
      "source_content": "### `borderColor`",
      "source_content_hash": "05d358f1a3464c75e98f67d38b39207716622b21313e1725ab4fb49b4ec3a9c6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `borderColor`"
      }
    },
    {
      "segment_id": "3d8f27e5",
      "source_content": "| Type               |\n| ------------------ |\n| [color](colors.md) |",
      "source_content_hash": "8632e6c1f1b54cc7faa3ecbab5f8e6ef0ebdba99dde80616d750401474098649",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_3d8f27e5"
      }
    },
    {
      "segment_id": "c779bd5f",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "89d9a6db",
      "source_content": "### `borderRadius`",
      "source_content_hash": "7dbc37af5adbd94c5b272112682d18b2245589b78619baeca0cb79b9a07fc085",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `borderRadius`"
      }
    },
    {
      "segment_id": "525a72e7",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_525a72e7"
      }
    },
    {
      "segment_id": "4ea44654",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "6f6d8f52",
      "source_content": "### `borderTopLeftRadius`",
      "source_content_hash": "7044c7f512d24eef82c739faafbc0b60ee07554f87a9b68d142bfa3dcb44274d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `borderTopLeftRadius`"
      }
    },
    {
      "segment_id": "c4c860ad",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_c4c860ad"
      }
    },
    {
      "segment_id": "d0db5aa2",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "54eccfba",
      "source_content": "### `borderTopRightRadius`",
      "source_content_hash": "c73a5e33d376db92cdc9514a4f404988641bb561cbd60cd4f362fecdc3bcce41",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `borderTopRightRadius`"
      }
    },
    {
      "segment_id": "2f5037ab",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2f5037ab"
      }
    },
    {
      "segment_id": "06817f2f",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "8744c122",
      "source_content": "### `borderWidth`",
      "source_content_hash": "5a9271880e7079badb8f20d447e6bd664581fbc860af71c1c3dedaaf3ddc8832",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `borderWidth`"
      }
    },
    {
      "segment_id": "0dab06d8",
      "source_content": "| Type   |\n| ------ |\n| number |",
      "source_content_hash": "12a4bc83fc82b49dfcc764424343d9e37b3518d61961aafe9875795611a48eab",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_0dab06d8"
      }
    },
    {
      "segment_id": "4f1405c5",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "169dc225",
      "source_content": "### `opacity`",
      "source_content_hash": "4f3cdd0188b11a2ba2f8a2dd9231d898274eb9521d743fca406b6970740e0d44",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `opacity`"
      }
    },
    {
      "segment_id": "df08ff06",
      "source_content": "Set an opacity value for the image. The number should be in the range from `0.0` to `1.0`.",
      "source_content_hash": "28419fa49f99458edd4c5006962ea6c918b20b7ca90780ca598815ba5c9d667a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "設定圖片的透明度值。數值範圍應在 `0.0` 到 `1.0` 之間。"
      }
    },
    {
      "segment_id": "fec39f09",
      "source_content": "| Type   | Default |\n| ------ | ------- |\n| number | `1.0`   |",
      "source_content_hash": "b2eadeebf015294b474e4f960b2804cd3e8c4b659d639bb23b5475397baaca47",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_fec39f09"
      }
    },
    {
      "segment_id": "469e3061",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "08ad3c7d",
      "source_content": "### `overflow`",
      "source_content_hash": "a4e25b76e471e66f036419ea14dc0f063171890a397212f1ca4e22e1aa74acdc",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `overflow`"
      }
    },
    {
      "segment_id": "713bf94c",
      "source_content": "| Type                          | Default     |\n| ----------------------------- | ----------- |\n| enum(`'visible'`, `'hidden'`) | `'visible'` |",
      "source_content_hash": "03bf4000ce8bf5fdfda8bca4002d857bfeb13b913240f00a36c92ed48cdc5579",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_713bf94c"
      }
    },
    {
      "segment_id": "19b4307c",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "c1c9d70b",
      "source_content": "### `overlayColor` <div class=\"label android\">Android</div>",
      "source_content_hash": "1cb961d9f8c252071952ec08cabfce2a73da29e210518b81157385f51aea9e32",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `overlayColor` <div class=\"label android\">Android</div>"
      }
    },
    {
      "segment_id": "e5a40cc3",
      "source_content": "When the image has rounded corners, specifying an overlayColor will cause the remaining space in the corners to be filled with a solid color. This is useful in cases which are not supported by the Android implementation of rounded corners:",
      "source_content_hash": "5cfe9a05d7b96059f4915e50c435cdb67747a56daf4717274ca07dc134234a03",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當圖片具有圓角時，指定 overlayColor 會使角落剩餘的空間以純色填充。這在以下 Android 圓角實現不支援的情況下特別有用："
      }
    },
    {
      "segment_id": "00469f74",
      "source_content": "- Certain resize modes, such as `'contain'`\n- Animated GIFs",
      "source_content_hash": "ed6d744aecc04d357d44491069fc43451822fb9c05ec2d6032d2ecc5d9abd3be",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 特定縮放模式，例如 `'contain'`\n- 動態 GIF"
      }
    },
    {
      "segment_id": "9623a9ba",
      "source_content": "A typical way to use this prop is with images displayed on a solid background and setting the `overlayColor` to the same color as the background.",
      "source_content_hash": "fbe2be89d46177fe81f8eb6435b41c75b00acc351d5ebc7e13f16bec65d9e0cd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "典型的使用方式是將圖片顯示在純色背景上，並將 `overlayColor` 設為與背景相同的顏色。"
      }
    },
    {
      "segment_id": "590f826a",
      "source_content": "For details of how this works under the hood, see [Fresco documentation](https://frescolib.org/docs/rounded-corners-and-circles.html).",
      "source_content_hash": "9487e45f84cd791a2e0a95162f1e01da5c3cff3933027c7c2b172d748833a2ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "有關底層運作原理的詳細資訊，請參閱 [Fresco 文檔](https://frescolib.org/docs/rounded-corners-and-circles.html)。"
      }
    },
    {
      "segment_id": "f52ad058",
      "source_content": "| Type   |\n| ------ |\n| string |",
      "source_content_hash": "f6fdc4c4e48a0fd4403866c93d58d6fd94287810ec227946601aa88b1cb1eced",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_f52ad058"
      }
    },
    {
      "segment_id": "b1161146",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "e4e26f5f",
      "source_content": "### `resizeMode`",
      "source_content_hash": "572a9ddddaa7cf46e74b642534b3139e12c5e694ccdf79183611e92c2f57db77",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `resizeMode`"
      }
    },
    {
      "segment_id": "8fb294a1",
      "source_content": "Determines how to resize the image when the frame doesn't match the raw image dimensions. Defaults to `cover`.",
      "source_content_hash": "b4c2283f4bd5cf91c092a120cec32b877b85cb5b4bf59b53766d531c758b3c89",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "決定當框架與原始圖片尺寸不符時如何調整圖片大小。預設值為 `cover`。"
      }
    },
    {
      "segment_id": "443a6524",
      "source_content": "- `cover`: Scale the image uniformly (maintain the image's aspect ratio) so that:\n\n  - Both dimensions (width and height) of the image will be equal to or larger than the corresponding dimension of the view (minus padding)\n  - At least one dimension of the scaled image will be equal to the corresponding dimension of the view (minus padding)\n\n- `contain`: Scale the image uniformly (maintain the image's aspect ratio) so that both dimensions (width and height) of the image will be equal to or less than the corresponding dimension of the view (minus padding).\n\n- `stretch`: Scale width and height independently, This may change the aspect ratio of the src.\n\n- `repeat`: Repeat the image to cover the frame of the view. The image will keep its size and aspect ratio, unless it is larger than the view, in which case it will be scaled down uniformly so that it is contained in the view.\n\n- `center`: Center the image in the view along both dimensions. If the image is larger than the view, scale it down uniformly so that it is contained in the view.",
      "source_content_hash": "dfc36d5d0dbd68246d06c80cd59170b9cfd49ead4f8161cee4beeaa5068d91d6",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- `cover`: 均勻縮放圖片（保持圖片的寬高比），使得：\n\n  - 圖片的兩個維度（寬度和高度）都將等於或大於視圖的相應維度（減去內邊距）\n  - 縮放後的圖片至少有一個維度會等於視圖的相應維度（減去內邊距）\n\n- `contain`: 均勻縮放圖片（保持圖片的寬高比），使得圖片的兩個維度（寬度和高度）都將等於或小於視圖的相應維度（減去內邊距）。\n\n- `stretch`: 獨立縮放寬度和高度，這可能會改變原始圖片的寬高比。\n\n- `repeat`: 重複圖片以填滿視圖的框架。圖片將保持其大小和寬高比，除非它比視圖大，在這種情況下它將被均勻縮小以適應視圖。\n\n- `center`: 在視圖的兩個維度上居中顯示圖片。如果圖片比視圖大，則將其均勻縮小以適應視圖。"
      }
    },
    {
      "segment_id": "7e73d9dc",
      "source_content": "| Type                                                              | Default   |\n| ----------------------------------------------------------------- | --------- |\n| enum(`'cover'`, `'contain'`, `'stretch'`, `'repeat'`, `'center'`) | `'cover'` |",
      "source_content_hash": "1d19caf563e1a2fd421f639a412d0f48350d39f968e0689bfb76271162ea8ec1",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_7e73d9dc"
      }
    },
    {
      "segment_id": "48565b6f",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-hant": "---"
      }
    },
    {
      "segment_id": "f65641c4",
      "source_content": "### `tintColor`",
      "source_content_hash": "7014a43de5b69221e94c3f2011179d028d0492a926f4c0defddc02f3d0ed8a02",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### `tintColor`"
      }
    },
    {
      "segment_id": "fef12d52",
      "source_content": "Changes the color of all the non-transparent pixels to the tintColor.",
      "source_content_hash": "ac2b88887aef9738b557df1722c005b97f953a4164d0070523529cf09f820cd5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "將所有非透明像素的顏色更改為指定的 tintColor。"
      }
    },
    {
      "segment_id": "b0c9ffc9",
      "source_content": "| Type               |\n| ------------------ |\n| [color](colors.md) |",
      "source_content_hash": "8632e6c1f1b54cc7faa3ecbab5f8e6ef0ebdba99dde80616d750401474098649",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b0c9ffc9"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.70/image-style-props.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.233830+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "2cd8f2a4dec826b4cab8974c03749ae17fdfb8ae86db18a7986eb0627fc1b144"
  }
}