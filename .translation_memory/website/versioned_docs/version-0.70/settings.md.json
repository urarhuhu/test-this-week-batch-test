{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.70/settings.md",
  "source_file_content_hash": "a44eb9f03f2106a1359e18d214c9affa88c3f34555c49fafafe99a1d9d96753b",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: settings\ntitle: Settings\n---",
      "source_content_hash": "e197b1bdb4fea56cfae9888c3ef4539451b3aa70a37a63de8f00d412628dc79e",
      "node_type": "yaml",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "bb42506b",
      "source_content": "`Settings` serves as a wrapper for [`NSUserDefaults`](https://developer.apple.com/documentation/foundation/nsuserdefaults), a persistent key-value store available only on iOS.",
      "source_content_hash": "2ebad233a0822744512592a58779f7f41974c8591704e59cc3ff205381d82f9e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "cc3c868d",
      "source_content": "## Example",
      "source_content_hash": "9bf34f44c9d1371f4eda569dfa04ff7830aff81cfa81646e680cef087714cdc1",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "71b63116",
      "source_content": "```SnackPlayer name=Settings%20Example&supportedPlatforms=ios\nimport React, { useState } from \"react\";\nimport { Button, Settings, StyleSheet, Text, View } from \"react-native\";\n\nconst App = () => {\n  const [data, setData] = useState(Settings.get(\"data\"));\n\n  const storeData = data => {\n    Settings.set(data);\n    setData(Settings.get(\"data\"));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Stored value:</Text>\n      <Text style={styles.value}>{data}</Text>\n      <Button\n        onPress={() => storeData({ data: \"React\" })}\n        title=\"Store 'React'\"\n      />\n      <Button\n        onPress={() => storeData({ data: \"Native\" })}\n        title=\"Store 'Native'\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  value: {\n    fontSize: 24,\n    marginVertical: 12\n  }\n});\n\nexport default App;\n```",
      "source_content_hash": "ec6ca7099653bfe7c70ec8e7ad45d1d3c6a742949373a141c49542149ad8a754",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "5f01394b",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "af52d59d",
      "source_content": "# Reference",
      "source_content_hash": "7f466000063da6e2b641eee17b52fffbcef1717169b55b58c4543dc0dc23ea11",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "e50bebbf",
      "source_content": "## Methods",
      "source_content_hash": "f10f482f08112298a7b6d3090f1ea9c2254688471ce31e5da64ed9631f177b5d",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "7283cdac",
      "source_content": "### `clearWatch()`",
      "source_content_hash": "418b2953e20e0d9d31f04beeeda3012324adb53c48daa3e2d5194dd5161bf27e",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "c05ad55e",
      "source_content": "```jsx\nstatic clearWatch(watchId: number)\n```",
      "source_content_hash": "cf443606ba659e5ecbaab45c4fa24d845cff235fa340d7d090aaabc02a53d07c",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "5dae11e3",
      "source_content": "`watchId` is the number returned by `watchKeys()` when the subscription was originally configured.",
      "source_content_hash": "e0d2d42245bd942312a7b2ffd24e72bb2d3be13bc5398d9ccfa032188d65160c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "379f9c7b",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3ef18741",
      "source_content": "### `get()`",
      "source_content_hash": "04407c6234a6dbf551a10247fba76eec5a5be79af34783fe2ca41892cc035956",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "17c579d2",
      "source_content": "```jsx\nstatic get(key: string): mixed\n```",
      "source_content_hash": "0e45b16a524eee661c4e88fc04abfbab08a05b84f8f1d30f27d3ded281c62539",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "f01228d3",
      "source_content": "Get the current value for a given `key` in `NSUserDefaults`.",
      "source_content_hash": "36311add3eb671d0f32a2044d20b3768d329deaba1b9bd6fd9458b021a75c15d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "63e1d83c",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "58ed925f",
      "source_content": "### `set()`",
      "source_content_hash": "190fb4128c1f34f1e804bace679bdeca8ac8169cdb015ea78d8cf78b81e7747a",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "9f4336b3",
      "source_content": "```jsx\nstatic set(settings: object)\n```",
      "source_content_hash": "3d8b8eac6198b1edeef1e64cc9a94e04508de927a4088830afd2429e795c1895",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "fbc2db85",
      "source_content": "Set one or more values in `NSUserDefaults`.",
      "source_content_hash": "32874248ecd772ae8f531676fc679f2d8479b724c1376442ceb243b6a7d3f5ae",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "be625c00",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3a8d2b95",
      "source_content": "### `watchKeys()`",
      "source_content_hash": "0668f47b3255338f0c7d2dcdac032180bbf14ac6269da9842fcbed4f5d53c197",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "5dd0e3a7",
      "source_content": "```jsx\nstatic watchKeys(keys: string | array<string>, callback: function): number\n```",
      "source_content_hash": "e2d1f4d0293972458161bc1c62f39300f33a5da9f664b6b967ead32209af3b31",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "785750ac",
      "source_content": "Subscribe to be notified when the value for any of the keys specified by the `keys` parameter has been changed in `NSUserDefaults`. Returns a `watchId` number that may be used with `clearWatch()` to unsubscribe.",
      "source_content_hash": "0a1af3e8a15301613de48a1a7277a4d4f561c2f453d4fbde043b41a28aa395d9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "d3daf362",
      "source_content": "> **Note:** `watchKeys()` by design ignores internal `set()` calls and fires callback only on changes preformed outside of React Native code.",
      "source_content_hash": "e1442bd9c4a600303b32dd3100a6d1391e967e6a3f5fdd5b8b2e92bab695d3cd",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {}
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.70/settings.md",
  "last_updated_timestamp": "2025-06-18T09:36:13.307002+00:00",
  "schema_version": "1.0",
  "translated_versions": {}
}