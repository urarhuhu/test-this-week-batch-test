{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.74/react-devtools.md",
  "source_file_content_hash": "5186dc88f3472a769e87346edf80a82549a837ef9b3d4d36fb8fb23e3d19a397",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: react-devtools\ntitle: React DevTools\n---",
      "source_content_hash": "8c9b9efe8b5e14641eaada12ca1e8a93ff7613e3f77299299139019d0ba75205",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "[React DevTools](https://github.com/facebook/react/tree/main/packages/react-devtools) can be used to debug the React component hierarchy within your app.",
      "source_content_hash": "f5894f1aa8c5d164a9cbdb923f9fad72bc3ecf2c3dc2ef03c783b3eb0d7a4f47",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "[React DevTools](https://github.com/facebook/react/tree/main/packages/react-devtools) 可用於偵錯應用程式中的 React 元件層級結構。"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "The standalone version of React DevTools allows connecting to React Native apps. To use it, install or run the `react-devtools` package. It should connect to your simulator within a few seconds.",
      "source_content_hash": "cc3d1f2a120c0187679670a9a55a3e74e2107cf8dd8bafd98987422548e4a66d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "獨立版本的 React DevTools 允許連接到 React Native 應用程式。要使用它，請安裝或執行 `react-devtools` 套件。它應該會在幾秒內連接到您的模擬器。"
      }
    },
    {
      "segment_id": "ee201347",
      "source_content": "```sh\nnpx react-devtools\n```",
      "source_content_hash": "c08d1ebbb1343ba552f4a7002bf6524e286b44bf53fb80fbdf51670668faae7b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ee201347"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "![The React DevTools interface](/docs/assets/debugging-react-devtools-detail.jpg)",
      "source_content_hash": "88076d1e9b41c17b706936b921261b85a00b8ecf5835118f40e76190977c3704",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![React DevTools 介面](/docs/assets/debugging-react-devtools-detail.jpg)"
      }
    },
    {
      "segment_id": "21c93b79",
      "source_content": "<details>\n<summary>💡 Installing React DevTools globally</summary>\n\nWe recommend running `react-devtools` via `npx`, but you can also install a given version globally.\n\n<Tabs groupId=\"package-manager\" defaultValue={constants.defaultPackageManager} values={constants.packageManagers}>\n<TabItem value=\"npm\">\n\n```sh\nnpm install -g react-devtools\n```\n\n</TabItem>\n<TabItem value=\"yarn\">\n\n```shell\nyarn global add react-devtools\n```\n\n</TabItem>\n</Tabs>\n\nThen, run the global `react-devtools` command:\n\n```sh\nreact-devtools\n```\n\n</details>",
      "source_content_hash": "1260713caea4dbb950252803b639fb328bb0923411e441d87aeb68bbff290489",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_21c93b79"
      }
    },
    {
      "segment_id": "2f83a0f4",
      "source_content": "<details>\n<summary>💡 Adding React DevTools as a project dependency</summary>\n\nIf you prefer to avoid global installations, you can add `react-devtools` as a project dependency. Add the `react-devtools` package to your project using `npm install --save-dev react-devtools`, then add `\"react-devtools\": \"react-devtools\"` to the `scripts` section in your `package.json`, and then run `npm run react-devtools` from your project folder to open the DevTools.\n\n</details>",
      "source_content_hash": "c44f872065253347c72113e3ed93da8ebf9c80da76a76e3300d1f0bd96941ea5",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2f83a0f4"
      }
    },
    {
      "segment_id": "7fc18c94",
      "source_content": ":::tip\nLearn more about using DevTools in the [React Developer Tools guide on react.dev](https://react.dev/learn/react-developer-tools).\n:::",
      "source_content_hash": "67a1331c0ef2d56d4868b04741bec339d3263100f7853c4d0e32e97e96a6b0b4",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip\n在 [react.dev 上的 React 開發者工具指南](https://react.dev/learn/react-developer-tools) 中了解更多關於使用 DevTools 的資訊。\n:::"
      }
    },
    {
      "segment_id": "7283cdac",
      "source_content": "## Integration with the Element Inspector",
      "source_content_hash": "82ee18660571cf4a65aacc75ea7004145da74042ff1ea837518a4df48289ed36",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 與元素檢查器的整合"
      }
    },
    {
      "segment_id": "1131ef75",
      "source_content": "React Native provides an Element Inspector, available under the Dev Menu as \"Show Element Inspector\". The inspector lets you tap on any UI element and see information about it.",
      "source_content_hash": "c5e42860f6e266e5bbb0404bf86e24a26a8f3a52cb12bc277cbc3573dd70a45e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 提供了一個元素檢查器，可在開發選單中選擇「顯示元素檢查器」來使用。檢查器讓您可以點擊任何 UI 元素並查看其相關資訊。"
      }
    },
    {
      "segment_id": "8b2a52b1",
      "source_content": "![Video of the Element Inspector interface](/docs/assets/debugging-element-inspector.gif)",
      "source_content_hash": "de9b6612c374fd448622b49b87897ea777a98b3c0f239e58e6b3dc44ab11a352",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![元素檢查器介面的影片](/docs/assets/debugging-element-inspector.gif)"
      }
    },
    {
      "segment_id": "5dae11e3",
      "source_content": "When React DevTools is connected, the Element Inspector will enter a **collapsed mode**, and instead use DevTools as the primary UI. In this mode, clicking on something in the simulator will navigate to the relevant component in DevTools.",
      "source_content_hash": "5d462b98a707ae7ec0d11284186f2dc824f30522d15d1338be123a8c4f4a70a7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當 React DevTools 連接時，元素檢查器將進入**折疊模式**，並改以 DevTools 作為主要 UI。在此模式下，點擊模擬器中的內容將導航至 DevTools 中的相關元件。"
      }
    },
    {
      "segment_id": "0bb95128",
      "source_content": "You can select \"Hide Element Inspector\" in the same menu to exit this mode.",
      "source_content_hash": "8ce011f935e365ef8b638a712b4c470899784c2ef3b0d685047f1473a624a803",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您可以在同一選單中選擇「隱藏元素檢查器」以退出此模式。"
      }
    },
    {
      "segment_id": "657c2b20",
      "source_content": "![React DevTools Element Inspector integration](/docs/assets/debugging-element-inspector-react-devtools.gif)",
      "source_content_hash": "696c257c86b3c1fee3e62d26e8d061486559776c1ae05fe9ed0d9952ba2d4772",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![React DevTools 元素檢查器整合](/docs/assets/debugging-element-inspector-react-devtools.gif)"
      }
    },
    {
      "segment_id": "52388877",
      "source_content": "## Debugging application state",
      "source_content_hash": "475a30117fd60999d59a94c438f796b6ff264bd5f950b8bd215013f6a38946c1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 偵錯應用程式狀態"
      }
    },
    {
      "segment_id": "eab056be",
      "source_content": "[Reactotron](https://github.com/infinitered/reactotron) is an open-source desktop app that allows you to inspect Redux or MobX-State-Tree application state as well as view custom logs, run custom commands such as resetting state, store and restore state snapshots, and other helpful debugging features for React Native apps.",
      "source_content_hash": "6fc592272603e05a647612020aa1d2ddebde0c672ac36c2430c5f60b1ebab88d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "[Reactotron](https://github.com/infinitered/reactotron) 是一個開源桌面應用程式，允許您檢查 Redux 或 MobX-State-Tree 的應用程式狀態，以及查看自訂日誌、執行自訂命令（如重設狀態）、儲存和還原狀態快照，以及其他對 React Native 應用程式有幫助的偵錯功能。"
      }
    },
    {
      "segment_id": "f01228d3",
      "source_content": "You can view installation instructions [in the README](https://github.com/infinitered/reactotron). If you're using Expo, here is an article detailing [how to install on Expo](https://shift.infinite.red/start-using-reactotron-in-your-expo-project-today-in-3-easy-steps-a03d11032a7a).",
      "source_content_hash": "a33710d8addbee49c3eb874e2e3ad55320221e128e4a26ce1216a8f11ce0bca2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您可以在 [README](https://github.com/infinitered/reactotron) 中查看安裝說明。如果您使用 Expo，這裡有一篇文章詳細說明 [如何在 Expo 上安裝](https://shift.infinite.red/start-using-reactotron-in-your-expo-project-today-in-3-easy-steps-a03d11032a7a)。"
      }
    },
    {
      "segment_id": "93028a4e",
      "source_content": "## Troubleshooting",
      "source_content_hash": "659a188b36f9c3262a28539e24c345df4edc9657f59b116b0a1d9887cf2e28e0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 疑難排解"
      }
    },
    {
      "segment_id": "084f365a",
      "source_content": ":::tip\nOnce you have React DevTools running, follow the instructions. If you had your application running prior to opening React DevTools, you may need to [open the Dev Menu](./debugging#accessing-the-dev-menu) to connect it.\n\n![React DevTools connection flow](/docs/assets/debugging-react-devtools-connection.gif)\n:::",
      "source_content_hash": "26ada877c849baeb9641abc00e20e7c5d40fa5cbd24fac3505100b80fb2707aa",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip\n一旦您啟動了 React DevTools，請按照指示操作。如果您在開啟 React DevTools 之前已經運行了應用程式，您可能需要 [開啟開發選單](./debugging#accessing-the-dev-menu) 來連接它。\n\n![React DevTools 連接流程](/docs/assets/debugging-react-devtools-connection.gif)\n:::"
      }
    },
    {
      "segment_id": "edb00ead",
      "source_content": ":::info\nIf connecting to an Android emulator proves troublesome, try running `adb reverse tcp:8097 tcp:8097` in a new terminal.\n:::",
      "source_content_hash": "9cbbbd8eae561b441d47d2648009e28dbb744fc8b3836072511b6b97340a7032",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::info\n如果連接到 Android 模擬器時遇到問題，請嘗試在新的終端機中執行 `adb reverse tcp:8097 tcp:8097`。\n:::"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.74/react-devtools.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.439134+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "5186dc88f3472a769e87346edf80a82549a837ef9b3d4d36fb8fb23e3d19a397"
  }
}