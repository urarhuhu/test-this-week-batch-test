{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.79/native-platforms.md",
  "source_file_content_hash": "bb8e224b75431ccc9f55739630a847c22a52afa3a9034f31ee3fbd99709801ae",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: native-platform\ntitle: Native Platform\n---",
      "source_content_hash": "6f4e07b04e0bbf6f363df6608a70345e2d7ee815370d7029e6a9b19c897f48f7",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "bb42506b",
      "source_content": "Your application may need access to platform features that aren’t directly available from react-native or one of the hundreds of [third-party libraries](https://reactnative.directory/) maintained by the community. Maybe you want to reuse some existing Objective-C, Swift, Java, Kotlin or C++ code from the JavaScript runtime. Whatever your reason, React Native exposes a powerful set of API to connect your native code to your JavaScript application code.",
      "source_content_hash": "38f6a73be8c121a6697801c54dfb95044b1077d7bfe66695569d39b8cf3d7cf2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您的應用程式可能需要存取平台功能，而這些功能無法直接從 react-native 或社群維護的數百個[第三方函式庫](https://reactnative.directory/)中取得。或許您想重複使用現有的 Objective-C、Swift、Java、Kotlin 或 C++ 程式碼，並在 JavaScript 執行環境中執行。無論原因為何，React Native 提供了一組強大的 API，可將您的原生程式碼與 JavaScript 應用程式碼連接起來。"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "This guide introduces:",
      "source_content_hash": "ee7597df9d15f654efef49d7f6ba3e59912f119c78196586e5981f8cfbea26cb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "本指南介紹："
      }
    },
    {
      "segment_id": "4a5b6a68",
      "source_content": "- **Native Modules:** native libraries that have no User Interface (UI) for the user. Examples would be persistent storage, notifications, network events. These are accessible to your user as JavaScript functions and objects.\n- **Native Component:** native platform views, widgets and controllers that are available to your application's JavaScript code through React Components.",
      "source_content_hash": "839bb1e0e493ed89f3ab1434af50efc3caff67a7205b333d5da0f5c22004f71c",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- **原生模組 (Native Modules)：** 沒有使用者介面 (UI) 的原生函式庫。例如持久化儲存、通知、網路事件等。這些功能可透過 JavaScript 函式和物件供使用者存取。\n- **原生元件 (Native Components)：** 原生平台的視圖、小工具和控制器，可透過 React 元件在應用程式的 JavaScript 程式碼中使用。"
      }
    },
    {
      "segment_id": "2e76584d",
      "source_content": ":::note\nYou might have previously been familiar with:\n\n- [Legacy Native Modules](./legacy/native-modules-intro);\n- [Legacy Native Components](./legacy/native-components-android);\n\nThese are our deprecated native module and component API. You can still use many of these legacy libraries with the New Architecture thanks to our interop layers. You should consider:\n\n- using alternative libraries,\n- upgrading to newer library versions that have first-class support for the New Architecture, or\n- port these libraries yourself to Turbo Native Modules or Fabric Native Components.\n\n:::",
      "source_content_hash": "4e62b8a7cee23cf788477419b19ebb42fc89a9a9eef1c1eb7e2c17c57b2f48d9",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::note\n您可能之前熟悉以下內容：\n\n- [舊版原生模組](./legacy/native-modules-intro)；\n- [舊版原生元件](./legacy/native-components-android)；\n\n這些是我們已棄用的原生模組和元件 API。由於我們的互操作層，您仍可在新架構中使用許多這些舊版函式庫。您應考慮：\n\n- 使用替代函式庫，\n- 升級至支援新架構的較新版本函式庫，或\n- 自行將這些函式庫移植至 Turbo 原生模組或 Fabric 原生元件。\n\n:::"
      }
    },
    {
      "segment_id": "b3f5c97c",
      "source_content": "1. Native Modules\n   - [Android & iOS](turbo-native-modules.md)\n   - [Cross-Platform with C++](the-new-architecture/pure-cxx-modules.md)\n   - [Advanced: Custom C++ Types](the-new-architecture/custom-cxx-types.md)\n2. Fabric Native Components\n   - [Android & iOS](fabric-native-components.md)",
      "source_content_hash": "093aef56ca4a7750a12dcd850565c0ca142a64946ef54f62db25c9ec5aeb8f94",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "1. 原生模組\n   - [Android 與 iOS](turbo-native-modules.md)\n   - [跨平台 C++](the-new-architecture/pure-cxx-modules.md)\n   - [進階：自訂 C++ 類型](the-new-architecture/custom-cxx-types.md)\n2. Fabric 原生元件\n   - [Android 與 iOS](fabric-native-components.md)"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.79/native-platforms.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.791832+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "bb8e224b75431ccc9f55739630a847c22a52afa3a9034f31ee3fbd99709801ae"
  }
}