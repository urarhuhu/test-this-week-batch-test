{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.79/appstate.md",
  "source_file_content_hash": "082fe3caea341062198016a306ce12343101fc09216170c25f714bf6b586cd99",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: appstate\ntitle: AppState\n---",
      "source_content_hash": "3c1a490e2d3e810188c34ded3291afc02b31b010f1a1fc53473b5f616de8eb7e",
      "node_type": "yaml",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "bb42506b",
      "source_content": "`AppState` can tell you if the app is in the foreground or background, and notify you when the state changes.",
      "source_content_hash": "9aa21ae40152b808ece4d6a68ed92794a4b128fd09827678816feb3267c629fe",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "AppState is frequently used to determine the intent and proper behavior when handling push notifications.",
      "source_content_hash": "dca6669f1c17eb8611ea310bbed3b9340c2ca5b71648b01a8fa0ef8e80038954",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "1cc03ec8",
      "source_content": "### App States",
      "source_content_hash": "bf7a33a48812ca09882d8175bd9f489b28d224c1795fe4b79ff139a72d2d2f94",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "143e51c1",
      "source_content": "- `active` - The app is running in the foreground\n- `background` - The app is running in the background. The user is either:\n  - in another app\n  - on the home screen\n  - [Android] on another `Activity` (even if it was launched by your app)\n- [iOS] `inactive` - This is a state that occurs when transitioning between foreground & background, and during periods of inactivity such as entering the multitasking view, opening the Notification Center or in the event of an incoming call.",
      "source_content_hash": "0cfbe19e70436658d8b7445b350eba4dcb2ea26aea22d974953c245b1242835e",
      "node_type": "list",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "f6168993",
      "source_content": "For more information, see [Apple's documentation](https://developer.apple.com/documentation/uikit/app_and_scenes/managing_your_app_s_life_cycle)",
      "source_content_hash": "54c92eb53e86f198158e8bf18ca7d49891209c920a14651af8da4bf100f97a60",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "418617bd",
      "source_content": "## Basic Usage",
      "source_content_hash": "2e1f823b8f972f8b6b6da0c66804fcea6cc6439142480a758b86f9fa649954e9",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "2fdadb08",
      "source_content": "To see the current state, you can check `AppState.currentState`, which will be kept up-to-date. However, `currentState` will be null at launch while `AppState` retrieves it over the bridge.",
      "source_content_hash": "d690ff6ff0a2395eb4d3ac9cc8e0dff48ac11378e050ca5a7fa79c75dc1fdd9c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3569d545",
      "source_content": "```SnackPlayer name=AppState%20Example\nimport React, {useRef, useState, useEffect} from 'react';\nimport {AppState, StyleSheet, Text} from 'react-native';\nimport {SafeAreaView, SafeAreaProvider} from 'react-native-safe-area-context';\n\nconst AppStateExample = () => {\n  const appState = useRef(AppState.currentState);\n  const [appStateVisible, setAppStateVisible] = useState(appState.current);\n\n  useEffect(() => {\n    const subscription = AppState.addEventListener('change', nextAppState => {\n      if (\n        appState.current.match(/inactive|background/) &&\n        nextAppState === 'active'\n      ) {\n        console.log('App has come to the foreground!');\n      }\n\n      appState.current = nextAppState;\n      setAppStateVisible(appState.current);\n      console.log('AppState', appState.current);\n    });\n\n    return () => {\n      subscription.remove();\n    };\n  }, []);\n\n  return (\n    <SafeAreaProvider>\n      <SafeAreaView style={styles.container}>\n        <Text>Current state is: {appStateVisible}</Text>\n      </SafeAreaView>\n    </SafeAreaProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AppStateExample;\n```",
      "source_content_hash": "36bc62a14452331148ee06fb66aabe4e03527f5a10010b6aee091fa99af00d77",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "eab056be",
      "source_content": "This example will only ever appear to say \"Current state is: active\" because the app is only visible to the user when in the `active` state, and the null state will happen only momentarily. If you want to experiment with the code we recommend to use your own device instead of embedded preview.",
      "source_content_hash": "6cfe23a54bb8a45fef504df266ab2099e989f5c9bc1945b82c937e20353104f1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "01868def",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "93028a4e",
      "source_content": "# Reference",
      "source_content_hash": "7f466000063da6e2b641eee17b52fffbcef1717169b55b58c4543dc0dc23ea11",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "58ed925f",
      "source_content": "## Events",
      "source_content_hash": "f4776ba3d0fd53ce403170cc2d8cca7a2863d1d0adf8a34232db931e60e91830",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "b936dd6a",
      "source_content": "### `change`",
      "source_content_hash": "4c9f4d88c433b76f32c85b06a31b3f9ff155bfb7a6e0b3f41acc08e4dd28822b",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "a5c5772a",
      "source_content": "This event is received when the app state has changed. The listener is called with one of [the current app state values](appstate#app-states).",
      "source_content_hash": "4e9a18f6bbbf0e7936846eca147a4d05537e54648b08f2edc7374fbbbb7a7ed8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "0a103a02",
      "source_content": "### `memoryWarning`",
      "source_content_hash": "a39aaa65a7491b5467bea906da52cf740e7c444824e2fc29fff90ffb01ef9e57",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "8126f763",
      "source_content": "This event is used in the need of throwing memory warning or releasing it.",
      "source_content_hash": "b0f3f56e6a72dd5c594864dc845a914a6e9409f764525f14236a28b73690421f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3a8d2b95",
      "source_content": "### `focus` <div class=\"label android\">Android</div>",
      "source_content_hash": "388ca4f703940b8c76a692405e6954c722d8477652edebc2adda8bd04780503b",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "5803caac",
      "source_content": "Received when the app gains focus (the user is interacting with the app).",
      "source_content_hash": "8a198b57b8302a85ea884f96c4ea33737a993aa7388cf049f843b27834bff9fb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "39db08de",
      "source_content": "### `blur` <div class=\"label android\">Android</div>",
      "source_content_hash": "293d40f0dbf154164567fd27cf57e9935cb0f5013f914b97df844f851168dc53",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "785750ac",
      "source_content": "Received when the user is not actively interacting with the app. Useful in situations when the user pulls down the [notification drawer](https://developer.android.com/guide/topics/ui/notifiers/notifications#bar-and-drawer). `AppState` won't change but the `blur` event will get fired.",
      "source_content_hash": "dde5af15329374936e48c6a90c1a3883c66f8d84740f48de77c67b93d1baf898",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "b10963d7",
      "source_content": "## Methods",
      "source_content_hash": "f10f482f08112298a7b6d3090f1ea9c2254688471ce31e5da64ed9631f177b5d",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "e06c002e",
      "source_content": "### `addEventListener()`",
      "source_content_hash": "c14ee61a90cacc6adff71fa9f1ff675bde58b04df64bfe24a80a9a4a21f7ced0",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "efbe5e3f",
      "source_content": "```tsx\nstatic addEventListener(\n  type: AppStateEvent,\n  listener: (state: AppStateStatus) => void,\n): NativeEventSubscription;\n```",
      "source_content_hash": "bc809123b577e31f6d4be517a3c2b55ac11d6c45068cbcf8fc6b40a4fb53d272",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "f0984c2a",
      "source_content": "Sets up a function that will be called whenever the specified event type on AppState occurs. Valid values for `eventType` are\n[listed above](#events). Returns the `EventSubscription`.",
      "source_content_hash": "2ee98234e146e638e17ecce0d8f9d11385c0d3fa637ab898dd9141236f3762d4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "d1f76d04",
      "source_content": "## Properties",
      "source_content_hash": "899ecb557156d36aac98f2082474f5ea1e01af3d4a611b79b00dab2a3116aab2",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "8574d51c",
      "source_content": "### `currentState`",
      "source_content_hash": "28f74018823babf46759f160a17fd2f7c40e6f0730c25ec44422627c0a8ac644",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "83537d8d",
      "source_content": "```tsx\nstatic currentState: AppStateStatus;\n```",
      "source_content_hash": "f9e41d98fd4dd70bc32de738001df36c73d70678ba6f0144b1af7254532b698f",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.79/appstate.md",
  "last_updated_timestamp": "2025-06-18T09:36:13.102665+00:00",
  "schema_version": "1.0",
  "translated_versions": {}
}