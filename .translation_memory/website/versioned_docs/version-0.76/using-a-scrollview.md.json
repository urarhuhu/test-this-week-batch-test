{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.76/using-a-scrollview.md",
  "source_file_content_hash": "61ed76154964a6d09275233e7d8f2cb2ab516e153105e58565c00d09bb064a2f",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: using-a-scrollview\ntitle: Using a ScrollView\n---",
      "source_content_hash": "e4a3d43a3e8b8322f13227addf36b53daef8cfff0033557a0fca9090102ee006",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "bb42506b",
      "source_content": "The [ScrollView](scrollview.md) is a generic scrolling container that can contain multiple components and views. The scrollable items can be heterogeneous, and you can scroll both vertically and horizontally (by setting the `horizontal` property).",
      "source_content_hash": "a109b90f96bf92f0094238e07b650e2148632099c60112361a53c79ef413008a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "[ScrollView](scrollview.md) 是一個通用的滾動容器，可包含多個組件和視圖。可滾動的項目可以是異構的，您既可以垂直滾動也可以水平滾動（通過設置 `horizontal` 屬性）。"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "This example creates a vertical `ScrollView` with both images and text mixed together.",
      "source_content_hash": "dc566da7149379d0c91d53aec930134bb61a2b0951e3cd94987a22f01100761a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "此範例創建了一個垂直的 `ScrollView`，其中混合了圖片和文字。"
      }
    },
    {
      "segment_id": "71b63116",
      "source_content": "```SnackPlayer name=Using%20ScrollView\nimport React from 'react';\nimport {Image, ScrollView, Text} from 'react-native';\n\nconst logo = {\n  uri: 'https://reactnative.dev/img/tiny_logo.png',\n  width: 64,\n  height: 64,\n};\n\nconst App = () => (\n  <ScrollView>\n    <Text style={{fontSize: 96}}>Scroll me plz</Text>\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Text style={{fontSize: 96}}>If you like</Text>\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Text style={{fontSize: 96}}>Scrolling down</Text>\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Text style={{fontSize: 96}}>What's the best</Text>\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Text style={{fontSize: 96}}>Framework around?</Text>\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Image source={logo} />\n    <Text style={{fontSize: 80}}>React Native</Text>\n  </ScrollView>\n);\n\nexport default App;\n```",
      "source_content_hash": "b8cdd1816389a8975627c8fa7d53ab141489e589812da3cc0183b92c59519163",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_71b63116"
      }
    },
    {
      "segment_id": "23dfb152",
      "source_content": "ScrollViews can be configured to allow paging through views using swiping gestures by using the `pagingEnabled` props. Swiping horizontally between views can also be implemented on Android using the [ViewPager](https://github.com/react-native-community/react-native-viewpager) component.",
      "source_content_hash": "ee98f358aab36a3f2e332feee57d125f143138ad457f663049f409e81bb8c7a2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "可以通過使用 `pagingEnabled` 屬性配置 ScrollView，允許用戶通過滑動手勢在視圖之間翻頁。在 Android 上，也可以使用 [ViewPager](https://github.com/react-native-community/react-native-viewpager) 組件實現水平滑動切換視圖。"
      }
    },
    {
      "segment_id": "1131ef75",
      "source_content": "On iOS a ScrollView with a single item can be used to allow the user to zoom content. Set up the `maximumZoomScale` and `minimumZoomScale` props and your user will be able to use pinch and expand gestures to zoom in and out.",
      "source_content_hash": "b62200f4f35792eb2309295f5ea46d5e15d4d1afa1aa637d39287c17f374b44e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 iOS 上，帶有單個項目的 ScrollView 可用於允許用戶縮放內容。設置 `maximumZoomScale` 和 `minimumZoomScale` 屬性後，用戶即可使用捏合和展開手勢進行縮放。"
      }
    },
    {
      "segment_id": "8b2a52b1",
      "source_content": "The ScrollView works best to present a small number of things of a limited size. All the elements and views of a `ScrollView` are rendered, even if they are not currently shown on the screen. If you have a long list of items which cannot fit on the screen, you should use a `FlatList` instead. So let's [learn about list views](using-a-listview.md) next.",
      "source_content_hash": "f0dc0ee0d6c49fc7e553fc230b06c312bc7d0977509326d6f544f51b1be2f347",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "ScrollView 最適合展示數量有限且尺寸不大的內容。`ScrollView` 的所有元素和視圖都會被渲染，即使它們當前未顯示在屏幕上。如果您有一個無法在屏幕上完全顯示的長列表，則應該改用 `FlatList`。接下來讓我們[學習列表視圖](using-a-listview.md)。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.76/using-a-scrollview.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.560612+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "61ed76154964a6d09275233e7d8f2cb2ab516e153105e58565c00d09bb064a2f"
  }
}