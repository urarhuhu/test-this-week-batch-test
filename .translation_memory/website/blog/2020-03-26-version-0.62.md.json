{
  "source_file_path_relative_to_docusaurus_root": "blog/2020-03-26-version-0.62.md",
  "source_file_content_hash": "422aa3ecc34e10ac2fe56d153ff9e888558970b393ba51a380445b07910c5e86",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: Announcing React Native 0.62 with Flipper\nauthor: Rick Hanlon\nauthorTitle: React Native Core at Facebook\nauthorURL: 'https://twitter.com/rickhanlonii'\nauthorImageURL: 'https://avatars3.githubusercontent.com/u/2440089?s=460&v=4'\nauthorTwitter: rickhanlonii\ntags: [announcement, release]\n---",
      "source_content_hash": "ca46d76abac01626cf4d1ec918f8b66960ff63e435071932cc523b7308abab65",
      "node_type": "yaml",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "Today we’re releasing React Native version 0.62 which includes support for Flipper by default.",
      "source_content_hash": "ab9452d087dd578037b631acdacadb714e5bcee8ee9f09b663d44bc838c9a7f0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3e6699f4",
      "source_content": "<!--alex ignore master-->",
      "source_content_hash": "fb7da8ecbb16b35af54ab266109b9f8e239f47c78fb205e17e8cba690eac9486",
      "node_type": "comment",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "cf898102",
      "source_content": "This release comes in the midst of a global pandemic. We’re releasing this version today to respect the work of hundreds of contributors who made this release possible and to prevent the release from falling too far behind master. Please be mindful of the reduced capacity of contributors to help with issues and prepare to delay upgrading if necessary.",
      "source_content_hash": "ba5354573599672327f4eb0e09c233a878ff997ccc3d0456dae7362f3f8a5232",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3daf1b88",
      "source_content": "## Flipper by default",
      "source_content_hash": "04a9eb0160213100e2d686d838a645ed62e8100ae0fcdd6ccaea3a6519eec0cb",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "f6168993",
      "source_content": "[Flipper](https://fbflipper.com/) is a developer tool for debugging mobile apps. It’s popular in the Android and iOS communities, and in this release we’ve enabled support by default for new and existing React Native apps.",
      "source_content_hash": "a83a4b5756add2510054ea0aebe4caeba60b650a838741e0e6d9d0c0172340d8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "![Screenshot of Flipper for React Native](/blog/assets/0.62-flipper.png)",
      "source_content_hash": "8b3e6e0ca6855c8bc867959eb30edd5911d319c75964936b5c76fdfb145d4385",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "2fdadb08",
      "source_content": "Flipper provides the following features out of the box:",
      "source_content_hash": "ae44d1c6b039204ca3618f9ec330e4145171f214e3f2941252dff1af7e580ee2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "44d89370",
      "source_content": "- **Metro Actions**: Reload the app and trigger the Dev Menu right from the toolbar.\n- **Crash Reporter**: View crash reports from Android and iOS devices.\n- **React DevTools**: Use the newest version of React DevTools right alongside all your other tools.\n- **Network Inspector**: View all of the network requests made by device applications.\n- **Metro and Device Logs**: View, search, and filter all logs from both Metro and the Device.\n- **Native Layout Inspector**: View and edit the native layout output by the React Native renderer.\n- **Database and Preference Inspectors**: View and edit the device databases and preferences.",
      "source_content_hash": "65c2becd1252a1bd8420c6b74ef81ddcc8bc931253439229556dde68b3ee7418",
      "node_type": "list",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "4daf5cdd",
      "source_content": "Additionally, since Flipper is an extensible platform, it provides a marketplace that pulls plugins from NPM so you can publish and install custom plugins specific to your workflows. See the available plugins [here](https://www.npmjs.com/search?q=flipper-plugin).",
      "source_content_hash": "3969ef0bc403d7b94c4a9b42ee9f4b8088edd5dab2269d4b05144a9e45ba6eed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "bdc231b1",
      "source_content": "For more information, check out the [Flipper documentation](https://fbflipper.com/docs/features/react-native).",
      "source_content_hash": "2bd66ce18a1252e8fcd645f1948c209afe19821e9bfcafe292df88634024488b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3b7478ea",
      "source_content": "## New dark mode features",
      "source_content_hash": "8597833f85daa0a8d08e6c3dfd5b07a39b5072039b41eb1c18533816e37227bc",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "c3a738de",
      "source_content": "We’ve added a new `Appearance` module to provide access to the user's appearance preferences, such as their preferred color scheme (light or dark).",
      "source_content_hash": "f1dee9c2c3d734b3c0b9692eb7b3d9e50202a7ee7c7ff67744e53ba083ddb91a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "bca33820",
      "source_content": "```js\nconst colorScheme = Appearance.getColorScheme();\nif (colorScheme === 'dark') {\n  // Use dark color scheme\n}\n```",
      "source_content_hash": "1cafe3cdf044b98463d18f770ceec9baeb4762a4643bb5ac61e3df81b1ea270a",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "a9d49f92",
      "source_content": "We’ve also added a hook to subscribe to state updates to the users preferences:",
      "source_content_hash": "ff2ddc1de6c4ec39638a7ddca537d66462ad2bc6bf36ae9ce54fd829650aef49",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "95318d95",
      "source_content": "```jsx\nimport {Text, useColorScheme} from 'react-native';\n\nconst MyComponent = () => {\n  const colorScheme = useColorScheme();\n  return <Text>useColorScheme(): {colorScheme}</Text>;\n};\n```",
      "source_content_hash": "98e0fd02f9b7e9026571a3671a354c3810e11d5db95937b170dd81904231a3fa",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "23dfb152",
      "source_content": "See the docs for [Appearance](/docs/appearance) and [useColorScheme](/docs/usecolorscheme) for more information.",
      "source_content_hash": "d4c38474e304e17e640cae03c3879e90f168869cb609e740c3352e6b23014ca2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "e912d935",
      "source_content": "## Moving Apple TV to react-native-tvos",
      "source_content_hash": "478ed99cc87229cee59529712b098e40676688f722e83fa2ae790177bf240992",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "8b2a52b1",
      "source_content": "As part of our [Lean Core effort](/blog/#lean-core) and to bring Apple TV in line with other platforms like React Native Windows and React Native macOS, we’ve started to remove Apple TV specific code from core.",
      "source_content_hash": "807486541dd15a868efba47188c205d376875c0fe36ba85a904087480fbfea54",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "5dae11e3",
      "source_content": "Going forward, Apple TV support for React Native will be maintained in [react-native-community/react-native-tvos](https://github.com/react-native-community/react-native-tvos) along with the corresponding `react-native-tvos` NPM package. This is a full fork of the main repository, with only the changes needed to support Apple TV.",
      "source_content_hash": "a68d38aec9b7f6af55bf717b169fec6b3c75d4cc0c09a8cd67de0db0057cc24b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "0bb95128",
      "source_content": "Releases of `react-native-tvos` will be based on the public release of React Native. For this 0.62 release of `react-native` please upgrade Apple TV projects to use `react-native-tvos` 0.62.",
      "source_content_hash": "9b452d22f3763255d2637691ba3dee214e1175137bacdc29f1fcfd4b8b79d439",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3ef18741",
      "source_content": "## More upgrade support",
      "source_content_hash": "ed5ca12b33a3a75af15e2b850f0e59d004557ffff0db5e4bde4107d750842ce6",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "e7772088",
      "source_content": "When 0.61 was released, the community introduced a new [upgrade helper](https://react-native-community.github.io/upgrade-helper/) tool to support developers upgrading to new versions of React Native. The upgrade helper provides a diff of changes from the version you're on to the version you're targeting, allowing you to see the changes that need to be made for your specific upgrade.",
      "source_content_hash": "572c375d8c94c1bde350515bbf2152626cf8ca566ed22a669630cb92697ada90",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "eab056be",
      "source_content": "Even with this tool, issues come up when upgrading. Today we're introducing more dedicated upgrading support by announcing [Upgrade-Support](https://github.com/react-native-community/upgrade-support). Upgrade Support is a GitHub issue tracker where users can submit issues specific to upgrading their projects to receive help from the community.",
      "source_content_hash": "12a56e7c8cd61fc57286c9f74054d408173cf5dcbc4a800db729eb951e6dd3a7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "f01228d3",
      "source_content": "We're always working to improve the upgrade experience, and we hope that these tools give users the support they need in the edge cases we haven't covered yet.",
      "source_content_hash": "1708552e8d088346a76d281d9d900e1d3c242e16740aa1121ce6a951647f5a01",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "93028a4e",
      "source_content": "## Other improvements",
      "source_content_hash": "05fdf20b4d0cc60cfdb12d513a12776fbd7a3152fe0284273276d801a0402f85",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "1316cb90",
      "source_content": "- **LogBox**: We’re adding the new LogBox error and warning experience as an opt-in; to enable it, add `require('react-native').unstable_enableLogBox()` to your `index.js` file.\n- **React DevTools v4**: This change includes an upgrade to the [latest React DevTools](https://reactjs.org/blog/2019/08/15/new-react-devtools.html) which offers significant performance gains, an improved navigation experience, and full support for React Hooks.\n- **Accessibility improvements**: We’ve made improvements to accessibility including adding [accessibilityValue](https://reactnative.dev/docs/accessibility#accessibilityvalue-ios-android), missing props on [Touchables](https://github.com/facebook/react-native/commit/8c0c860e38f57e18296f689e47dfb4a54088c260), `onSlidingComplete` [accessibility events](https://github.com/facebook/react-native/commit/c7aa6dc8270c0eabc913fe6c617c8131e3f4b3c5), and changing the default role of Switch component from `\"button\"` to `\"switch\"`.",
      "source_content_hash": "505b26b60f4a03fa076b8ed461c5fcb4329790eeffdd10eb6506c4bac23dbaa2",
      "node_type": "list",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "66819c78",
      "source_content": "## Breaking changes",
      "source_content_hash": "d1c69ba9bc90db546d2a6a7611ea8e640505ca79693bd7ae7fdfd3a792d9dcc5",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "5dbc17cf",
      "source_content": "- **Remove PropTypes**: We're removing `propTypes` from core components in order to reduce the app size impact of React Native core and to favor static type systems which check at compile time instead of runtime.\n- **Remove accessibilityStates**: We’ve [removed](https://github.com/facebook/react-native/commit/7b35f427fd66cb0f36921b992095fe5b3c14d8b9) the deprecated `accessibilityStates` property in favor of the new `accessibilityState` prop which is a more semantically rich way for components to describe information about their state to accessibility services.\n- **TextInput changes**: We removed `onTextInput` [from TextInput](https://github.com/facebook/react-native/commit/3f7e0a2c9601fc186f25bfd794cd0008ac3983ab) as it’s uncommon, not W3C compliant, and difficult to implement in [Fabric](https://github.com/react-native-community/discussions-and-proposals/issues/4). We also removed the undocumented `inputView` prop, and `selectionState`.",
      "source_content_hash": "5b1ade1151577ad87460ae857e5856101cea25d2d25c9d0e02e2f62c18154019",
      "node_type": "list",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "3a8d2b95",
      "source_content": "## Deprecations",
      "source_content_hash": "953f8e79caf2a4d2dd5f85c8c8d7a311fe34c8bff07e2cafc0e4f6e6ec5c9849",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "49f9f337",
      "source_content": "- `AccessibilityInfo.fetch` was already deprecated, but in this release we [added a warning](https://github.com/facebook/react-native/commit/523ab8333800afbfb169c6fd70ab6611fe07cc2a).\n- Setting `useNativeDriver` is [now required](https://github.com/facebook/react-native/commit/5876052615f4858ed5fc32fa3da9b64695974238) to support switching the default in the future.\n- The `ref` of an `Animated` component is now the internal component and [deprecated](https://github.com/facebook/react-native/commit/66e72bb4e00aafbcb9f450ed5db261d98f99f82a) `getNode`.",
      "source_content_hash": "9c011aa143609683c352f636f22daf4291ab5a9960b66fda9be1645d62ccac08",
      "node_type": "list",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "e33a2404",
      "source_content": "## Thanks",
      "source_content_hash": "1e57366f4f2b8342ce1186455878164e2c099d41b453de456c1a921520e0df59",
      "node_type": "heading",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "82e90254",
      "source_content": "Thank you to the hundreds of contributors that helped make 0.62 possible!",
      "source_content_hash": "dcdb57692214a8610705c645ad5c282e3a3f08805187693438daaa65c6bbb6da",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "2822251a",
      "source_content": "To see all the updates, take a look at the [0.62 changelog](https://github.com/facebook/react-native/blob/main/CHANGELOG.md#v0620).",
      "source_content_hash": "c2235718a10eb6ba64de261b86dd45ad4ab2220a1c271f56c1c04957f25690f4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog/2020-03-26-version-0.62.md",
  "last_updated_timestamp": "2025-06-18T09:36:14.062285+00:00",
  "schema_version": "1.0",
  "translated_versions": {}
}