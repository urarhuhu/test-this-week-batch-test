{
  "source_file_path_relative_to_docusaurus_root": "blog/2015-11-23-making-react-native-apps-accessible.md",
  "source_file_content_hash": "cf31b291b1be1daa68a65090841c442a313ce8d44cd438836fa09fb0a872de23",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: Making React Native apps accessible\nauthor: Georgiy Kassabli\nauthorTitle: Software Engineer at Facebook\nauthorURL: 'https://www.facebook.com/georgiy.kassabli'\nauthorImageURL: 'https://scontent-sea1-1.xx.fbcdn.net/v/t1.0-1/c0.0.160.160/p160x160/1978838_795592927136196_1205041943_n.jpg?_nc_log=1&oh=d7a500fdece1250955a4d27b0a80fee2&oe=59E8165A'\nhero: '/blog/assets/blue-hero.png'\ntags: [engineering]\n---",
      "source_content_hash": "1760d35732824c6e36a32c012b2f4258dac40b11256b4f502ac99c6bbebaff5a",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "With the recent launch of React on web and React Native on mobile, we've provided a new front-end framework for developers to build products. One key aspect of building a robust product is ensuring that anyone can use it, including people who have vision loss or other disabilities. The Accessibility API for React and React Native enables you to make any React-powered experience usable by someone who may use assistive technology, like a screen reader for the blind and visually impaired.",
      "source_content_hash": "7f705d1bc03c009a3c0df7390b98b82bc14ae9a1b4aef3b06642f558aa17d0a1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "隨著 React 在網頁端和 React Native 在行動端的推出，我們為開發者提供了一個建構產品的新前端框架。打造穩健產品的關鍵環節之一，是確保包含視障或其他障礙人士在內的所有使用者都能使用。React 和 React Native 的無障礙功能 API（Accessibility API）能讓您開發的 React 應用程式，兼容盲人與視障者使用的螢幕閱讀器等輔助技術。"
      }
    },
    {
      "segment_id": "180bddb1",
      "source_content": "For this post, we're going to focus on React Native apps. We've designed the React Accessibility API to look and feel similar to the Android and iOS APIs. If you've developed accessible applications for Android, iOS, or the web before, you should feel comfortable with the framework and nomenclature of the React AX API. For instance, you can make a UI element _accessible_ (therefore exposed to assistive technology) and use _accessibilityLabel_ to provide a string description for the element:",
      "source_content_hash": "5df3e99f0dcbd2c282fa1a73b4042c75453c11c74d09537cf48a1c18aea73917",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "本文將聚焦於 React Native 應用程式。我們將 React 無障礙 API 的設計理念與 Android、iOS API 保持一致。若您曾為 Android、iOS 或網頁開發過無障礙應用程式，應該會對 React AX API 的架構和術語感到熟悉。例如，您可以將 UI 元素標記為 _accessible_（從而讓輔助技術偵測），並使用 _accessibilityLabel_ 為元素提供文字描述："
      }
    },
    {
      "segment_id": "4b395385",
      "source_content": "```\n<View accessible={true} accessibilityLabel=”This is simple view”>\n```",
      "source_content_hash": "7db4e28dd5a80a486a2f34d5d0a012a82267699c9b7fde94c47d24ba25169657",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4b395385"
      }
    },
    {
      "segment_id": "f6168993",
      "source_content": "Let's walk through a slightly more involved application of the React AX API by looking at one of Facebook's own React-powered products: the **Ads Manager app**.",
      "source_content_hash": "577e3cf7429ed198cb14e9209ac48a982b8087a46d2cfcd4c2dfe8802fd34db6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "讓我們透過 Facebook 自家的 React 產品 **廣告管理員應用程式**，深入探討 React AX API 的進階應用實例："
      }
    },
    {
      "segment_id": "1485a88b",
      "source_content": "<footer>\n  <a\n    href=\"https://code.facebook.com/posts/435862739941212/making-react-native-apps-accessible/\"\n    className=\"btn\">Read more</a>\n</footer>",
      "source_content_hash": "ea64f39a716919542b5534230e03a051ca22c9ce8b16d6afbea9586f1ab1d0e9",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_1485a88b"
      }
    },
    {
      "segment_id": "8e773518",
      "source_content": "> This is an excerpt. Read the rest of the post on [Facebook Code](https://code.facebook.com/posts/435862739941212/making-react-native-apps-accessible/).",
      "source_content_hash": "0093966d97c9082c134629cbf6c923808050b65d5bd7a395402d6d3158e498f4",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-hant": "> 此為節錄內容，完整文章請見 [Facebook Code](https://code.facebook.com/posts/435862739941212/making-react-native-apps-accessible/)。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog/2015-11-23-making-react-native-apps-accessible.md",
  "last_updated_timestamp": "2025-06-18T10:03:59.204518+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "cf31b291b1be1daa68a65090841c442a313ce8d44cd438836fa09fb0a872de23"
  }
}